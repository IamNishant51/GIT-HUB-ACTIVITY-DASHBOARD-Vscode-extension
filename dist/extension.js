(()=>{var e={18:e=>{"use strict";e.exports=require("tty")},23:e=>{"use strict";e.exports=require("util")},33:(e,t,n)=>{const r=n(18),o=n(23);t.init=function(e){e.inspectOpts={};const n=Object.keys(t.inspectOpts);for(let r=0;r<n.length;r++)e.inspectOpts[n[r]]=t.inspectOpts[n[r]]},t.log=function(...e){return process.stderr.write(o.formatWithOptions(t.inspectOpts,...e)+"\n")},t.formatArgs=function(n){const{namespace:r,useColors:o}=this;if(o){const t=this.color,o="[3"+(t<8?t:"8;5;"+t),s=`  ${o};1m${r} [0m`;n[0]=s+n[0].split("\n").join("\n"+s),n.push(o+"m+"+e.exports.humanize(this.diff)+"[0m")}else n[0]=(t.inspectOpts.hideDate?"":(new Date).toISOString()+" ")+r+" "+n[0]},t.save=function(e){e?process.env.DEBUG=e:delete process.env.DEBUG},t.load=function(){return process.env.DEBUG},t.useColors=function(){return"colors"in t.inspectOpts?Boolean(t.inspectOpts.colors):r.isatty(process.stderr.fd)},t.destroy=o.deprecate(()=>{},"Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."),t.colors=[6,2,3,4,5,1];try{const e=n(Object(function(){var e=new Error("Cannot find module 'supports-color'");throw e.code="MODULE_NOT_FOUND",e}()));e&&(e.stderr||e).level>=2&&(t.colors=[20,21,26,27,32,33,38,39,40,41,42,43,44,45,56,57,62,63,68,69,74,75,76,77,78,79,80,81,92,93,98,99,112,113,128,129,134,135,148,149,160,161,162,163,164,165,166,167,168,169,170,171,172,173,178,179,184,185,196,197,198,199,200,201,202,203,204,205,206,207,208,209,214,215,220,221])}catch(e){}t.inspectOpts=Object.keys(process.env).filter(e=>/^debug_/i.test(e)).reduce((e,t)=>{const n=t.substring(6).toLowerCase().replace(/_([a-z])/g,(e,t)=>t.toUpperCase());let r=process.env[t];return r=!!/^(yes|on|true|enabled)$/i.test(r)||!/^(no|off|false|disabled)$/i.test(r)&&("null"===r?null:Number(r)),e[n]=r,e},{}),e.exports=n(736)(t);const{formatters:s}=e.exports;s.o=function(e){return this.inspectOpts.colors=this.useColors,o.inspect(e,this.inspectOpts).split("\n").map(e=>e.trim()).join(" ")},s.O=function(e){return this.inspectOpts.colors=this.useColors,o.inspect(e,this.inspectOpts)}},100:(e,t)=>{"use strict";function n(){let e,t,n="pending";return{promise:new Promise((n,r)=>{e=n,t=r}),done(t){"pending"===n&&(n="resolved",e(t))},fail(e){"pending"===n&&(n="rejected",t(e))},get fulfilled(){return"pending"!==n},get status(){return n}}}Object.defineProperty(t,"__esModule",{value:!0}),t.createDeferred=t.deferred=void 0,t.deferred=n,t.createDeferred=n,t.default=n},265:function(e,t,n){"use strict";var r,o=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||(r=function(e){return r=Object.getOwnPropertyNames||function(e){var t=[];for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[t.length]=n);return t},r(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n=r(e),i=0;i<n.length;i++)"default"!==n[i]&&o(t,e,n[i]);return s(t,e),t}),a=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))(function(o,s){function i(e){try{c(r.next(e))}catch(e){s(e)}}function a(e){try{c(r.throw(e))}catch(e){s(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n(function(e){e(t)})).then(i,a)}c((r=r.apply(e,t||[])).next())})},c=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.activate=function(e){m=e;const t=new v;l.window.registerTreeDataProvider("github-activity-dashboard",t);const n=new T;l.window.registerTreeDataProvider("github-repositories",n);const r=new E;l.window.registerTreeDataProvider("github-history",r);const o=new k;l.window.registerTreeDataProvider("github-stars",o);const s=new w;l.window.registerTreeDataProvider("github-notifications",s);const i=new y;l.window.registerTreeDataProvider("github-profile",i),l.window.registerTreeDataProvider("github-activity-dashboard",t),l.window.registerTreeDataProvider("github-repositories",n),l.window.registerTreeDataProvider("github-history",r),l.window.registerTreeDataProvider("github-stars",o),l.window.registerTreeDataProvider("github-notifications",s),l.window.registerTreeDataProvider("github-profile",i);const c=new x;l.window.registerTreeDataProvider("github-profile-repos",c);const h=l.window.createTreeView("github-profile-repos",{treeDataProvider:c,showCollapseAll:!0});e.subscriptions.push(h),console.log("Profile Repositories tree view created:",h?"YES":"NO"),setTimeout(()=>{l.commands.executeCommand("workbench.view.extension.github-dashboard-container"),l.commands.executeCommand("github-activity-dashboard.refresh"),h.reveal(null,{select:!1,focus:!1}),l.commands.executeCommand("github-activity-dashboard.openProfile")},1e3),l.commands.registerCommand("github-activity-dashboard.refresh",()=>a(this,void 0,void 0,function*(){t.refresh(),n.refresh(),r.refresh(),o.refresh(),s.refresh(),i.refresh(),yield c.refresh()})),l.commands.registerCommand("github-activity-dashboard.refreshProfile",e=>a(this,void 0,void 0,function*(){if(console.log("RefreshProfile command called with data:",e),console.log("ActiveProfilePanel status:",!!g,"Visible:",null==g?void 0:g.visible),g)try{console.log("Refreshing profile panel...");const t=yield l.authentication.getSession("github",["repo","delete_repo"],{createIfNone:!0}),n=new d.Octokit({auth:t.accessToken}),r=yield n.repos.listForAuthenticatedUser({sort:"updated",per_page:100});console.log("Sending repoCreated message to webview with",r.data.length,"repositories"),console.log("Panel webview exists:",!!g.webview),yield g.webview.postMessage({command:"repoCreated",repositories:r.data,message:(null==e?void 0:e.repoName)?`Repository "${e.repoName}" created successfully!`:"Repositories updated"}),console.log("Message sent successfully")}catch(e){console.error("Error refreshing profile:",e)}else console.log("No active profile panel to refresh")})),l.commands.registerCommand("github-activity-dashboard.createRepo",()=>a(this,void 0,void 0,function*(){let t=[],r=[];try{const e=yield l.authentication.getSession("github",["repo"],{createIfNone:!0}),n=new d.Octokit({auth:e.accessToken});try{const e=yield n.gitignore.getAllTemplates();t=Array.isArray(e.data)?e.data:[]}catch(e){console.log("Could not fetch gitignore templates",e)}try{const e=yield n.licenses.getAllCommonlyUsed();r=Array.isArray(e.data)?e.data.map(e=>({key:e.key,name:e.name,spdx_id:e.spdx_id})):[]}catch(e){console.log("Could not fetch license templates",e)}}catch(e){l.window.showErrorMessage("Authentication required to create a repository.")}const o=l.window.createWebviewPanel("createRepo","Create a New Repository",l.ViewColumn.One,{enableScripts:!0,localResourceRoots:[l.Uri.joinPath(e.extensionUri,"resources")]}),s=C();o.webview.html=(0,u.getCreateRepoWebviewContent)(o.webview,s,e.extensionUri,t,r),o.webview.onDidReceiveMessage(e=>a(this,void 0,void 0,function*(){if("createRepository"===e.command){const t=yield l.authentication.getSession("github",["repo"],{createIfNone:!0});if(!t)return l.window.showErrorMessage("You must be signed in to GitHub to create a repository."),void o.webview.postMessage({command:"creationFailed"});const r=new d.Octokit({auth:t.accessToken});try{const t=e.initReadme||!!e.gitignoreTemplate||!!e.licenseTemplate,s=yield r.repos.createForAuthenticatedUser({name:e.repoName,description:e.description,private:e.isPrivate,auto_init:t,gitignore_template:e.gitignoreTemplate||void 0,license_template:e.licenseTemplate||void 0});try{e.defaultBranch&&"main"!==e.defaultBranch&&(yield r.repos.renameBranch({owner:s.data.owner.login,repo:s.data.name,branch:"main",new_name:e.defaultBranch}))}catch(e){console.log("Branch rename skipped/failed",e)}try{Array.isArray(e.topics)&&e.topics.length&&(yield r.repos.replaceAllTopics({owner:s.data.owner.login,repo:s.data.name,names:e.topics}))}catch(e){console.log("Topics update failed",e)}try{e.homepage&&(yield r.repos.update({owner:s.data.owner.login,repo:s.data.name,homepage:e.homepage}))}catch(e){console.log("Homepage update failed",e)}l.window.showInformationMessage(`Successfully created repository "${e.repoName}"`),n.refresh(),c.refresh();try{g?(console.log("Revealing existing profile panel after repo creation"),g.reveal(l.ViewColumn.One),l.commands.executeCommand("github-activity-dashboard.refreshProfile",{type:"repoCreated",repoName:e.repoName})):(console.log("Opening profile panel after repo creation"),yield l.commands.executeCommand("github-activity-dashboard.openProfile"),l.commands.executeCommand("github-activity-dashboard.refreshProfile",{type:"repoCreated",repoName:e.repoName}))}catch(e){console.log("Error redirecting to profile after creation",e)}try{o.dispose()}catch(e){}}catch(e){l.window.showErrorMessage(`Failed to create repository: ${e.message}`),o.webview.postMessage({command:"creationFailed"})}}}),void 0,e.subscriptions)})),l.commands.registerCommand("github-activity-dashboard.openProfile",()=>a(this,void 0,void 0,function*(){var t,r,s,i;try{if(g){console.log("Profile panel already exists, revealing it");try{return void g.reveal(l.ViewColumn.One)}catch(e){console.log("Panel was disposed, clearing reference"),g=void 0}}console.log("Creating new profile panel...");const p=yield l.authentication.getSession("github",["repo","delete_repo"],{createIfNone:!0}),u=new d.Octokit({auth:p.accessToken}),m=(yield u.users.getAuthenticated()).data;yield c.refresh();const h=c.repositories;let v=[];try{v=(yield u.orgs.listForAuthenticatedUser()).data}catch(e){console.log("Could not fetch organizations:",e)}let y=[];try{const e=`\n                    query {\n                        user(login: "${m.login}") {\n                            pinnedItems(first: 6, types: REPOSITORY) {\n                                nodes {\n                                    ... on Repository {\n                                        name\n                                        description\n                                        url\n                                        stargazers {\n                                            totalCount\n                                    // keep panel open for seamless navigation\n                                        forks {\n                                            totalCount\n                                        }\n                                        primaryLanguage {\n                                            name\n                                            color\n                                        }\n                                        isPrivate\n                                    }\n                                }\n                            }\n                        }\n                    }\n                `;y=(yield u.graphql(e)).user.pinnedItems.nodes}catch(e){console.log("Could not fetch pinned repos:",e)}let w=[];try{w=(yield u.activity.listEventsForAuthenticatedUser({username:m.login,per_page:20})).data}catch(e){console.log("Could not fetch recent events:",e)}let T=[];try{T=(yield u.search.issuesAndPullRequests({q:`author:${m.login} is:pr`,sort:"updated",order:"desc",per_page:10})).data.items}catch(e){console.log("Could not fetch recent pull requests:",e)}let E=[];try{E=(yield u.search.issuesAndPullRequests({q:`author:${m.login} is:issue`,sort:"updated",order:"desc",per_page:10})).data.items}catch(e){console.log("Could not fetch recent issues:",e)}let k=[];try{k=(yield u.gists.listForUser({username:m.login,per_page:10})).data}catch(e){console.log("Could not fetch user gists:",e)}let x=[];try{x=(yield u.users.listFollowersForUser({username:m.login,per_page:20})).data}catch(e){console.log("Could not fetch followers:",e)}let _=[];try{_=(yield u.users.listFollowingForUser({username:m.login,per_page:20})).data}catch(e){console.log("Could not fetch following:",e)}let S=null;try{const e=`\n                    query {\n                        user(login: "${m.login}") {\n                            sponsorsListing {\n                                name\n                                description\n                                tiers(first: 3) {\n                                    nodes {\n                                        name\n                                        monthlyPriceInCents\n                                    }\n                                }\n                            }\n                            sponsorshipsAsMaintainer(first: 5) {\n                                nodes {\n                                    sponsor {\n                                        login\n                                        avatarUrl\n                                        name\n                                    }\n                                    tier {\n                                        name\n                                        monthlyPriceInCents\n                                    }\n                                }\n                            }\n                            sponsorshipsAsSponsor(first: 5) {\n                                nodes {\n                                    sponsorable {\n                                        login\n                                        avatarUrl\n                                        name\n                                    }\n                                    tier {\n                                        name\n                                        monthlyPriceInCents\n                                    }\n                                }\n                            }\n                        }\n                    }\n                `;S=(yield u.graphql(e)).user}catch(e){console.log("Could not fetch sponsors data:",e)}const P={};h.forEach(e=>{e.language&&(P[e.language]=(P[e.language]||0)+1)});const R=Object.entries(P).sort(([,e],[,t])=>t-e).slice(0,8);let F={};try{const e="\n                    query($login: String!) {\n                        user(login: $login) {\n                            issues(last: 100, orderBy: {field: UPDATED_AT, direction: DESC}) {\n                                nodes {\n                                    updatedAt\n                                    comments {\n                                        totalCount\n                                    }\n                                }\n                            }\n                            pullRequests(last: 100, orderBy: {field: UPDATED_AT, direction: DESC}) {\n                                nodes {\n                                    updatedAt\n                                    comments {\n                                        totalCount\n                                    }\n                                }\n                            }\n                        }\n                    }\n                ",n=yield u.graphql(e,{login:m.login});console.log("Comment response:",n);const o=(null===(r=null===(t=n.user)||void 0===t?void 0:t.issues)||void 0===r?void 0:r.nodes)||[],a=(null===(i=null===(s=n.user)||void 0===s?void 0:s.pullRequests)||void 0===i?void 0:i.nodes)||[];console.log("Issues found:",o.length),console.log("PRs found:",a.length),[...o,...a].forEach(e=>{if(e&&e.comments&&e.comments.totalCount>0){const t=new Date(e.updatedAt).toISOString().split("T")[0];F[t]=(F[t]||0)+e.comments.totalCount,console.log("Added comment activity for date:",t,"count:",e.comments.totalCount)}}),console.log("Final comment activity:",F);const c=new Date,l=0===Object.keys(F).length;l&&console.log("No real comment activity found, adding guaranteed sample data");for(let e=0;e<30;e++){const t=new Date(c);t.setDate(c.getDate()-e);const n=t.toISOString().split("T")[0];let r=0;e%7==0?r=4:e%3==0?r=2:e%2==0&&(r=1),F[n]||(F[n]=r)}l&&console.log("Added sample data for testing. Final comment activity:",F)}catch(e){console.log("Could not fetch comment activity:",e);const t=new Date;console.log("Adding fallback sample data due to error");for(let e=0;e<30;e++){const n=new Date(t);n.setDate(t.getDate()-e);const r=n.toISOString().split("T")[0],o=Math.floor(5*Math.random());o>0&&(F[r]=o)}}const G=l.window.createWebviewPanel("githubProfile",`GitHub Profile - ${m.login}`,l.ViewColumn.One,{enableScripts:!0});g=G,console.log("Profile panel created and set as active"),G.onDidDispose(()=>{console.log("Profile panel disposed"),g=void 0});let D=[];try{D=(yield u.activity.listReposStarredByAuthenticatedUser({sort:"updated",per_page:50})).data}catch(e){console.log("Could not fetch starred repos:",e)}G.webview.html=function(e,t,n=[],r=[],o=[],s=[],i=[],a=[],c=[],l=[],d=null,p={}){const u=C(),g=JSON.stringify(n),m=JSON.stringify(a),h=JSON.stringify(o);return function(e){let t='<div class="heatmap-grid">';const n=new Date;Array.from({length:365},(e,t)=>{const r=new Date(n);return r.setDate(n.getDate()-t),r}).reverse().forEach(n=>{const r=n.toISOString().split("T")[0],o=e[r]||0;let s=0;o>0&&o<=2?s=1:o>2&&o<=5?s=2:o>5&&o<=10?s=3:o>10&&(s=4),t+=`<div class="heatmap-day level-${s}" title="${o} contributions on ${r}"></div>`}),t+="</div>"}(p),`\n        <!DOCTYPE html>\n        <html lang="en">\n        <head>\n            <meta charset="UTF-8">\n            <meta name="viewport" content="width=device-width, initial-scale=1.0">\n            <meta http-equiv="Content-Security-Policy" content="default-src 'none'; img-src ${e.cspSource} https: data:; style-src ${e.cspSource} 'unsafe-inline'; script-src 'nonce-${u}';">\n            <title>GitHub Profile</title>\n            <style>\n                /* GitHub Exact Colors */\n                :root {\n                    --color-canvas-default: #0d1117;\n                    --color-canvas-subtle: #161b22;\n                    --color-canvas-inset: #010409;\n                    --color-border-default: #30363d;\n                    --color-border-muted: #21262d;\n                    --color-neutral-muted: rgba(110,118,129,0.4);\n                    --color-accent-fg: #2f81f7;\n                    --color-accent-emphasis: #1158c7;\n                    --color-accent-subtle: rgba(56,139,253,0.1);\n                    --color-success-fg: #3fb950;\n                    --color-attention-fg: #d29922;\n                    --color-danger-fg: #da3633;\n                    --color-fg-default: #e6edf3;\n                    --color-fg-muted: #7d8590;\n                    --color-fg-subtle: #656d76;\n                    --color-fg-on-emphasis: #ffffff;\n                }\n\n                * {\n                    margin: 0;\n                    padding: 0;\n                    box-sizing: border-box;\n                }\n\n                body {\n                    font-family: -apple-system,BlinkMacSystemFont,"Segoe UI","Noto Sans",Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji";\n                    font-size: 14px;\n                    line-height: 1.5;\n                    color: var(--color-fg-default);\n                    background-color: var(--color-canvas-default);\n                    margin: 0;\n                    padding: 0;\n                }\n\n                .AppHeader {\n                    background-color: var(--color-canvas-subtle);\n                    border-bottom: 1px solid var(--color-border-default);\n                    padding: 16px 32px;\n                    display: flex;\n                    justify-content: space-between;\n                    align-items: center;\n                }\n\n                .AppHeader-globalBar {\n                    display: flex;\n                    align-items: center;\n                    gap: 16px;\n                }\n\n                .github-logo {\n                    fill: var(--color-fg-default);\n                    width: 32px;\n                    height: 32px;\n                }\n\n                .HeaderMenu-link {\n                    color: var(--color-fg-default);\n                    text-decoration: none;\n                    font-weight: 600;\n                    padding: 8px 16px;\n                    border-radius: 6px;\n                    transition: background-color 0.2s;\n                }\n\n                .HeaderMenu-link:hover {\n                    background-color: var(--color-neutral-muted);\n                }\n\n                .profile-container {\n                    max-width: 1280px;\n                    margin: 0 auto;\n                    padding: 24px;\n                    display: grid;\n                    grid-template-columns: 320px 1fr;\n                    gap: 24px;\n                }\n\n                /* Left Sidebar */\n                .profile-sidebar {\n                    position: sticky;\n                    top: 24px;\n                    align-self: start;\n                }\n\n                .avatar-wrapper {\n                    position: relative;\n                    margin-bottom: 16px;\n                }\n\n                .avatar {\n                    width: 296px;\n                    height: 296px;\n                    border-radius: 50%;\n                    border: 1px solid var(--color-border-default);\n                }\n\n                .profile-info {\n                    margin-bottom: 16px;\n                }\n\n                .profile-name {\n                    font-size: 26px;\n                    font-weight: 600;\n                    line-height: 1.25;\n                    color: var(--color-fg-default);\n                    margin-bottom: 0;\n                }\n\n                .profile-login {\n                    font-size: 20px;\n                    font-style: normal;\n                    font-weight: 300;\n                    line-height: 24px;\n                    color: var(--color-fg-muted);\n                    margin-bottom: 16px;\n                }\n\n                .profile-bio {\n                    font-size: 16px;\n                    margin: 16px 0 20px;\n                    color: var(--color-fg-default);\n                    padding: 8px 12px;\n                    background: var(--color-canvas-subtle);\n                    border: 1px solid var(--color-border-muted);\n                    border-radius: 6px;\n                }\n\n                .btn-primary {\n                    display: inline-flex;\n                    align-items: center;\n                    justify-content: center;\n                    padding: 8px 18px;\n                    font-size: 14px;\n                    font-weight: 500;\n                    line-height: 20px;\n                    white-space: nowrap;\n                    vertical-align: middle;\n                    cursor: pointer;\n                    user-select: none;\n                    border: 1px solid;\n                    border-radius: 6px;\n                    appearance: none;\n                    color: var(--color-fg-on-emphasis);\n                    background-color: var(--color-accent-emphasis);\n                    border-color: var(--color-accent-emphasis);\n                    text-decoration: none;\n                    width: 100%;\n                    text-align: center;\n                    transition: background-color .15s ease, border-color .15s ease, box-shadow .15s ease;\n                }\n\n                .btn-primary:hover {\n                    background-color: #1158c7;\n                    border-color: #1158c7;\n                }\n\n                .profile-details {\n                    margin: 8px 0 24px;\n                    padding: 8px 0;\n                    display: flex;\n                    flex-direction: column;\n                    gap: 6px;\n                }\n\n                /* Responsive layout */\n                @media (max-width: 900px) {\n                    .profile-container {\n                        flex-direction: column;\n                    }\n                    .profile-sidebar {\n                        width: 100%;\n                        max-width: 100%;\n                        display: flex;\n                        flex-direction: column;\n                        align-items: center;\n                    }\n                    .avatar { width: 200px; height: 200px; }\n                    .profile-name { font-size: 22px; }\n                    .profile-login { font-size: 18px; }\n                    .btn-primary { width: auto; min-width: 220px; }\n                    .profile-bio { width: 100%; }\n                }\n\n                @media (max-width: 600px) {\n                    .repo-filters { flex-direction: column; align-items: stretch; }\n                    .form-control { width: 100%; }\n                    .btn-primary { width: 100%; }\n                }\n\n                .profile-detail {\n                    display: flex;\n                    align-items: center;\n                    margin-bottom: 8px;\n                    font-size: 14px;\n                    color: var(--color-fg-default);\n                }\n\n                .profile-detail svg {\n                    width: 16px;\n                    height: 16px;\n                    margin-right: 8px;\n                    fill: var(--color-fg-muted);\n                    flex-shrink: 0;\n                }\n\n                .profile-stats {\n                    margin-top: 20px;\n                    padding-top: 16px;\n                    border-top: 1px solid var(--color-border-default);\n                }\n\n                .profile-stat {\n                    display: block;\n                    padding: 4px 0;\n                    color: var(--color-fg-default);\n                    text-decoration: none;\n                    font-size: 14px;\n                }\n\n                .profile-stat:hover .profile-stat-count {\n                    color: var(--color-accent-fg);\n                }\n\n                .profile-stat-count {\n                    font-weight: 600;\n                    color: var(--color-fg-default);\n                }\n\n                /* Main Content Area */\n                .profile-main {\n                    min-width: 0;\n                }\n\n                .UnderlineNav {\n                    display: flex;\n                    border-bottom: 1px solid var(--color-border-default);\n                    margin-bottom: 24px;\n                    overflow-x: auto;\n                    overflow-y: hidden;\n                }\n\n                .UnderlineNav-item {\n                    padding: 8px 16px;\n                    margin-bottom: -1px;\n                    font-size: 14px;\n                    font-weight: 500;\n                    color: var(--color-fg-default);\n                    text-decoration: none;\n                    border-bottom: 2px solid transparent;\n                    white-space: nowrap;\n                    cursor: pointer;\n                    background: none;\n                    border-left: none;\n                    border-right: none;\n                    border-top: none;\n                    display: inline-flex;\n                    align-items: center;\n                    gap: 8px;\n                }\n\n                .UnderlineNav-item.selected {\n                    font-weight: 600;\n                    color: var(--color-fg-default);\n                    border-bottom-color: var(--color-accent-emphasis);\n                }\n\n                .UnderlineNav-item:hover {\n                    color: var(--color-fg-default);\n                    text-decoration: none;\n                }\n\n                .Counter {\n                    display: inline-block;\n                    padding: 2px 5px;\n                    font-size: 12px;\n                    font-weight: 500;\n                    line-height: 1;\n                    color: var(--color-fg-default);\n                    background-color: var(--color-neutral-muted);\n                    border-radius: 20px;\n                }\n\n                .tab-content {\n                    display: none;\n                }\n\n                .tab-content.active {\n                    display: block;\n                }\n\n                /* Repository Filters */\n                .user-repo-search {\n                    position: relative;\n                    margin-bottom: 16px;\n                }\n\n                .repo-filters {\n                    display: flex;\n                    gap: 8px;\n                    margin-bottom: 16px;\n                    flex-wrap: wrap;\n                }\n\n                .form-control {\n                    padding: 5px 12px;\n                    font-size: 14px;\n                    line-height: 20px;\n                    color: var(--color-fg-default);\n                    vertical-align: middle;\n                    background-color: var(--color-canvas-default);\n                    background-repeat: no-repeat;\n                    background-position: right 8px center;\n                    border: 1px solid var(--color-border-default);\n                    border-radius: 6px;\n                    outline: none;\n                    box-shadow: inset 0 1px 0 rgba(208,215,222,0.2);\n                    width: 320px; /* widen search input */\n                }\n\n                .form-control:focus {\n                    border-color: var(--color-accent-emphasis);\n                    outline: none;\n                    box-shadow: inset 0 1px 0 rgba(208,215,222,0.2), 0 0 0 3px rgba(9,105,218,0.3);\n                }\n\n                .form-select {\n                    padding-right: 28px; /* more room so arrow doesn't overlap text */\n                    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23e6edf3' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m1 6 7 7 7-7'/%3e%3c/svg%3e");\n                    background-repeat: no-repeat;\n                    background-position: right 8px center;\n                    background-size: 14px 10px; /* slightly smaller to avoid text overlap */\n                    appearance: none;\n                }\n\n                /* Repository Grid */\n                .repo-list {\n                    list-style: none;\n                    margin: 0;\n                    padding: 0;\n                }\n\n                .repo-list-item {\n                    position: relative;\n                    padding: 24px 0;\n                    border-bottom: 1px solid var(--color-border-muted);\n                }\n\n                .repo-list-item:first-child {\n                    padding-top: 0;\n                }\n\n                .repo-list-item:last-child {\n                    border-bottom: none;\n                }\n\n                .repo {\n                    display: flex;\n                    /* align icon with first line of repo name */\n                    align-items: flex-start;\n                    width: 100%;\n                    text-align: left;\n                }\n\n                .repo-icon {\n                    margin-right: 12px;\n                    /* adjusted top margin for better baseline alignment with repo name */\n                    margin-top: 5px;\n                    fill: var(--color-fg-muted);\n                    flex-shrink: 0;\n                }\n                .starred-repo > .repo-icon { margin-top: 5px; }\n\n                .repo-info {\n                    min-width: 0;\n                    flex: 1;\n                }\n\n                .repo-name {\n                    display: inline-block;\n                    font-weight: 600;\n                    color: var(--color-accent-fg);\n                    font-size: 20px;\n                    text-decoration: none;\n                    margin-bottom: 4px;\n                }\n\n                .repo-name:hover {\n                    text-decoration: underline;\n                }\n\n                .Label {\n                    display: inline-block;\n                    padding: 0 7px;\n                    font-size: 12px;\n                    font-weight: 500;\n                    line-height: 18px;\n                    border-radius: 2em;\n                    border: 1px solid transparent;\n                    margin-left: 8px;\n                }\n\n                .Label--secondary {\n                    color: var(--color-fg-muted);\n                    border-color: var(--color-border-default);\n                }\n\n                .repo-description {\n                    color: var(--color-fg-muted);\n                    font-size: 14px;\n                    margin-bottom: 8px;\n                    display: inline-block;\n                    width: 75%;\n                }\n\n                .repo-meta {\n                    display: flex;\n                    align-items: center;\n                    gap: 16px;\n                    font-size: 12px;\n                    color: var(--color-fg-muted);\n                }\n\n                .repo-language-color {\n                    position: relative;\n                    top: 1px;\n                    display: inline-block;\n                    width: 12px;\n                    height: 12px;\n                    border: 1px solid rgba(27,31,36,0.15);\n                    border-radius: 50%;\n                    margin-right: 4px;\n                }\n\n                .repo-actions {\n                    display: flex;\n                    /* Center buttons vertically so icon + text sit aligned */\n                    align-items: center;\n                    gap: 8px;\n                    margin-left: 16px;\n                }\n\n                .btn {\n                    position: relative;\n                    display: inline-flex; /* allow flex centering of icon + text */\n                    align-items: center;\n                    justify-content: center;\n                    padding: 5px 16px;\n                    font-size: 14px;\n                    font-weight: 500;\n                    line-height: 20px;\n                    white-space: nowrap;\n                    vertical-align: middle;\n                    cursor: pointer;\n                    user-select: none;\n                    border: 1px solid;\n                    border-radius: 6px;\n                    appearance: none;\n                }\n\n                .btn-sm {\n                    padding: 3px 12px;\n                    font-size: 12px;\n                    line-height: 18px;\n                }\n\n                .btn-outline {\n                    color: var(--color-accent-fg);\n                    background-color: transparent;\n                    border-color: var(--color-border-default);\n                }\n\n                .btn-outline:hover {\n                    color: var(--color-fg-on-emphasis);\n                    background-color: var(--color-accent-emphasis);\n                    border-color: var(--color-accent-emphasis);\n                }\n\n                /* Normalize icon alignment inside buttons */\n                .btn svg {\n                    display: inline-block;\n                    vertical-align: middle;\n                    margin-top: -1px; /* optical alignment tweak */\n                }\n                /* Star icons unified yellow */\n                .star-icon { color: #f9d71c !important; fill: #f9d71c !important; }\n                /* Star/Unstar button text forced white */\n                .btn-star { color: #ffffff !important; }\n                .btn-star:hover { color: #ffffff !important; }\n\n                .btn-danger {\n                    color: var(--color-danger-fg);\n                    background-color: transparent;\n                    border-color: var(--color-border-default);\n                }\n\n                .btn-danger:hover {\n                    color: var(--color-fg-on-emphasis);\n                    background-color: var(--color-danger-fg);\n                    border-color: var(--color-danger-fg);\n                }\n\n                /* Starred Repositories */\n                .starred-repos {\n                    list-style: none;\n                    margin: 0;\n                    padding: 0;\n                }\n\n                .starred-repo-item {\n                    position: relative;\n                    padding: 16px 0;\n                    border-bottom: 1px solid var(--color-border-muted);\n                }\n\n                .starred-repo-item:last-child {\n                    border-bottom: none;\n                }\n\n                .starred-repo {\n                    display: flex;\n                    align-items: flex-start; /* baseline alignment with name */\n                    width: 100%;\n                }\n\n                .starred-repo-info {\n                    min-width: 0;\n                    flex: 1;\n                }\n\n                .starred-repo-name {\n                    display: inline-block;\n                    font-weight: 600;\n                    color: var(--color-accent-fg);\n                    font-size: 16px;\n                    text-decoration: none;\n                    margin-bottom: 4px;\n                }\n\n                .starred-repo-name:hover {\n                    text-decoration: underline;\n                }\n\n                .starred-repo-description {\n                    color: var(--color-fg-muted);\n                    font-size: 14px;\n                    margin-bottom: 8px;\n                    display: inline-block;\n                }\n\n                .starred-repo-meta {\n                    display: flex;\n                    align-items: center;\n                    gap: 16px;\n                    font-size: 12px;\n                    color: var(--color-fg-muted);\n                }\n\n                .starred-repo-actions {\n                    display: flex;\n                    /* Center buttons vertically so icon + text sit aligned */\n                    align-items: center;\n                    gap: 8px;\n                    margin-left: 16px;\n                }\n\n                /* Activity Tab Styles */\n                .activity-container {\n                    display: flex;\n                    flex-direction: column;\n                    gap: 24px;\n                }\n\n                .contribution-graph {\n                    background-color: var(--color-canvas-default);\n                    border: 1px solid var(--color-border-default);\n                    border-radius: 6px;\n                    padding: 16px;\n                }\n\n                .contrib-column {\n                    display: table-cell;\n                    width: 15px;\n                    border-spacing: 0;\n                    border-collapse: separate;\n                }\n\n                .contrib-day {\n                    display: block;\n                    width: 11px;\n                    height: 11px;\n                    border-radius: 2px;\n                    margin: 0 0 3px;\n                    cursor: pointer;\n                    outline: 1px solid rgba(27,31,36,0.06);\n                    outline-offset: -1px;\n                }\n\n                .contrib-day[data-level="0"] {\n                    background-color: #161b22;\n                }\n\n                .contrib-day[data-level="1"] {\n                    background-color: #0e4429;\n                }\n\n                .contrib-day[data-level="2"] {\n                    background-color: #006d32;\n                }\n\n                .contrib-day[data-level="3"] {\n                    background-color: #26a641;\n                }\n\n                .contrib-day[data-level="4"] {\n                    background-color: #39d353;\n                }\n\n                .activity-stats-grid {\n                    display: grid;\n                    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n                    gap: 16px;\n                    margin-bottom: 24px;\n                }\n\n                .activity-stat-card {\n                    background-color: var(--color-canvas-default);\n                    border: 1px solid var(--color-border-default);\n                    border-radius: 6px;\n                    padding: 16px;\n                    text-align: center;\n                }\n\n                .activity-stat-number {\n                    display: block;\n                    font-size: 32px;\n                    font-weight: 600;\n                    color: var(--color-accent-fg);\n                    line-height: 1;\n                    margin-bottom: 4px;\n                }\n\n                .activity-stat-label {\n                    font-size: 12px;\n                    color: var(--color-fg-muted);\n                    text-transform: uppercase;\n                    letter-spacing: 0.075em;\n                    font-weight: 600;\n                }\n\n                /* Responsive Design */\n                @media (max-width: 1012px) {\n                    .profile-container {\n                        grid-template-columns: 1fr;\n                        gap: 24px;\n                    }\n                    \n                    .profile-sidebar {\n                        position: static;\n                        display: grid;\n                        grid-template-columns: auto 1fr;\n                        gap: 16px;\n                        align-items: start;\n                    }\n                    \n                    .avatar {\n                        width: 120px;\n                        height: 120px;\n                    }\n                    \n                    .profile-info {\n                        margin-bottom: 0;\n                    }\n                }\n\n                @media (max-width: 768px) {\n                    .profile-container {\n                        padding: 16px;\n                    }\n                    \n                    .profile-sidebar {\n                        grid-template-columns: 1fr;\n                        text-align: center;\n                    }\n                    \n                    .UnderlineNav {\n                        overflow-x: scroll;\n                        scrollbar-width: none;\n                        -ms-overflow-style: none;\n                    }\n                    \n                    .UnderlineNav::-webkit-scrollbar {\n                        display: none;\n                    }\n                    \n                    .repo-filters {\n                        flex-direction: column;\n                    }\n                    \n                    .form-control {\n                        width: 100%;\n                    }\n                }\n\n                /* Loading and Focus States */\n                .btn:disabled {\n                    cursor: not-allowed;\n                    opacity: 0.6;\n                }\n\n                .btn:focus {\n                    outline: 2px solid var(--color-accent-emphasis);\n                    outline-offset: -2px;\n                }\n\n                .form-control:focus {\n                    outline: none;\n                }\n\n                /* Animations */\n                @keyframes fadeIn {\n                    from { opacity: 0; transform: translateY(10px); }\n                    to { opacity: 1; transform: translateY(0); }\n                }\n\n                @keyframes spin {\n                    from { transform: rotate(0deg); }\n                    to { transform: rotate(360deg); }\n                }\n\n                .repo-list-item {\n                    animation: fadeIn 0.3s ease-out;\n                }\n\n                .starred-repo-item {\n                    animation: fadeIn 0.3s ease-out;\n                }\n\n                /* Heatmap */\n                .heatmap {\n                    background: var(--color-canvas-subtle);\n                    border: 1px solid var(--color-border-default);\n                    border-radius: var(--border-radius-large);\n                    padding: var(--spacing-6);\n                    margin-top: var(--spacing-6);\n                    box-shadow: var(--shadow-large);\n                    position: relative;\n                }\n\n                .heatmap-header {\n                    display: flex;\n                    justify-content: space-between;\n                    align-items: center;\n                    margin-bottom: var(--spacing-4);\n                    padding-bottom: var(--spacing-3);\n                    border-bottom: 1px solid var(--color-border-muted);\n                }\n\n                .heatmap-title {\n                    font-size: var(--font-size-xl);\n                    font-weight: 700;\n                    color: var(--color-fg-default);\n                    margin: 0;\n                }\n\n                .heatmap-legend {\n                    display: flex;\n                    gap: var(--spacing-3);\n                    align-items: center;\n                }\n\n                .legend-text {\n                    font-size: var(--font-size-small);\n                    color: var(--color-fg-muted);\n                    font-weight: 500;\n                    text-transform: uppercase;\n                    letter-spacing: 0.5px;\n                }\n\n                .legend-squares {\n                    display: flex;\n                    gap: var(--spacing-1);\n                }\n\n                .legend-square {\n                    width: 12px;\n                    height: 12px;\n                    border-radius: 2px;\n                    border: 1px solid var(--color-border-muted);\n                }\n\n                .heatmap-graph {\n                    display: flex;\n                    flex-direction: column;\n                    gap: var(--spacing-1);\n                    padding: var(--spacing-4);\n                    background: var(--color-canvas-default);\n                    border-radius: var(--border-radius-medium);\n                    border: 1px solid var(--color-border-muted);\n                }\n\n                .month-labels {\n                    display: grid;\n                    grid-template-columns: repeat(12, 1fr);\n                    gap: var(--spacing-1);\n                    margin-bottom: var(--spacing-2);\n                    padding: 0 var(--spacing-2);\n                }\n\n                .month-label {\n                    font-size: var(--font-size-small);\n                    color: var(--color-fg-subtle);\n                    text-align: center;\n                    font-weight: 500;\n                    text-transform: uppercase;\n                    letter-spacing: 0.5px;\n                }\n\n                .day-labels {\n                    display: flex;\n                    justify-content: space-around;\n                    margin-bottom: var(--spacing-1);\n                    padding: 0 var(--spacing-2);\n                }\n\n                .day-label {\n                    font-size: var(--font-size-small);\n                    color: var(--color-fg-subtle);\n                    text-transform: uppercase;\n                    letter-spacing: 0.5px;\n                    font-weight: 500;\n                }\n\n                .weeks-grid {\n                    display: grid;\n                    grid-template-columns: repeat(53, 1fr);\n                    gap: var(--spacing-1);\n                    justify-items: center;\n                }\n\n                .week-column {\n                    display: flex;\n                    flex-direction: column;\n                    gap: var(--spacing-1);\n                    align-items: center;\n                }\n\n                .day-square {\n                    width: 10px;\n                    height: 10px;\n                    border-radius: 2px;\n                    border: 1px solid var(--color-border-muted);\n                    transition: var(--transition-fast);\n                    background: var(--color-canvas-subtle);\n                }\n\n                .day-square:hover {\n                    opacity: 0.8;\n                }\n\n                .day-square.level-1 {\n                    background: #0e4429;\n                }\n\n                .day-square.level-2 {\n                    background: #006d32;\n                }\n\n                .day-square.level-3 {\n                    background: #26a641;\n                }\n\n                .day-square.level-4 {\n                    background: #39d353;\n                }\n\n                /* Contribution Graph Styles */\n                .contribution-graph {\n                    background: var(--vscode-editor-background);\n                    border: 1px solid var(--vscode-panel-border);\n                    border-radius: 8px;\n                    padding: 20px;\n                    margin: 20px 0;\n                    font-family: var(--vscode-font-family);\n                }\n\n                .contribution-header {\n                    display: flex;\n                    justify-content: space-between;\n                    align-items: center;\n                    margin-bottom: 16px;\n                    padding-bottom: 12px;\n                    border-bottom: 1px solid var(--vscode-panel-border);\n                }\n\n                .contribution-stats {\n                    display: flex;\n                    flex-direction: column;\n                    gap: 4px;\n                }\n\n                .contribution-title {\n                    font-size: 16px;\n                    font-weight: 600;\n                    color: var(--vscode-editor-foreground);\n                    margin: 0;\n                }\n\n                .contribution-summary {\n                    font-size: 12px;\n                    color: var(--vscode-descriptionForeground);\n                    margin: 0;\n                }\n\n                .contribution-legend {\n                    display: flex;\n                    align-items: center;\n                    gap: 4px;\n                    font-size: 11px;\n                    color: var(--vscode-descriptionForeground);\n                }\n\n                .legend-text {\n                    font-size: 11px;\n                    color: var(--vscode-descriptionForeground);\n                }\n\n                .legend-squares {\n                    display: flex;\n                    gap: 2px;\n                    margin: 0 4px;\n                }\n\n                .legend-square {\n                    width: 10px;\n                    height: 10px;\n                    border-radius: 2px;\n                    border: 1px solid var(--vscode-panel-border);\n                }\n\n                .legend-square.level-0 {\n                    background: var(--vscode-input-background);\n                }\n\n                .legend-square.level-1 {\n                    background: var(--vscode-gitDecoration-addedResourceForeground);\n                    opacity: 0.4;\n                }\n\n                .legend-square.level-2 {\n                    background: var(--vscode-gitDecoration-addedResourceForeground);\n                    opacity: 0.6;\n                }\n\n                .legend-square.level-3 {\n                    background: var(--vscode-gitDecoration-addedResourceForeground);\n                    opacity: 0.8;\n                }\n\n                .legend-square.level-4 {\n                    background: var(--vscode-gitDecoration-addedResourceForeground);\n                    opacity: 1;\n                }\n\n                .contribution-calendar {\n                    position: relative;\n                }\n\n                .month-labels {\n                    display: grid;\n                    grid-template-columns: repeat(12, 1fr);\n                    gap: 2px;\n                    margin-bottom: 8px;\n                    margin-left: 20px;\n                }\n\n                .month-label {\n                    font-size: 10px;\n                    color: var(--vscode-descriptionForeground);\n                    text-align: left;\n                }\n\n                .calendar-body {\n                    display: flex;\n                    gap: 4px;\n                }\n\n                .weekday-labels {\n                    display: flex;\n                    flex-direction: column;\n                    gap: 2px;\n                    width: 16px;\n                }\n\n                .weekday-label {\n                    height: 10px;\n                    font-size: 9px;\n                    color: var(--vscode-descriptionForeground);\n                    display: flex;\n                    align-items: center;\n                    line-height: 1;\n                }\n\n                .contribution-grid {\n                    display: flex;\n                    gap: 2px;\n                    flex: 1;\n                }\n\n                .contribution-week {\n                    display: flex;\n                    flex-direction: column;\n                    gap: 2px;\n                }\n\n                .contribution-day {\n                    width: 10px;\n                    height: 10px;\n                    border-radius: 2px;\n                    border: 1px solid transparent;\n                    cursor: pointer;\n                    transition: all 0.1s ease;\n                }\n\n                .contribution-day:hover {\n                    border-color: var(--vscode-focusBorder);\n                    transform: scale(1.1);\n                }\n\n                .contribution-day.inactive {\n                    opacity: 0.3;\n                }\n\n                .contribution-day.level-0 {\n                    background: var(--vscode-input-background);\n                    border-color: var(--vscode-panel-border);\n                }\n\n                .contribution-day.level-1 {\n                    background: var(--vscode-gitDecoration-addedResourceForeground);\n                    opacity: 0.4;\n                }\n\n                .contribution-day.level-2 {\n                    background: var(--vscode-gitDecoration-addedResourceForeground);\n                    opacity: 0.6;\n                }\n\n                .contribution-day.level-3 {\n                    background: var(--vscode-gitDecoration-addedResourceForeground);\n                    opacity: 0.8;\n                }\n\n                .contribution-day.level-4 {\n                    background: var(--vscode-gitDecoration-addedResourceForeground);\n                    opacity: 1;\n                }\n\n                /* People and Gists Styles */\n                .people-tabs {\n                    display: flex;\n                    gap: var(--spacing-2);\n                    margin-bottom: var(--spacing-6);\n                    background: var(--color-canvas-subtle);\n                    border: 1px solid var(--color-border-default);\n                    border-radius: var(--border-radius-medium);\n                    padding: var(--spacing-1);\n                }\n\n                .people-tab {\n                    background: transparent;\n                    border: none;\n                    color: var(--color-fg-muted);\n                    padding: var(--spacing-3) var(--spacing-4);\n                    cursor: pointer;\n                    border-radius: var(--border-radius-small);\n                    font-weight: 600;\n                    font-size: var(--font-size-normal);\n                    transition: var(--transition-fast);\n                    display: flex;\n                    align-items: center;\n                    gap: var(--spacing-2);\n                    flex: 1;\n                    justify-content: center;\n                }\n\n                .people-tab:hover {\n                    background: var(--color-canvas-default);\n                    color: var(--color-fg-default);\n                }\n\n                .people-tab.active {\n                    background: var(--color-accent-emphasis);\n                    color: var(--color-canvas-default);\n                    box-shadow: var(--shadow-small);\n                }\n\n                .people-section {\n                    display: none;\n                }\n\n                .people-section.active {\n                    display: block;\n                }\n\n                .people-grid {\n                    display: grid;\n                    grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));\n                    gap: var(--spacing-4);\n                }\n\n                .person-card {\n                    background: var(--color-canvas-default);\n                    border: 1px solid var(--color-border-default);\n                    border-radius: var(--border-radius-large);\n                    padding: var(--spacing-5);\n                    text-align: center;\n                    transition: var(--transition-normal);\n                    cursor: pointer;\n                    box-shadow: var(--shadow-medium);\n                    display: flex;\n                    flex-direction: column;\n                    align-items: center;\n                    gap: var(--spacing-3);\n                }\n\n                .person-card:hover {\n                    border-color: var(--color-accent-emphasis);\n                    transform: translateY(-2px);\n                    box-shadow: var(--shadow-large);\n                }\n\n                .person-avatar {\n                    width: 60px;\n                    height: 60px;\n                    border-radius: 50%;\n                    border: 2px solid var(--color-border-default);\n                    transition: var(--transition-fast);\n                }\n\n                .person-card:hover .person-avatar {\n                    border-color: var(--color-accent-emphasis);\n                }\n\n                .person-info {\n                    display: flex;\n                    flex-direction: column;\n                    align-items: center;\n                    gap: var(--spacing-1);\n                }\n\n                .person-name {\n                    font-size: var(--font-size-normal);\n                    font-weight: 600;\n                    color: var(--color-fg-default);\n                    margin: 0;\n                }\n\n                .person-type {\n                    font-size: var(--font-size-small);\n                    color: var(--color-fg-muted);\n                    text-transform: uppercase;\n                    letter-spacing: 0.5px;\n                    font-weight: 500;\n                }\n\n                .visibility-badge {\n                    padding: var(--spacing-1) var(--spacing-2);\n                    border-radius: var(--border-radius-small);\n                    font-size: var(--font-size-small);\n                    font-weight: 600;\n                    text-transform: uppercase;\n                    letter-spacing: 0.5px;\n                }\n\n                .visibility-badge.public {\n                    background: var(--color-success-subtle);\n                    color: var(--color-success-fg);\n                    border: 1px solid var(--color-success-muted);\n                }\n\n                .visibility-badge.private {\n                    background: var(--color-attention-subtle);\n                    color: var(--color-attention-fg);\n                    border: 1px solid var(--color-attention-muted);\n                }\n\n                .empty-state {\n                    text-align: center;\n                    padding: var(--spacing-8);\n                    color: var(--color-fg-muted);\n                }\n\n                .empty-icon {\n                    font-size: 48px;\n                    margin-bottom: var(--spacing-4);\n                    opacity: 0.6;\n                }\n\n                .empty-state h3 {\n                    font-size: var(--font-size-xl);\n                    font-weight: 600;\n                    color: var(--color-fg-default);\n                    margin: 0 0 var(--spacing-2) 0;\n                }\n\n                .empty-state p {\n                    font-size: var(--font-size-normal);\n                    color: var(--color-fg-muted);\n                    margin: 0;\n                    max-width: 400px;\n                    margin-left: auto;\n                    margin-right: auto;\n                    line-height: 1.5;\n                }\n\n                /* Responsive Design */\n                @media (max-width: 1024px) {\n                    .container {\n                        padding: var(--spacing-5);\n                    }\n                    \n                    .header {\n                        flex-direction: column;\n                        text-align: center;\n                        gap: var(--spacing-6);\n                    }\n                    \n                    .grid {\n                        grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n                        gap: var(--spacing-4);\n                    }\n                    \n                    .filters {\n                        flex-direction: column;\n                        align-items: stretch;\n                    }\n                    \n                    .right {\n                        margin-left: 0;\n                        margin-top: var(--spacing-4);\n                    }\n                }\n\n                @media (max-width: 768px) {\n                    .container {\n                        padding: var(--spacing-3);\n                    }\n                    \n                    .title {\n                        font-size: var(--font-size-2xl);\n                    }\n                    \n                    .stats {\n                        grid-template-columns: repeat(2, 1fr);\n                        gap: var(--spacing-3);\n                    }\n                    \n                    .grid {\n                        grid-template-columns: 1fr;\n                        gap: var(--spacing-3);\n                    }\n                    \n                    .tabs {\n                        flex-wrap: wrap;\n                    }\n                    \n                    .tab {\n                        flex: 1;\n                        min-width: 120px;\n                        justify-content: center;\n                    }\n                }\n\n                /* Loading States */\n                .loading {\n                    opacity: 0.6;\n                    pointer-events: none;\n                }\n\n                .loading::after {\n                    content: '';\n                    position: absolute;\n                    top: 50%;\n                    left: 50%;\n                    width: 20px;\n                    height: 20px;\n                    margin: -10px 0 0 -10px;\n                    border: 2px solid var(--color-accent-emphasis);\n                    border-top: 2px solid transparent;\n                    border-radius: 50%;\n                    animation: spin 1s linear infinite;\n                }\n\n                @keyframes spin {\n                    0% { transform: rotate(0deg); }\n                    100% { transform: rotate(360deg); }\n                }\n\n                /* Focus States */\n                .icon-btn:focus,\n                .primary-btn:focus,\n                .input:focus,\n                .select:focus {\n                    outline: 2px solid var(--color-accent-emphasis);\n                    outline-offset: 2px;\n                }\n\n                /* Print Styles */\n                @media print {\n                    .icon-btn,\n                    .primary-btn {\n                        display: none;\n                    }\n                    \n                    .card {\n                        break-inside: avoid;\n                        box-shadow: none;\n                        border: 1px solid #e5e7eb;\n                    }\n                }\n            </style>\n        </head>\n        <body>\n            <div id="globalLoaderOverlay" style="position:fixed;inset:0;display:none;align-items:center;justify-content:center;background:rgba(13,17,23,.85);backdrop-filter:blur(2px);z-index:4000;">\n                <div class="gh-loader-shell" style="display:flex;flex-direction:column;align-items:center;gap:18px;">\n                    <div class="gh-loader-ring" style="width:80px;height:80px;border:4px solid rgba(255,255,255,0.12);border-top-color:#2f81f7;border-radius:50%;animation:ghSpin .9s linear infinite;position:relative;display:flex;align-items:center;justify-content:center;">\n                        <svg viewBox="0 0 16 16" width="46" height="46" aria-hidden="true" class="gh-loader-icon" style="color:#2f81f7;filter:drop-shadow(0 0 6px rgba(47,129,247,.6));animation:ghIconPulse 3s ease-in-out infinite;">\n                            <path fill="currentColor" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2 .37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z" />\n                        </svg>\n                    </div>\n                    <div id="globalLoaderText" style="font:600 13px/1.4 -apple-system,BlinkMacSystemFont,'Segoe UI',Helvetica,Arial,sans-serif;color:#e6edf3;letter-spacing:.5px;text-transform:uppercase;">Loading...</div>\n                </div>\n                <style>\n                    @keyframes ghSpin { to { transform: rotate(360deg); } }\n                    @keyframes ghIconPulse { 0%,100% { opacity:.85;} 50% { opacity:1;} }\n                </style>\n            </div>\n            \x3c!-- GitHub-like Header --\x3e\n            <div class="AppHeader">\n                <div class="AppHeader-globalBar">\n                    <svg height="32" aria-hidden="true" viewBox="0 0 16 16" version="1.1" width="32" class="github-logo">\n                        <path d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z"></path>\n                    </svg>\n                    <nav>\n                        <a href="#" class="HeaderMenu-link">Pull requests</a>\n                        <a href="#" class="HeaderMenu-link">Issues</a>\n                        <a href="#" class="HeaderMenu-link">Codespaces</a>\n                        <a href="#" class="HeaderMenu-link" id="marketplaceLink">Marketplace</a>\n                        <a href="#" class="HeaderMenu-link" id="exploreLink">Explore</a>\n                    </nav>\n                </div>\n                <div style="display:flex;align-items:center;gap:12px;">\n                   <button id="logoutBtnProfile" style="background:#21262d;border:1px solid #30363d;color:#e6edf3;font-size:12px;padding:6px 12px;border-radius:6px;cursor:pointer;">Logout</button>\n                   <div class="AppHeader-user" title="Open Settings" style="display:flex;align-items:center;">\n                       <img id="headerProfileAvatar" class="avatar" src="${t.avatar_url}" alt="${t.login}" style="width: 32px; height: 32px; cursor:pointer;" />\n                   </div>\n                </div>\n            </div>\n\n            \x3c!-- Main Profile Container --\x3e\n            <div class="profile-container">\n                \x3c!-- Left Sidebar --\x3e\n                <div class="profile-sidebar">\n                    <div class="avatar-wrapper">\n                        <img class="avatar" src="${t.avatar_url}" alt="${t.login}" />\n                    </div>\n                    \n                    <div class="profile-info">\n                        <h1 class="profile-name">${t.name||t.login}</h1>\n                        <p class="profile-login">${t.login}</p>\n                        \n                        <button id="createRepoBtn" class="btn-primary">\n                            <svg width="16" height="16" viewBox="0 0 16 16" fill="currentColor" style="margin-right:8px; display:inline-block; vertical-align:middle;">\n                                <path d="M2 2.5A2.5 2.5 0 014.5 0h8.75a.75.75 0 01.75.75v12.5a.75.75 0 01-.75.75h-2.5a.75.75 0 110-1.5h1.75v-2h-8a1 1 0 00-.714 1.7.75.75 0 01-1.072 1.05A2.495 2.495 0 012 11.5v-9zm10.5-1V9h-8c-.356 0-.694.074-1 .208V2.5a1 1 0 011-1h8zM5 12.25v3.25a.25.25 0 00.4.2l1.45-1.087a.25.25 0 01.3 0L8.6 15.7a.25.25 0 00.4-.2v-3.25a.25.25 0 00-.25-.25h-3.5a.25.25 0 00-.25.25z"></path>\n                            </svg>\n                            New repository\n                        </button>\n                        \n                        ${t.bio?`<div class="profile-bio">${t.bio}</div>`:""}\n                        \n                        <div class="profile-details">\n                            ${t.company?`\n                                <div class="profile-detail">\n                                    <svg viewBox="0 0 16 16" width="16" height="16" fill="currentColor">\n                                        <path d="M1.75 16A1.75 1.75 0 010 14.25V1.75C0 .784.784 0 1.75 0h8.5C11.216 0 12 .784 12 1.75v12.5c0 .085-.006.168-.018.25h2.268a.25.25 0 00.25-.25V8.285a.25.25 0 00-.111-.208l-1.055-.703a.75.75 0 11.832-1.248l1.055.703c.487.325.779.871.779 1.456v5.965A1.75 1.75 0 0114.25 16h-2.5a.75.75 0 01-.197-.026c-.099.017-.2.026-.303.026h-8.5zM9 9a.75.75 0 000-1.5H4.5a.75.75 0 000 1.5H9zM4.5 5.75a.75.75 0 000 1.5h3.5a.75.75 0 000-1.5h-3.5z"></path>\n                                    </svg>\n                                    ${t.company}\n                                </div>\n                            `:""}\n                            ${t.location?`\n                                <div class="profile-detail">\n                                    <svg viewBox="0 0 16 16" width="16" height="16" fill="currentColor">\n                                        <path d="m12.596 11.596-3.535 3.536a1.5 1.5 0 0 1-2.122 0l-3.535-3.536a6.5 6.5 0 1 1 9.192-9.193 6.5 6.5 0 0 1 0 9.193Zm-1.06-8.132v-.001a5 5 0 1 0-7.072 7.072L8 14.07l3.536-3.534a5 5 0 0 0 0-7.072ZM8 9a2 2 0 1 1-.001-3.999A2 2 0 0 1 8 9Z"></path>\n                                    </svg>\n                                    ${t.location}\n                                </div>\n                            `:""}\n                            ${t.email?`\n                                <div class="profile-detail">\n                                    <svg viewBox="0 0 16 16" width="16" height="16" fill="currentColor">\n                                        <path d="M1.75 2h12.5c.966 0 1.75.784 1.75 1.75v8.5A1.75 1.75 0 0114.25 14H1.75A1.75 1.75 0 010 12.25v-8.5C0 2.784.784 2 1.75 2ZM1.5 12.251c0 .138.112.25.25.25h12.5a.25.25 0 00.25-.25V5.809L8.38 9.397a.75.75 0 01-.76 0L1.5 5.809v6.442Zm13-8.181v-.32a.25.25 0 00-.25-.25H1.75a.25.25 0 00-.25.25v.32L8 7.88l6.5-3.81Z"></path>\n                                    </svg>\n                                    ${t.email}\n                                </div>\n                            `:""}\n                            ${t.blog?`\n                                <div class="profile-detail">\n                                    <svg viewBox="0 0 16 16" width="16" height="16" fill="currentColor">\n                                        <path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path>\n                                    </svg>\n                                    <a href="${t.blog}" target="_blank">${t.blog}</a>\n                                </div>\n                            `:""}\n                        </div>\n                        \n                        <div class="profile-stats">\n                            <a href="#" class="profile-stat">\n                                <svg width="16" height="16" viewBox="0 0 16 16" fill="currentColor" style="margin-right: 4px;">\n                                    <path d="M2 5.5a3.5 3.5 0 115.898 2.549 5.507 5.507 0 013.034 4.084.75.75 0 11-1.482.235 4.001 4.001 0 00-7.9 0 .75.75 0 01-1.482-.236A5.507 5.507 0 013.102 8.05 3.49 3.49 0 012 5.5zM11 4a.75.75 0 100 1.5 1.5 1.5 0 01.666 2.844.75.75 0 00-.416.672v.352a.75.75 0 00.574.73c1.2.289 2.162 1.2 2.522 2.372a.75.75 0 101.442-.412 4.01 4.01 0 00-2.56-2.78A3 3 0 0011 4z"></path>\n                                </svg>\n                                <span class="profile-stat-count">${t.followers}</span> followers\n                            </a>\n                            <a href="#" class="profile-stat">\n                                <span class="profile-stat-count">${t.following}</span> following\n                            </a>\n                        </div>\n                    </div>\n                </div>\n\n                \x3c!-- Main Content --\x3e\n                <div class="profile-main">\n                    <nav class="UnderlineNav">\n                        <button class="UnderlineNav-item selected" data-tab="repositories">\n                            <svg width="16" height="16" viewBox="0 0 16 16" fill="currentColor">\n                                <path d="M2 2.5A2.5 2.5 0 014.5 0h8.75a.75.75 0 01.75.75v12.5a.75.75 0 01-.75.75h-2.5a.75.75 0 110-1.5h1.75v-2h-8a1 1 0 00-.714 1.7.75.75 0 01-1.072 1.05A2.495 2.495 0 012 11.5v-9zm10.5-1V9h-8c-.356 0-.694.074-1 .208V2.5a1 1 0 011-1h8zM5 12.25v3.25a.25.25 0 00.4.2l1.45-1.087a.25.25 0 01.3 0L8.6 15.7a.25.25 0 00.4-.2v-3.25a.25.25 0 00-.25-.25h-3.5a.25.25 0 00-.25.25z"></path>\n                            </svg>\n                            Repositories\n                            <span class="Counter" id="tabRepoCount">${n.length}</span>\n                        </button>\n                        <button class="UnderlineNav-item" data-tab="stars">\n                            <svg width="16" height="16" viewBox="0 0 16 16" fill="currentColor">\n                                <path d="M8 .25a.75.75 0 01.673.418l1.882 3.815 4.21.612a.75.75 0 01.416 1.279l-3.046 2.97.719 4.192a.75.75 0 01-1.088.791L8 12.347l-3.766 1.98a.75.75 0 01-1.088-.79l.72-4.194L.818 6.374a.75.75 0 01.416-1.279l4.21-.612L7.327.668A.75.75 0 018 .25z"></path>\n                            </svg>\n                            Stars\n                            <span class="Counter" id="starTabCount">${a.length}</span>\n                        </button>\n                        <button class="UnderlineNav-item" data-tab="activity">\n                            <svg width="16" height="16" viewBox="0 0 16 16" fill="currentColor">\n                                <path d="M6 2c.306 0 .582.187.696.471L10 10.731l1.304-3.26A.751.751 0 0112 7h3.25a.75.75 0 010 1.5h-2.742l-1.812 4.528a.751.751 0 01-1.392 0L6 4.77 4.696 8.03A.751.751 0 014 8.5H.75a.75.75 0 010-1.5h2.742l1.812-4.529A.751.751 0 016 2z"></path>\n                            </svg>\n                            Activity\n                        </button>\n                    </nav>\n\n                    \x3c!-- Repositories Tab --\x3e\n                    <div id="repositories" class="tab-content active">\n                        <div class="repo-filters">\n                            <input id="searchInput" class="form-control" type="text" placeholder="Find a repository..." />\n                            <select id="typeFilter" class="form-control form-select">\n                                <option value="">Type: All</option>\n                                <option value="public">Public</option>\n                                <option value="private">Private</option>\n                                <option value="forks">Forks</option>\n                                <option value="archived">Archived</option>\n                                <option value="mirrors">Mirrors</option>\n                            </select>\n                            <select id="langFilter" class="form-control form-select">\n                                <option value="">Language: All</option>\n                            </select>\n                            <select id="sortBy" class="form-control form-select">\n                                <option value="updated">Sort: Recently updated</option>\n                                <option value="name">Sort: Name</option>\n                                <option value="stars">Sort: Stars</option>\n                            </select>\n                        </div>\n                        <ul class="repo-list" id="repoList"></ul>\n                    </div>\n\n                    \x3c!-- Stars Tab --\x3e\n                    <div id="stars" class="tab-content">\n                        <ul class="starred-repos" id="starredReposList"></ul>\n                    </div>\n\n                    \x3c!-- Activity Tab --\x3e\n                    <div id="activity" class="tab-content">\n                        <div class="activity-container">\n                            <div class="activity-stats-grid">\n                                <div class="activity-stat-card">\n                                    <span class="activity-stat-number">${s.length}</span>\n                                    <span class="activity-stat-label">Recent Events</span>\n                                </div>\n                                <div class="activity-stat-card">\n                                    <span class="activity-stat-number">${c.length}</span>\n                                    <span class="activity-stat-label">Pull Requests</span>\n                                </div>\n                                <div class="activity-stat-card">\n                                    <span class="activity-stat-number">${l.length}</span>\n                                    <span class="activity-stat-label">Issues</span>\n                                </div>\n                                <div class="activity-stat-card">\n                                    <span class="activity-stat-number">${n.length}</span>\n                                    <span class="activity-stat-label">Repositories</span>\n                                </div>\n                            </div>\n                            \n                            ${function(e){const t=new Date,n=new Date(t);n.setFullYear(t.getFullYear()-1);const r=Object.values(e).reduce((e,t)=>e+t,0);let o='<div class="contribution-graph">';o+='<div class="contribution-header">',o+='<div class="contribution-stats">',o+='<h3 class="contribution-title">Contributions</h3>',o+=`<p class="contribution-summary">${r} contributions in the last year</p>`,o+="</div>",o+='<div class="contribution-legend">',o+='<span class="legend-text">Less</span>',o+='<div class="legend-squares">';for(let e=0;e<=4;e++)o+=`<div class="legend-square level-${e}"></div>`;o+="</div>",o+='<span class="legend-text">More</span>',o+="</div>",o+="</div>",o+='<div class="contribution-calendar">',o+='<div class="month-labels">';const s=[];for(let e=0;e<12;e++){const t=new Date(n);t.setMonth(n.getMonth()+e),s.push(t.toLocaleDateString("en",{month:"short"}))}s.forEach((e,t)=>{o+=`<div class="month-label" style="width: ${0===t||11===t?"13px":"26px"}">${e}</div>`}),o+="</div>",o+='<div class="calendar-body">',o+='<div class="weekday-labels">',o+='<div class="weekday-label"></div>',o+='<div class="weekday-label">Mon</div>',o+='<div class="weekday-label"></div>',o+='<div class="weekday-label">Wed</div>',o+='<div class="weekday-label"></div>',o+='<div class="weekday-label">Fri</div>',o+='<div class="weekday-label"></div>',o+="</div>",o+='<div class="contribution-grid">';let i=new Date(n);i.setDate(i.getDate()-i.getDay());for(let r=0;r<53;r++){o+='<div class="contribution-week">';for(let r=0;r<7;r++){const r=i.toISOString().split("T")[0],s=e[r]||0;let a=0;s>0&&s<=2?a=1:s>2&&s<=5?a=2:s>5&&s<=8?a=3:s>8&&(a=4);const c=i>=n&&i<=t,l=c?`${s} contribution${1!==s?"s":""} on ${i.toLocaleDateString("en",{weekday:"short",year:"numeric",month:"short",day:"numeric"})}`:"";o+=`<div class="contribution-day ${c?"active":"inactive"} level-${c?a:0}" \n                       data-date="${r}" \n                       data-count="${s}"\n                       title="${l}"></div>`,i.setDate(i.getDate()+1)}o+="</div>"}return o+="</div>",o+="</div>",o+="</div>",o+="</div>",o}(p)}\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <script nonce="${u}">\n                const vscode = acquireVsCodeApi();\n                const USER_LOGIN = ${JSON.stringify(t.login)};\n                const CURRENT_USER = ${JSON.stringify({login:t.login,id:t.id})};\n                let REPOS = ${g};\n                let STARRED = ${m};\n                const PINNED = ${h};\n                const starredSet = new Set(STARRED.map(r => (r.full_name || (r.owner.login + '/' + r.name))));\n                // Global loader listener\n                window.addEventListener('message', ev => {\n                    const m = ev.data;\n                    if(m && m.command === 'globalLoader') {\n                        const overlay = document.getElementById('globalLoaderOverlay');\n                        const textEl = document.getElementById('globalLoaderText');\n                        if(m.action === 'show') { if(textEl && m.text) textEl.textContent = m.text; overlay && (overlay.style.display='flex'); }\n                        if(m.action === 'hide') { overlay && (overlay.style.display='none'); }\n                    }\n                });\n                function openExplore(e){\n                    try { e && e.preventDefault(); } catch(_){ /* ignore */ }\n                    console.log('[Profile] Explore link clicked, sending message');\n                    vscode.postMessage({ command:'openExplore' });\n                }\n                function openMarketplace(e){\n                    try { e && e.preventDefault(); } catch(_){ /* ignore */ }\n                    console.log('[Profile] Marketplace link clicked, sending message');\n                    vscode.postMessage({ command:'openMarketplace' });\n                }\n                function openSettings(e){\n                    try { e && e.preventDefault(); } catch(_){ /* ignore */ }\n                    console.log('[Profile] Avatar clicked -> open settings');\n                    vscode.postMessage({ command:'openSettings' });\n                }\n                // Attach Explore link handler (CSP-safe, replaces inline onclick)\n                try { document.getElementById('exploreLink')?.addEventListener('click', openExplore); } catch(_){ }\n                try { document.getElementById('marketplaceLink')?.addEventListener('click', openMarketplace); } catch(_){ }\n                // Avatar (top-right) opens settings\n                try { document.getElementById('headerProfileAvatar')?.addEventListener('click', openSettings); } catch(_){ }\n                // Logout button\n                try { document.getElementById('logoutBtnProfile')?.addEventListener('click', ()=>{ vscode.postMessage({ command:'signOut'}); }); } catch(_){ }\n\n                // Navigation Tabs\n                document.querySelectorAll('.UnderlineNav-item').forEach(t => t.addEventListener('click', () => {\n                    document.querySelectorAll('.UnderlineNav-item').forEach(x => x.classList.remove('selected'));\n                    t.classList.add('selected');\n                    document.querySelectorAll('.tab-content').forEach(s => s.classList.remove('active'));\n                    document.getElementById(t.dataset.tab).classList.add('active');\n                }));\n\n                // People Tabs\n                document.querySelectorAll('.people-tab').forEach(t => t.addEventListener('click', () => {\n                    document.querySelectorAll('.people-tab').forEach(x => x.classList.remove('active'));\n                    t.classList.add('active');\n                    document.querySelectorAll('.people-section').forEach(s => s.classList.remove('active'));\n                    document.getElementById(t.dataset.peopleTab + '-section').classList.add('active');\n                }));\n\n                // Actions\n                document.getElementById('createRepoBtn').addEventListener('click', () => vscode.postMessage({ command: 'createRepo' }));\n\n                function fmtUpdated(dateStr){\n                    const date = new Date(dateStr); const now = new Date(); const days = Math.floor((now-date)/(1000*60*60*24));\n                    if(days===0) return 'today'; if(days===1) return 'yesterday'; if(days<30) return days+' days ago'; if(days<365) return Math.floor(days/30)+' months ago'; return Math.floor(days/365)+' years ago';\n                }\n\n                function repoKey(o,r){ return (o+'/'+r).toLowerCase(); }\n\n                function starButton(owner, repo){\n                    const key = owner + '/' + repo;\n                    const isStarred = starredSet.has(key);\n                    return '<button class="btn btn-sm btn-outline btn-star" data-action="toggle-star" data-owner="' + owner + '" data-repo="' + repo + '" type="button">' +\n                  '<svg width="16" height="16" viewBox="0 0 16 16" class="star-icon" fill="currentColor" style="margin-right:4px;">' +\n                               '<path d="M8 .25a.75.75 0 01.673.418l1.882 3.815 4.21.612a.75.75 0 01.416 1.279l-3.046 2.97.719 4.192a.75.75 0 01-1.088.791L8 12.347l-3.766 1.98a.75.75 0 01-1.088-.79l.72-4.194L.818 6.374a.75.75 0 01.416-1.279l4.21-.612L7.327.668A.75.75 0 018 .25z"></path>' +\n                           '</svg> ' + (isStarred ? 'Unstar' : 'Star') + '</button>';\n                }\n\n                function deleteButton(owner, repo){\n                    if (owner !== USER_LOGIN) return '';\n                    return '<button class="btn btn-sm btn-danger" data-action="delete" data-owner="' + owner + '" data-repo="' + repo + '" type="button">' +\n                           '<svg width="16" height="16" viewBox="0 0 16 16" fill="currentColor" style="margin-right:4px;">' +\n                               '<path d="M6.5 1.75a.25.25 0 01.25-.25h2.5a.25.25 0 01.25.25V3h-3V1.75zm4.5 0V3h2.25a.75.75 0 010 1.5H2.75a.75.75 0 010-1.5H5V1.75C5 .784 5.784 0 6.75 0h2.5C10.216 0 11 .784 11 1.75zM4.496 6.675a.75.75 0 10-1.492.15l.66 6.6A1.75 1.75 0 005.405 15h5.19c.9 0 1.652-.681 1.741-1.576l.66-6.6a.75.75 0 00-1.492-.149l-.66 6.6a.25.25 0 01-.249.225h-5.19a.25.25 0 01-.249-.225l-.66-6.6z"></path>' +\n                           '</svg> Delete</button>';\n                }\n\n                function repoListItem(repo){\n                    const owner = (repo.owner?.login) || USER_LOGIN;\n                    const name = repo.name;\n                    const lang = repo.language;\n                    const langColor = lang ? getLangColor(lang) : '#586069';\n                    const isPrivate = repo.private;\n                    \n                    return (\n                        '<li class="repo-list-item" data-owner="' + owner + '" data-repo="' + name + '">' +\n                            '<div class="repo">' +\n                                '<svg width="16" height="16" viewBox="0 0 16 16" fill="currentColor" class="repo-icon">' +\n                                    '<path d="M2 2.5A2.5 2.5 0 014.5 0h8.75a.75.75 0 01.75.75v12.5a.75.75 0 01-.75.75h-2.5a.75.75 0 110-1.5h1.75v-2h-8a1 1 0 00-.714 1.7.75.75 0 01-1.072 1.05A2.495 2.495 0 012 11.5v-9zm10.5-1V9h-8c-.356 0-.694.074-1 .208V2.5a1 1 0 011-1h8zM5 12.25v3.25a.25.25 0 00.4.2l1.45-1.087a.25.25 0 01.3 0L8.6 15.7a.25.25 0 00.4-.2v-3.25a.25.25 0 00-.25-.25h-3.5a.25.25 0 00-.25.25z"></path>' +\n                                '</svg>' +\n                                '<div class="repo-info">' +\n                                    '<h3>' +\n                                        '<a href="#" class="repo-name" data-action="open">' + name + '</a>' +\n                                        (isPrivate ? '<span class="Label Label--secondary">Private</span>' : '') +\n                                    '</h3>' +\n                                    (repo.description ? '<p class="repo-description">' + repo.description + '</p>' : '') +\n                                    '<div class="repo-meta">' +\n                                        (lang ? \n                                            '<span style="display: inline-flex; align-items: center; margin-right: 16px;">' +\n                                                '<span class="repo-language-color" style="background-color: ' + langColor + ';"></span>' + lang +\n                                            '</span>' : ''\n                                        ) +\n                                        '<a href="#" style="display: inline-flex; align-items: center; margin-right: 16px; color: var(--color-fg-muted); text-decoration: none;">' +\n                                            '<svg width="16" height="16" viewBox="0 0 16 16" class="star-icon" fill="currentColor" style="margin-right:4px;">' +\n                                                '<path d="M8 .25a.75.75 0 01.673.418l1.882 3.815 4.21.612a.75.75 0 01.416 1.279l-3.046 2.97.719 4.192a.75.75 0 01-1.088.791L8 12.347l-3.766 1.98a.75.75 0 01-1.088-.79l.72-4.194L.818 6.374a.75.75 0 01.416-1.279l4.21-.612L7.327.668A.75.75 0 018 .25z"></path>' +\n                                            '</svg>' +\n                                            (repo.stargazers_count || 0) +\n                                        '</a>' +\n                                        '<a href="#" style="display: inline-flex; align-items: center; margin-right: 16px; color: var(--color-fg-muted); text-decoration: none;">' +\n                                            '<svg width="16" height="16" viewBox="0 0 16 16" class="star-icon" fill="currentColor" style="margin-right:4px;">' +\n                                                '<path d="M5 3.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm0 2.122a2.25 2.25 0 10-1.5 0v.878A2.25 2.25 0 005.75 8.5h1.5v2.128a2.251 2.251 0 101.5 0V8.5h1.5a2.25 2.25 0 002.25-2.25v-.878a2.25 2.25 0 10-1.5 0v.878a.75.75 0 01-.75.75h-4.5A.75.75 0 015 6.25v-.878zm3.75 7.378a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm3-8.75a.75.75 0 100-1.5.75.75 0 000 1.5z"></path>' +\n                                            '</svg>' +\n                                            (repo.forks_count || 0) +\n                                        '</a>' +\n                                        '<span style="font-size: 12px; color: var(--color-fg-muted);">Updated ' + fmtUpdated(repo.updated_at || repo.pushed_at || new Date().toISOString()) + '</span>' +\n                                    '</div>' +\n                                '</div>' +\n                                '<div class="repo-actions">' +\n                                    starButton(owner, name) +\n                                    deleteButton(owner, name) +\n                                '</div>' +\n                            '</div>' +\n                        '</li>'\n                    );\n                }\n\n                function getLangColor(lang){\n                    const colors = ${JSON.stringify({JavaScript:"#f1e05a",TypeScript:"#3178c6",Python:"#3572A5",Java:"#b07219",HTML:"#e34c26",CSS:"#563d7c",C:"#555555","C++":"#f34b7d","C#":"#239120",Go:"#00ADD8",Rust:"#dea584",PHP:"#4F5D95",Ruby:"#701516",Swift:"#fa7343",Kotlin:"#A97BFF",Dart:"#00B4AB",Scala:"#c22d40",R:"#198CE7",Shell:"#89e051",PowerShell:"#012456",Vue:"#4FC08D",React:"#61DAFB"})};\n                    return colors[lang] || '#586069';\n                }\n\n                // Populate language filter\n                (function(){\n                    const langs = Array.from(new Set(REPOS.map(r => r.language).filter(Boolean))).sort();\n                    const langSel = document.getElementById('langFilter');\n                    langSel.innerHTML = '<option value="">All languages</option>' + langs.map(l => '<option value="' + l + '">' + l + '</option>').join('');\n                })();\n\n                function applyFilters(){\n                    const q = (document.getElementById('searchInput').value || '').toLowerCase();\n                    const type = (document.getElementById('typeFilter').value);\n                    const lang = (document.getElementById('langFilter').value);\n                    const sort = (document.getElementById('sortBy').value);\n                    let list = REPOS.slice();\n                    if (q) list = list.filter(r => (r.name + ' ' + (r.description||'')).toLowerCase().includes(q));\n                    if (type==='public') list = list.filter(r => !r.private);\n                    if (type==='private') list = list.filter(r => r.private);\n                    if (type==='forks') list = list.filter(r => r.fork);\n                    if (type==='archived') list = list.filter(r => r.archived);\n                    if (type==='mirrors') list = list.filter(r => r.mirror_url);\n                    if (lang) list = list.filter(r => r.language === lang);\n                    if (sort==='updated') list.sort((a,b) => new Date(b.updated_at).getTime() - new Date(a.updated_at).getTime());\n                    if (sort==='name') list.sort((a,b) => a.name.localeCompare(b.name));\n                    if (sort==='stars') list.sort((a,b) => (b.stargazers_count||0) - (a.stargazers_count||0));\n                    document.getElementById('repoList').innerHTML = list.map(repoListItem).join('');\n                }\n\n                ['searchInput','typeFilter','langFilter','sortBy'].forEach(id => document.getElementById(id).addEventListener('input', applyFilters));\n                ['typeFilter','langFilter','sortBy'].forEach(id => document.getElementById(id).addEventListener('change', applyFilters));\n\n                // Render pinned\n                // Render starred repositories\n                function renderStars(){\n                    const list = document.getElementById('starredReposList');\n                    list.innerHTML = STARRED.map(repo => {\n                        const owner = repo.owner.login;\n                        const name = repo.name;\n                        const lang = repo.language;\n                        const langColor = lang ? getLangColor(lang) : '#586069';\n                        \n                        // Check if current user owns this repository\n                        const isOwned = CURRENT_USER && owner === CURRENT_USER.login;\n                        const deleteBtn = isOwned ? deleteButton(owner, name) : '';\n                        \n                        return '<li class="starred-repo-item" data-owner="' + owner + '" data-repo="' + name + '">' +\n                               '    <div class="starred-repo">' +\n                               '        <svg width="16" height="16" viewBox="0 0 16 16" fill="currentColor" class="repo-icon">' +\n                               '            <path d="M2 2.5A2.5 2.5 0 014.5 0h8.75a.75.75 0 01.75.75v12.5a.75.75 0 01-.75.75h-2.5a.75.75 0 110-1.5h1.75v-2h-8a1 1 0 00-.714 1.7.75.75 0 01-1.072 1.05A2.495 2.495 0 012 11.5v-9zm10.5-1V9h-8c-.356 0-.694.074-1 .208V2.5a1 1 0 011-1h8zM5 12.25v3.25a.25.25 0 00.4.2l1.45-1.087a.25.25 0 01.3 0L8.6 15.7a.25.25 0 00.4-.2v-3.25a.25.25 0 00-.25-.25h-3.5a.25.25 0 00-.25.25z"></path>' +\n                               '        </svg>' +\n                               '        <div class="starred-repo-info">' +\n                               '            <h3>' +\n                               '                <a href="#" class="starred-repo-name" data-action="open">' + owner + '/' + name + '</a>' +\n                               '                ' + (repo.private ? '<span class="Label Label--secondary">Private</span>' : '') +\n                               '            </h3>' +\n                               '            ' + (repo.description ? '<p class="starred-repo-description">' + repo.description + '</p>' : '') +\n                               '            <div class="starred-repo-meta">' +\n                               '                ' + (lang ? \n                                                    '<span style="display: inline-flex; align-items: center; margin-right: 16px;">' +\n                                                        '<span class="repo-language-color" style="background-color: ' + langColor + ';"></span>' + lang +\n                                                    '</span>' : '') +\n                               '                <span style="display: inline-flex; align-items: center; margin-right: 16px; color: var(--color-fg-muted);">' +\n                               '                    <svg width="16" height="16" viewBox="0 0 16 16" class="star-icon" fill="currentColor" style="margin-right:4px;">' +\n                               '                        <path d="M8 .25a.75.75 0 01.673.418l1.882 3.815 4.21.612a.75.75 0 01.416 1.279l-3.046 2.97.719 4.192a.75.75 0 01-1.088.791L8 12.347l-3.766 1.98a.75.75 0 01-1.088-.79l.72-4.194L.818 6.374a.75.75 0 01.416-1.279l4.21-.612L7.327.668A.75.75 0 018 .25z"></path>' +\n                               '                    </svg>' +\n                               '                    ' + (repo.stargazers_count || 0) +\n                               '                </span>' +\n                               '                <span style="display: inline-flex; align-items: center; margin-right: 16px; color: var(--color-fg-muted);">' +\n                               '                    <svg width="16" height="16" viewBox="0 0 16 16" class="star-icon" fill="currentColor" style="margin-right:4px;">' +\n                               '                        <path d="M5 3.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm0 2.122a2.25 2.25 0 10-1.5 0v.878A2.25 2.25 0 005.75 8.5h1.5v2.128a2.251 2.251 0 101.5 0V8.5h1.5a2.25 2.25 0 002.25-2.25v-.878a2.25 2.25 0 10-1.5 0v.878a.75.75 0 01-.75.75h-4.5A.75.75 0 015 6.25v-.878zm3.75 7.378a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm3-8.75a.75.75 0 100-1.5.75.75 0 000 1.5z"></path>' +\n                               '                    </svg>' +\n                               '                    ' + (repo.forks_count || 0) +\n                               '                </span>' +\n                               '                <span style="font-size: 12px; color: var(--color-fg-muted);">Updated ' + fmtUpdated(repo.updated_at || new Date().toISOString()) + '</span>' +\n                               '            </div>' +\n                               '        </div>' +\n                               '        <div class="starred-repo-actions">' +\n                               '            ' + starButton(owner, name) + deleteBtn +\n                               '        </div>' +\n                               '    </div>' +\n                               '</li>';\n                    }).join('');\n                }\n\n                // Global click handler for buttons and open\n                document.addEventListener('click', (e) => {\n                    const target = e.target.closest('[data-action]');\n                    if (!target) return;\n\n                    e.preventDefault();\n                    e.stopPropagation();\n\n                    const listItem = target.closest('.repo-list-item, .starred-repo-item');\n                    const owner = listItem?.getAttribute('data-owner') || target.getAttribute('data-owner');\n                    const repo = listItem?.getAttribute('data-repo') || target.getAttribute('data-repo');\n                    const action = target.getAttribute('data-action');\n\n                    console.log('Button clicked:', { action, owner, repo, target: target.outerHTML });\n\n                    if (action === 'open') {\n                        const repoData = REPOS.find(r => r.owner.login === owner && r.name === repo);\n                        vscode.postMessage({ \n                            command: 'openRepo', \n                            owner, \n                            repo,\n                            repoUrl: repoData?.clone_url || \`https://github.com/\${owner}/\${repo}.git\`\n                        });\n                    } else if (action === 'toggle-star') {\n                        const key = owner + '/' + repo;\n                        if (starredSet.has(key)) {\n                            console.log('Unstarring:', key);\n                            vscode.postMessage({ command: 'unstarRepository', owner, repo });\n                        } else {\n                            console.log('Starring:', key);\n                            vscode.postMessage({ command: 'starRepository', owner, repo });\n                        }\n                    } else if (action === 'delete') {\n                        // Update button to show loading state\n                        target.disabled = true;\n                        target.innerHTML = '<svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" style="margin-right: 4px; animation: spin 1s linear infinite;"><circle cx="12" cy="12" r="10"></circle><path d="m9 12 2 2 4-4"></path></svg> Deleting...';\n                        target.style.opacity = '0.6';\n                        \n                        console.log('Deleting:', owner + '/' + repo);\n                        vscode.postMessage({ command: 'deleteRepository', owner, repo });\n                    }\n                });\n\n                // Messages from extension (update UI)\n                window.addEventListener('message', (event) => {\n                    const msg = event.data;\n                    console.log('Webview received message:', msg);\n                    if (msg.command === 'starToggled') {\n                        const key = msg.owner + '/' + msg.repo;\n                        if (msg.starred) starredSet.add(key); else starredSet.delete(key);\n                        STARRED = msg.starredRepos || STARRED;\n                        document.getElementById('starTabCount').textContent = String(STARRED.length);\n                        applyFilters();\n                        renderStars();\n                    }\n                    if (msg.command === 'repoDeleted') {\n                        console.log('Processing repoDeleted message for:', msg.owner + '/' + msg.repo);\n                        const key = (msg.owner + '/' + msg.repo).toLowerCase();\n                        const keyNormal = msg.owner + '/' + msg.repo;\n                        \n                        // Remove from repositories array\n                        REPOS = msg.repositories || REPOS.filter(r => (r.owner.login + '/' + r.name).toLowerCase() !== key);\n                        console.log('Updated REPOS array, new length:', REPOS.length);\n                        \n                        // Update both tab count and section count with proper IDs\n                        const tabRepoCount = document.getElementById('tabRepoCount');\n                        const sectionRepoCount = document.getElementById('sectionRepoCount');\n                        if (tabRepoCount) tabRepoCount.textContent = String(REPOS.length);\n                        if (sectionRepoCount) sectionRepoCount.textContent = String(REPOS.length);\n                        \n                            // Remove from starred repositories if it was starred\n                            if (msg.starredRepos) {\n                                STARRED = msg.starredRepos;\n                                starredSet.delete(keyNormal);\n                                document.getElementById('starTabCount').textContent = String(STARRED.length);\n                                renderStars(); // Re-render stars to remove the deleted repo\n                            } else {\n                                // Fallback: remove from starred set and array manually\n                                starredSet.delete(keyNormal);\n                                STARRED = STARRED.filter(r => (r.owner.login + '/' + r.name) !== keyNormal);\n                                document.getElementById('starTabCount').textContent = String(STARRED.length);\n                                renderStars();\n                            }                        // Update the UI immediately\n                        applyFilters();\n                        \n                        // Show success message\n                        const notification = document.createElement('div');\n                        notification.className = 'success-notification';\n                        notification.textContent = 'Repository ' + msg.owner + '/' + msg.repo + ' deleted successfully';\n                        notification.style.cssText = 'position: fixed; top: 20px; right: 20px; background: var(--vscode-notificationsInfoIcon-foreground); color: var(--vscode-editor-background); padding: 12px 16px; border-radius: 4px; font-size: 12px; z-index: 1000; animation: slideIn 0.3s ease;';\n                        document.body.appendChild(notification);\n                        \n                        // Remove notification after 3 seconds\n                        setTimeout(() => {\n                            if (notification.parentNode) {\n                                notification.remove();\n                            }\n                        }, 3000);\n                        \n                        console.log('Repository deleted successfully:', key);\n                    }\n                    if (msg.command === 'deleteError') {\n                        // Re-enable delete buttons and show error\n                        document.querySelectorAll('.btn[data-action="delete"]').forEach(btn => {\n                            if (btn.dataset.owner === msg.owner && btn.dataset.repo === msg.repo) {\n                                btn.disabled = false;\n                                btn.innerHTML = '<svg width="16" height="16" viewBox="0 0 16 16" fill="currentColor" style="margin-right: 4px;"><path d="M6.5 1.75a.25.25 0 01.25-.25h2.5a.25.25 0 01.25.25V3h-3V1.75zm4.5 0V3h2.25a.75.75 0 010 1.5H2.75a.75.75 0 010-1.5H5V1.75C5 .784 5.784 0 6.75 0h2.5C10.216 0 11 .784 11 1.75zM4.496 6.675a.75.75 0 10-1.492.15l.66 6.6A1.75 1.75 0 005.405 15h5.19c.9 0 1.652-.681 1.741-1.576l.66-6.6a.75.75 0 00-1.492-.149l-.66 6.6a.25.25 0 01-.249.225h-5.19a.25.25 0 01-.249-.225l-.66-6.6z"></path></svg> Delete';\n                                btn.style.opacity = '1';\n                            }\n                        });\n                    }\n                    if (msg.command === 'repoCreated') {\n                        console.log('Processing repoCreated message with:', msg.repositories?.length, 'repositories');\n                        // Update repositories list with newly created repo\n                        if (msg.repositories) {\n                            REPOS = msg.repositories;\n                            console.log('Updated REPOS array, new length:', REPOS.length);\n                            // Update both tab count and section count with proper IDs\n                            const tabRepoCount = document.getElementById('tabRepoCount');\n                            const sectionRepoCount = document.getElementById('sectionRepoCount');\n                            console.log('Found tab count element:', !!tabRepoCount, 'section count element:', !!sectionRepoCount);\n                            if (tabRepoCount) tabRepoCount.textContent = String(REPOS.length);\n                            if (sectionRepoCount) sectionRepoCount.textContent = String(REPOS.length);\n                            \n                            applyFilters(); // This will re-render the repositories\n                            console.log('Applied filters and re-rendered repositories');\n                            \n                            // Show success notification\n                            const notification = document.createElement('div');\n                            notification.className = 'success-notification';\n                            notification.textContent = msg.message || 'Repository created successfully!';\n                            notification.style.cssText = 'position: fixed; top: 20px; right: 20px; background: var(--vscode-notificationsInfoIcon-foreground); color: var(--vscode-editor-background); padding: 12px 16px; border-radius: 4px; font-size: 12px; z-index: 1000; animation: slideIn 0.3s ease;';\n                            document.body.appendChild(notification);\n                            \n                            setTimeout(() => {\n                                if (notification.parentNode) {\n                                    notification.remove();\n                                }\n                            }, 3000);\n                        } else {\n                            console.error('repoCreated message received but no repositories data');\n                        }\n                    }\n                });\n\n                // Initial renders\n                applyFilters();\n                renderStars();\n            <\/script>\n        </body>\n        </html>\n    `}(G.webview,m,h,v,y,w,R,D,T,E,S,F),G.webview.onDidReceiveMessage(e=>a(this,void 0,void 0,function*(){switch(console.log("Received message from webview:",e),e.command){case"createRepo":l.commands.executeCommand("github-activity-dashboard.createRepo");break;case"openExplore":try{l.window.showInformationMessage("Opening Explore view..."),yield l.commands.executeCommand("github-activity-dashboard.openExploreView")}catch(e){l.window.showErrorMessage("Failed to open Explore: "+e.message)}break;case"openMarketplace":try{l.window.showInformationMessage("Opening Marketplace view..."),yield l.commands.executeCommand("github-activity-dashboard.openMarketplaceView")}catch(e){l.window.showErrorMessage("Failed to open Marketplace: "+e.message)}break;case"openSettings":try{l.window.showInformationMessage("Opening Profile Settings..."),yield l.commands.executeCommand("github-activity-dashboard.openProfileSettings"),"signOutFromSettings"===e.then&&setTimeout(()=>{l.commands.executeCommand("github.signout"),l.window.showInformationMessage("Signed out of GitHub.")},800)}catch(e){l.window.showErrorMessage("Failed to open Settings: "+e.message)}break;case"signOut":try{const e=[],t=["github.signout","workbench.action.accounts.signOutOfGithub","workbench.action.accounts.signOut"];let n=!1;for(const r of t)try{e.push(r),yield l.commands.executeCommand(r),n=!0;break}catch(e){}if(n){if(g)try{g.dispose()}catch(e){}"Reload"===(yield l.window.showInformationMessage("Sign out executed. Reload window to ensure session cleared?","Reload"))&&(yield l.commands.executeCommand("workbench.action.reloadWindow"))}else{const e=yield l.window.showInformationMessage("Automatic sign out not available. Use Accounts (Status Bar) → Sign Out of GitHub. Or force re-auth (refresh token) now.","Force Re-auth","How?");if("Force Re-auth"===e)try{yield l.authentication.getSession("github",["repo"],{forceNewSession:!0}),l.window.showInformationMessage("Re-auth complete (new token acquired).")}catch(e){l.window.showErrorMessage("Re-auth failed: "+e.message)}else"How?"===e&&l.window.showInformationMessage("Status Bar (Accounts icon) → Sign Out of GitHub → then trigger any feature here to sign back in.")}}catch(e){l.window.showErrorMessage("Logout failed: "+e.message)}break;case"openRepo":f("Opening repository...");try{const t=e.owner,n=e.repo;console.log(`Opening repository explorer for: ${t}/${n}`);const r=l.window.createWebviewPanel("repoExplorer",`📁 ${t}/${n}`,l.ViewColumn.One,{enableScripts:!0}),o=yield l.authentication.getSession("github",["repo"],{createIfNone:!0}),s=new d.Octokit({auth:o.accessToken}),i=yield s.repos.get({owner:t,repo:n}),c=i.data.default_branch,p=yield s.git.getTree({owner:t,repo:n,tree_sha:c,recursive:"1"});r.webview.html=A(t,n,i.data,p.data.tree,r.webview),b(),r.webview.onDidReceiveMessage(e=>a(this,void 0,void 0,function*(){if("openFile"===e.command)try{if(e.type&&"folder"===e.type)return void console.log("Ignoring folder click:",e.path);if(!p.data.tree.find(t=>t.path===e.path&&"blob"===t.type))return console.log("Path is not a file:",e.path),void r.webview.postMessage({command:"showError",error:"This is a directory, not a file. Click on files inside the directory to view their content."});const o=yield s.repos.getContent({owner:t,repo:n,path:e.path,ref:c});if("content"in o.data&&!Array.isArray(o.data)){const t=Buffer.from(o.data.content,"base64").toString("utf-8");console.log("File content fetched successfully, length:",t.length),r.webview.postMessage({command:"showFileContent",path:e.path,content:t,language:O(e.path),size:o.data.size})}else r.webview.postMessage({command:"showError",error:"This appears to be a directory or binary file"})}catch(e){console.error("Error fetching file:",e),r.webview.postMessage({command:"showError",error:`Failed to load file: ${(null==e?void 0:e.message)||"Unknown error"}`})}}))}catch(e){console.error('Error in "openRepo" message handler:',e),b(!0),l.window.showErrorMessage(`Failed to open repository: ${e.message}`)}break;case"openOrg":try{yield l.commands.executeCommand("github-activity-dashboard.openOrganizationProfile",e.orgName)}catch(e){l.window.showErrorMessage(`Failed to open organization: ${e.message}`)}break;case"openEvent":try{yield l.commands.executeCommand("github-activity-dashboard.openEventDetails",e.eventUrl)}catch(e){l.window.showErrorMessage(`Failed to open event: ${e.message}`)}break;case"openProfile":try{yield l.commands.executeCommand("github-activity-dashboard.openUserProfile",e.username)}catch(e){l.window.showErrorMessage(`Failed to open profile: ${e.message}`)}break;case"openStarredRepo":try{const t=e.repoUrl,n=e.repoName;console.log(`Opening starred repo: ${t}, Name: ${n}`);const r=t.match(/github\.com[\/:]([^\/]+)\/([^\/\.]+)/);if(r){const[,e,t]=r;console.log(`Extracted owner: ${e}, repo: ${t}`),yield l.commands.executeCommand("github-activity-dashboard.expandProfileRepo",e,t)}else console.log("Failed to parse starred repo URL"),l.window.showErrorMessage("Invalid starred repository URL format")}catch(e){console.error("Error in openStarredRepo handler:",e),l.window.showErrorMessage(`Failed to open starred repository: ${e.message}`)}break;case"openPullRequest":try{const t=e.prUrl;console.log(`Opening pull request: ${t}`),yield l.env.openExternal(l.Uri.parse(t))}catch(e){console.error("Error in openPullRequest handler:",e),l.window.showErrorMessage(`Failed to open pull request: ${e.message}`)}break;case"openIssue":try{const t=e.issueUrl;console.log(`Opening issue: ${t}`),yield l.env.openExternal(l.Uri.parse(t))}catch(e){console.error("Error in openIssue handler:",e),l.window.showErrorMessage(`Failed to open issue: ${e.message}`)}break;case"starRepository":try{f("Starring repository..."),console.log("Starring repository:",e.owner,e.repo);const t=yield l.authentication.getSession("github",["repo"],{createIfNone:!0}),n=new d.Octokit({auth:t.accessToken});yield n.activity.starRepoForAuthenticatedUser({owner:e.owner,repo:e.repo}),l.window.showInformationMessage(`Starred ${e.owner}/${e.repo}`);const r=(yield n.activity.listReposStarredByAuthenticatedUser({sort:"updated",per_page:50})).data;G.webview.postMessage({command:"starToggled",owner:e.owner,repo:e.repo,starred:!0,starredRepos:r}),b()}catch(e){console.error("Error starring repository:",e),l.window.showErrorMessage(`Failed to star repository: ${e.message}`),b()}break;case"unstarRepository":try{f("Unstarring repository..."),console.log("Unstarring repository:",e.owner,e.repo);const t=yield l.authentication.getSession("github",["repo"],{createIfNone:!0}),n=new d.Octokit({auth:t.accessToken});yield n.activity.unstarRepoForAuthenticatedUser({owner:e.owner,repo:e.repo}),l.window.showInformationMessage(`Unstarred ${e.owner}/${e.repo}`);const r=(yield n.activity.listReposStarredByAuthenticatedUser({sort:"updated",per_page:50})).data;G.webview.postMessage({command:"starToggled",owner:e.owner,repo:e.repo,starred:!1,starredRepos:r}),b()}catch(e){console.error("Error unstarring repository:",e),l.window.showErrorMessage(`Failed to unstar repository: ${e.message}`),b()}break;case"deleteRepository":try{f("Deleting repository..."),console.log("Deleting repository:",e.owner,e.repo);const t=yield l.authentication.getSession("github",["repo","delete_repo"],{createIfNone:!0}),r=new d.Octokit({auth:t.accessToken}),s=yield r.users.getAuthenticated();if(e.owner!==s.data.login)return void l.window.showErrorMessage(`You don't have permission to delete ${e.owner}/${e.repo}. You can only delete your own repositories.`);if("Delete Repository"!==(yield l.window.showWarningMessage(`Are you sure you want to delete ${e.owner}/${e.repo}? This action cannot be undone.`,{modal:!0},"Delete Repository")))return;yield r.repos.delete({owner:e.owner,repo:e.repo}),l.window.showInformationMessage(`Successfully deleted repository ${e.owner}/${e.repo}`);let i=[];try{i=(yield r.repos.listForAuthenticatedUser({sort:"updated",per_page:100})).data}catch(e){console.error("Error fetching updated repositories:",e)}let a=[];try{a=(yield r.activity.listReposStarredByAuthenticatedUser({sort:"updated",per_page:100})).data}catch(e){console.error("Error fetching updated starred repositories:",e)}G.webview.postMessage({command:"repoDeleted",owner:e.owner,repo:e.repo,repositories:i,starredRepos:a}),n.refresh(),c.refresh(),o.refresh(),b()}catch(t){console.error("Error deleting repository:",t),l.window.showErrorMessage(`Failed to delete repository: ${t.message}`),G.webview.postMessage({command:"deleteError",owner:e.owner,repo:e.repo,error:t.message}),b()}}}),void 0,e.subscriptions)}catch(e){l.window.showErrorMessage(`Failed to load profile: ${e.message}`)}})),l.commands.registerCommand("github-activity-dashboard.openStarredFile",e=>a(this,void 0,void 0,function*(){var t,n,r;if(!(null===(t=e.repoInfo)||void 0===t?void 0:t.owner)||!(null===(n=e.repoInfo)||void 0===n?void 0:n.repo)||!(null===(r=e.repoInfo)||void 0===r?void 0:r.sha))return;const o=new d.Octokit({auth:(yield l.authentication.getSession("github",["repo"],{createIfNone:!0})).accessToken});try{const t=yield o.git.getBlob({owner:e.repoInfo.owner,repo:e.repoInfo.repo,file_sha:e.repoInfo.sha}),n=Buffer.from(t.data.content,"base64").toString("utf8"),r=P(e.label.split(".").pop()||""),s=yield l.workspace.openTextDocument({content:n,language:r});yield l.window.showTextDocument(s,{preview:!0})}catch(e){l.window.showErrorMessage(`Failed to open file: ${e.message}`)}})),l.commands.registerCommand("github-activity-dashboard.createIssue",()=>a(this,void 0,void 0,function*(){var e;const n=yield l.window.showInputBox({prompt:"Enter issue title",placeHolder:"Bug: Something is not working..."});if(!n)return;const r=yield l.window.showInputBox({prompt:"Enter issue description (optional)",placeHolder:"Describe the issue..."}),o=null===(e=l.workspace.workspaceFolders)||void 0===e?void 0:e[0];if(o)try{const e=(0,p.default)(o.uri.fsPath),s=(yield e.listRemote(["--get-url","origin"])).match(/github\.com[/:]([\w-]+)\/([\w-]+)(?:\.git)?/);if(!s)return void l.window.showErrorMessage("Not a GitHub repository");const[,i,a]=s,c=yield l.authentication.getSession("github",["repo"],{createIfNone:!0}),u=new d.Octokit({auth:c.accessToken}),g=yield u.issues.create({owner:i,repo:a,title:n,body:r||""});l.window.showInformationMessage(`Issue created: #${g.data.number}`),t.refresh()}catch(e){l.window.showErrorMessage(`Failed to create issue: ${e.message}`)}else l.window.showErrorMessage("No workspace folder open")})),l.commands.registerCommand("github-activity-dashboard.searchRepos",()=>a(this,void 0,void 0,function*(){const e=yield l.window.showInputBox({prompt:"Search GitHub repositories",placeHolder:"Enter search terms..."});if(e)try{const t=yield l.authentication.getSession("github",["repo"],{createIfNone:!0}),n=new d.Octokit({auth:t.accessToken}),r=yield n.search.repos({q:e,sort:"stars",order:"desc"}),o=l.window.createQuickPick();o.items=r.data.items.slice(0,20).map(e=>({label:e.full_name,description:`⭐ ${e.stargazers_count} | ${e.description||"No description"}`,detail:e.html_url})),o.placeholder="Select a repository to open",o.onDidChangeSelection(e=>{e[0]&&(l.env.openExternal(l.Uri.parse(e[0].detail)),o.dispose())}),o.show()}catch(e){l.window.showErrorMessage(`Search failed: ${e.message}`)}})),l.commands.registerCommand("github-activity-dashboard.checkoutCommit",e=>a(this,void 0,void 0,function*(){var t;const n=null===(t=l.workspace.workspaceFolders)||void 0===t?void 0:t[0];if(n)try{const t=(0,p.default)(n.uri.fsPath);yield t.checkout(e),l.window.showInformationMessage(`Checked out commit ${e}`)}catch(e){l.window.showErrorMessage(`Failed to checkout commit: ${e.message}`)}else l.window.showErrorMessage("No workspace folder open")})),l.commands.registerCommand("github-activity-dashboard.openOrganizationProfile",e=>a(this,void 0,void 0,function*(){const t=`https://github.com/orgs/${e}/people`;yield l.env.openExternal(l.Uri.parse(t))})),l.commands.registerCommand("github-activity-dashboard.openEventDetails",e=>a(this,void 0,void 0,function*(){yield l.env.openExternal(l.Uri.parse(e))})),l.commands.registerCommand("github-activity-dashboard.openUserProfile",e=>a(this,void 0,void 0,function*(){const t=`https://github.com/${e}`;yield l.env.openExternal(l.Uri.parse(t))})),l.commands.registerCommand("github-activity-dashboard.openProfileFile",e=>a(this,void 0,void 0,function*(){var t,n,r;if(!(null===(t=e.repoInfo)||void 0===t?void 0:t.owner)||!(null===(n=e.repoInfo)||void 0===n?void 0:n.repo)||!(null===(r=e.repoInfo)||void 0===r?void 0:r.sha))return;const o=new d.Octokit({auth:(yield l.authentication.getSession("github",["repo"],{createIfNone:!0})).accessToken});try{const t=yield o.git.getBlob({owner:e.repoInfo.owner,repo:e.repoInfo.repo,file_sha:e.repoInfo.sha}),n=Buffer.from(t.data.content,"base64").toString("utf8"),r=P(e.label.split(".").pop()||""),s=yield l.workspace.openTextDocument({content:n,language:r});yield l.window.showTextDocument(s,{preview:!0})}catch(e){l.window.showErrorMessage(`Failed to open file: ${e.message}`)}})),l.commands.registerCommand("github-activity-dashboard.switchBranch",(e,t,n)=>a(this,void 0,void 0,function*(){var e;const t=null===(e=l.workspace.workspaceFolders)||void 0===e?void 0:e[0];if(t)try{const e=(0,p.default)(t.uri.fsPath);yield e.checkout(n),l.window.showInformationMessage(`Switched to branch ${n}`)}catch(e){l.window.showErrorMessage(`Failed to switch branch: ${e.message}`)}else l.window.showErrorMessage("No workspace folder open")})),l.commands.registerCommand("github-activity-dashboard.expandProfileRepo",(e,t)=>a(this,void 0,void 0,function*(){try{const n=yield c.getChildren();console.log(`[Provider] Found ${n.length} root items in the 'Profile Repos' tree.`);const r=n.find(n=>{var r,o;return(null===(r=n.repoInfo)||void 0===r?void 0:r.owner)===e&&(null===(o=n.repoInfo)||void 0===o?void 0:o.repo)===t});r?(console.log(`[Success] Found matching tree item for ${e}/${t}.`),yield l.commands.executeCommand("github-profile-repos.focus"),yield h.reveal(r,{select:!0,focus:!0,expand:!0}),console.log("[Action] reveal() command executed.")):(console.error(`[Error] Could not find a matching tree item for ${e}/${t}.`),l.window.showErrorMessage(`Could not find repository ${e}/${t} in the list. Please try refreshing the view.`))}catch(e){console.error("Error in expandProfileRepo handler:",e),l.window.showErrorMessage(`Failed to expand repository view: ${e.message}`)}})),l.commands.registerCommand("github-activity-dashboard.exploreRepo",(t,n,...r)=>a(this,[t,n,...r],void 0,function*(t,n,r=""){const o=l.window.createWebviewPanel("repoExplorer",`${n} Explorer`,l.ViewColumn.One,{enableScripts:!0,localResourceRoots:[l.Uri.joinPath(e.extensionUri,"resources")]}),s=yield l.authentication.getSession("github",["repo"],{createIfNone:!0}),i=new d.Octokit({auth:s.accessToken});try{const e=yield i.rest.repos.get({owner:t,repo:n});let r;try{r=yield i.rest.git.getTree({owner:t,repo:n,tree_sha:"main",recursive:"true"})}catch(e){console.log("Main branch not found, trying master..."),r=yield i.rest.git.getTree({owner:t,repo:n,tree_sha:"master",recursive:"true"})}o.webview.html=A(t,n,e.data,r.data.tree,o.webview),o.webview.onDidReceiveMessage(e=>a(this,void 0,void 0,function*(){if("openFile"===e.command)try{console.log(`Fetching file content for: ${e.path}`);const r=yield i.rest.repos.getContent({owner:t,repo:n,path:e.path,ref:"main"});if(console.log("GitHub API response:",r.data),Array.isArray(r.data))throw new Error("Path is a directory, not a file");const s=r.data;if("file"!==s.type)throw new Error("Selected item is not a file");let a="";if(s.content)try{a=Buffer.from(s.content,"base64").toString("utf-8"),console.log(`Successfully decoded file content (${a.length} characters)`)}catch(e){console.error("Error decoding file content:",e),a="Error: Unable to decode file content"}else a="File is empty or content not available";o.webview.postMessage({command:"showFileContent",path:e.path,content:a,size:s.size||0})}catch(r){if(console.error("Error fetching file:",r),409===r.status||r.message.includes("Git Repository is empty"))try{const r=yield i.rest.repos.getContent({owner:t,repo:n,path:e.path,ref:"master"});if(Array.isArray(r.data))throw new Error("Path is a directory, not a file");const s=r.data;let a="";s.content&&(a=Buffer.from(s.content,"base64").toString("utf-8")),o.webview.postMessage({command:"showFileContent",path:e.path,content:a,size:s.size||0})}catch(t){let n="Unknown error occurred";404===t.status?n=`File not found: ${e.path}`:t.message&&(n=t.message),o.webview.postMessage({command:"showError",error:n})}else{let t="Unknown error occurred";404===r.status?t=`File not found: ${e.path}`:r.message&&(t=r.message),o.webview.postMessage({command:"showError",error:t})}}}))}catch(e){let t="Unknown error";(e instanceof Error||"object"==typeof e&&e&&"message"in e)&&(t=e.message),o.webview.html=`\n                <html>\n                    <body style="font-family: var(--vscode-font-family); padding: 20px;">\n                        <div style="color: var(--vscode-errorForeground); background: var(--vscode-inputValidation-errorBackground); padding: 20px; border-radius: 4px;">\n                            <h3>Failed to load repository</h3>\n                            <p>${t}</p>\n                        </div>\n                    </body>\n                </html>\n            `}})),l.commands.registerCommand("github-activity-dashboard.openExploreView",()=>a(this,void 0,void 0,function*(){try{f("Opening Explore...");const e=yield l.authentication.getSession("github",["repo","read:user"],{createIfNone:!0}),t=new d.Octokit({auth:e.accessToken}),n=(yield t.rest.users.getAuthenticated(),new Date(Date.now()-2592e6).toISOString().split("T")[0]),r=yield t.rest.search.repos({q:`created:>${n}`,sort:"stars",order:"desc",per_page:10});let o=[];try{o=(yield t.rest.activity.listReposStarredByAuthenticatedUser({per_page:100,sort:"created"})).data}catch(e){}const s=new Set(o.map(e=>e.full_name)),i=yield t.rest.repos.listForAuthenticatedUser({per_page:10,sort:"updated"}),a=C(),c=l.window.createWebviewPanel("githubExplore","Explore · GitHub",l.ViewColumn.One,{enableScripts:!0}),p=`<!DOCTYPE html><html lang="en"><head><meta charset="UTF-8"><meta http-equiv="Content-Security-Policy" content="default-src 'none'; img-src ${c.webview.cspSource} https: data:; style-src ${c.webview.cspSource} 'unsafe-inline'; script-src 'nonce-${a}';"><title>Explore</title><style>\n                                body{margin:0;font:14px -apple-system,BlinkMacSystemFont,'Segoe UI',Helvetica,Arial,sans-serif;background:#0d1117;color:#e6edf3;}\n                                .explore-header{display:flex;align-items:center;gap:16px;padding:16px 32px;border-bottom:1px solid #30363d;background:#161b22;}\n                                h1{font-size:20px;margin:0;font-weight:600;}\n                                .layout{display:grid;grid-template-columns:1fr 320px;gap:24px;padding:24px;max-width:1400px;margin:0 auto;}\n                                .card{background:#161b22;border:1px solid #30363d;border-radius:8px;padding:16px;display:flex;flex-direction:column;gap:12px;}\n                                .repo-item{border-bottom:1px solid #30363d;padding:10px 0;display:flex;flex-direction:column;gap:4px;}\n                                .repo-item:last-child{border-bottom:none;}\n                                .repo-name{font-weight:600;color:#2f81f7;cursor:pointer;text-decoration:none;}\n                                .repo-name:hover{text-decoration:underline;}\n                                .meta{display:flex;flex-wrap:wrap;gap:16px;font-size:12px;color:#7d8590;}\n                                .lang-dot{width:12px;height:12px;border-radius:50%;display:inline-block;margin-right:4px;vertical-align:middle;}\n                                .star-btn{background:#21262d;border:1px solid #30363d;color:#e6edf3;font-size:12px;padding:3px 10px;border-radius:6px;cursor:pointer;display:inline-flex;align-items:center;gap:4px;}\n                                .star-btn.starred{background:#2f81f7;border-color:#2f81f7;color:#fff;}\n                                .section-title{margin:0 0 4px 0;font-size:16px;font-weight:600;}\n                                .search-box{width:100%;padding:8px 12px;border:1px solid #30363d;border-radius:6px;background:#0d1117;color:#e6edf3;margin-top:4px;}\n                                .aside-section{display:flex;flex-direction:column;gap:16px;}\n                                .badge{background:#30363d;border-radius:2em;padding:2px 8px;font-size:11px;}\n                        </style></head><body>\n                        <div id="globalLoaderOverlay" style="position:fixed;inset:0;display:none;align-items:center;justify-content:center;background:rgba(13,17,23,.85);backdrop-filter:blur(2px);z-index:4000;">\n                                <div class="gh-loader-shell" style="display:flex;flex-direction:column;align-items:center;gap:18px;">\n                                        <div class="gh-loader-ring" style="width:70px;height:70px;border:4px solid rgba(255,255,255,0.12);border-top-color:#2f81f7;border-radius:50%;animation:ghSpin .9s linear infinite;display:flex;align-items:center;justify-content:center;">\n                                                <svg viewBox="0 0 16 16" width="40" height="40" aria-hidden="true" class="gh-loader-icon" style="color:#2f81f7;filter:drop-shadow(0 0 4px rgba(47,129,247,.6));animation:ghIconPulse 3s ease-in-out infinite;">\n                                                        <path fill="currentColor" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2 .37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z" />\n                                                </svg>\n                                        </div>\n                                        <div id="globalLoaderText" style="font:600 12px/1.4 -apple-system,BlinkMacSystemFont,'Segoe UI',Helvetica,Arial,sans-serif;color:#e6edf3;letter-spacing:.5px;text-transform:uppercase;">Loading...</div>\n                                </div>\n                                <style>@keyframes ghSpin{to{transform:rotate(360deg)}}@keyframes ghIconPulse{0%,100%{opacity:.85}50%{opacity:1}}</style>\n                        </div>\n                        <div class="explore-header"><h1>Explore</h1><span class="badge">Preview</span></div>\n                        <div class="layout">\n                            <div class="main-column">\n                                <div class="card">\n                                    <div style="display:flex;align-items:center;justify-content:space-between;gap:16px;flex-wrap:wrap;">\n                                        <div>\n                                            <div class="section-title">Trending repositories</div>\n                                            <div style="font-size:12px;color:#7d8590;">Created in the last 30 days</div>\n                                        </div>\n                                        <input id="trendSearch" class="search-box" placeholder="Filter trending..." />\n                                    </div>\n                                    <div id="trendingList">\n                                        ${r.data.items.map(e=>{const t=e.owner&&e.owner.login?e.owner.login:"unknown",n=(e.description||"").replace(/`/g,"`").replace(/</g,"&lt;");return`\n                                            <div class='repo-item' data-name='${e.full_name.toLowerCase()}'>\n                                                <a class='repo-name' href='#' onclick="openRepo('${t}','${e.name}')">${e.full_name}</a>\n                                                ${n?`<div style='font-size:12px;color:#7d8590;'>${n}</div>`:""}\n                                                <div class='meta'>\n                                                    ${e.language?`<span><span class='lang-dot' style='background:${R(e.language)}'></span>${e.language}</span>`:""}\n                                                    <span>⭐ ${e.stargazers_count}</span>\n                                                    <span>🍴 ${e.forks_count}</span>\n                                                    <span>⬆ ${e.updated_at.split("T")[0]}</span>\n                                                </div>\n                                                <div>\n                                                    <button class='star-btn ${s.has(e.full_name)?"starred":""}' onclick="toggleStar(event,'${t}','${e.name}',${s.has(e.full_name)})">${s.has(e.full_name)?"★ Starred":"☆ Star"}</button>\n                                                </div>\n                                            </div>`}).join("")}\n                                    </div>\n                                </div>\n                            </div>\n                            <div class="aside-section">\n                                <div class="card">\n                                    <div class="section-title">Your recent repositories</div>\n                                    ${i.data.map(e=>{var t;return`<div class='repo-item' style='border:none;padding:6px 0;'>\n                                        <a class='repo-name' href='#' onclick="openRepo('${null===(t=e.owner)||void 0===t?void 0:t.login}','${e.name}')">${e.name}</a>\n                                        <div class='meta'>${e.language?`<span><span class='lang-dot' style='background:${R(e.language)}'></span>${e.language}</span>`:""}<span>⭐ ${e.stargazers_count}</span></div>\n                                    </div>`}).join("")}\n                                </div>\n                            </div>\n                        </div>\n                        <script nonce='${a}'>\n                            const vscode = acquireVsCodeApi();\n                            function escapeHtml(t){const d=document.createElement('div');d.textContent=t;return d.innerHTML;}\n                            function openRepo(owner, name){vscode.postMessage({command:'openRepo', owner:owner, repo:name});}\n                            function toggleStar(ev, owner, repo, currently){ev.preventDefault();ev.stopPropagation(); if(currently){vscode.postMessage({command:'unstarRepository', owner, repo}); ev.target.textContent='☆ Star'; ev.target.classList.remove('starred');} else {vscode.postMessage({command:'starRepository', owner, repo}); ev.target.textContent='★ Starred'; ev.target.classList.add('starred');}}\n                            document.getElementById('trendSearch').addEventListener('input', e=>{ const v=e.target.value.toLowerCase(); document.querySelectorAll('#trendingList .repo-item').forEach(it=>{it.style.display= it.dataset.name.includes(v)?'flex':'none';}); });\n                        <\/script></body></html>`;c.webview.html=p}catch(e){l.window.showErrorMessage("Failed to open Explore: "+e.message)}finally{b()}})),l.commands.registerCommand("github-activity-dashboard.openMarketplaceView",()=>a(this,void 0,void 0,function*(){try{f("Opening Marketplace...");const e=yield l.authentication.getSession("github",["repo","read:user"],{createIfNone:!0}),t=new d.Octokit({auth:e.accessToken}),n=yield t.rest.search.repos({q:"stars:>5000",sort:"stars",order:"desc",per_page:12}),r=yield t.rest.search.repos({q:"topic:github-action stars:>200",sort:"stars",order:"desc",per_page:8}),o=yield t.rest.search.repos({q:"topic:security stars:>500",sort:"stars",order:"desc",per_page:8}),s=yield t.rest.search.repos({q:"topic:cli stars:>1000",sort:"stars",order:"desc",per_page:8}),i=C(),a=l.window.createWebviewPanel("githubMarketplace","Marketplace · GitHub",l.ViewColumn.One,{enableScripts:!0});function c(e){var t;const n=e.owner&&e.owner.login||"unknown",r=(e.description||"").replace(/`/g,"`").replace(/</g,"&lt;");return`<div class="app-card" data-name='${e.full_name.toLowerCase()}'>\n                        <div class="app-head">\n                            <div class="avatar-circle">${null===(t=n[0])||void 0===t?void 0:t.toUpperCase()}</div>\n                            <div class="app-meta"><a href="#" class="app-name" onclick="openRepo('${n}','${e.name}')">${e.full_name}</a><div class="app-desc">${r}</div></div>\n                        </div>\n                        <div class="stats"><span>⭐ ${e.stargazers_count}</span><span>🍴 ${e.forks_count}</span>${e.language?`<span>${e.language}</span>`:""}</div>\n                    </div>`}const p=`<!DOCTYPE html><html><head><meta charset="UTF-8"><meta http-equiv="Content-Security-Policy" content="default-src 'none'; img-src ${a.webview.cspSource} https: data:; style-src ${a.webview.cspSource} 'unsafe-inline'; script-src 'nonce-${i}';"><title>Marketplace</title><style>\n                    body{margin:0;font:14px -apple-system,BlinkMacSystemFont,'Segoe UI',Helvetica,Arial,sans-serif;background:#0d1117;color:#e6edf3;}\n                    .header{display:flex;justify-content:space-between;align-items:center;padding:16px 32px;background:#161b22;border-bottom:1px solid #30363d;}\n                    h1{margin:0;font-size:20px;font-weight:600;}\n                    .layout{padding:24px;max-width:1400px;margin:0 auto;}\n                    .section{margin-bottom:40px;}\n                    .section-title{font-size:18px;font-weight:600;margin:0 0 8px;}\n                    .section-sub{font-size:12px;color:#7d8590;margin:0 0 16px;}\n                    .grid{display:grid;grid-template-columns:repeat(auto-fill,minmax(280px,1fr));gap:16px;}\n                    .app-card{background:#161b22;border:1px solid #30363d;padding:14px 16px;border-radius:8px;display:flex;flex-direction:column;gap:10px;transition:border-color .2s,background .2s;}\n                    .app-card:hover{border-color:#2f81f7;background:#1c2530;}\n                    .app-head{display:flex;gap:12px;}\n                    .avatar-circle{width:40px;height:40px;border-radius:8px;background:#21262d;display:flex;align-items:center;justify-content:center;font-weight:600;font-size:16px;color:#e6edf3;border:1px solid #30363d;}\n                    .app-meta{flex:1;min-width:0;}\n                    .app-name{color:#2f81f7;text-decoration:none;font-weight:600;display:inline-block;max-width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;}\n                    .app-name:hover{text-decoration:underline;}\n                    .app-desc{font-size:12px;color:#7d8590;line-height:1.4;max-height:34px;overflow:hidden;}\n                    .stats{display:flex;gap:12px;font-size:12px;color:#7d8590;flex-wrap:wrap;}\n                    .search-bar{display:flex;gap:12px;margin:0 0 32px;}\n                    .search-box{flex:1;padding:8px 12px;border:1px solid #30363d;border-radius:6px;background:#0d1117;color:#e6edf3;}\n                    .category-pills{display:flex;gap:8px;flex-wrap:wrap;margin-top:8px;}\n                    .pill{padding:4px 10px;border:1px solid #30363d;border-radius:20px;font-size:12px;background:#161b22;color:#7d8590;cursor:pointer;}\n                    .pill.active,.pill:hover{border-color:#2f81f7;color:#2f81f7;}\n                    .empty{padding:32px;text-align:center;color:#7d8590;font-size:13px;border:1px dashed #30363d;border-radius:8px;}\n                </style></head><body>\n                <div class='header'><h1>Marketplace</h1><div style='font-size:12px;color:#7d8590;'>Preview</div></div>\n                <div class='layout'>\n                    <div class='search-bar'>\n                        <input id='marketSearch' class='search-box' placeholder='Search Marketplace (repositories by stars, description)...'/>\n                    </div>\n                    <div class='section'>\n                        <div class='section-title'>Featured</div>\n                        <div class='section-sub'>Popular open-source repositories (most starred)</div>\n                        <div id='featuredGrid' class='grid'>${n.data.items.map(c).join("")}</div>\n                    </div>\n                    <div class='section'>\n                        <div class='section-title'>GitHub Actions</div>\n                        <div class='section-sub'>Reusable automation workflows</div>\n                        <div id='actionsGrid' class='grid'>${r.data.items.map(c).join("")}</div>\n                    </div>\n                    <div class='section'>\n                        <div class='section-title'>Security</div>\n                        <div class='section-sub'>Security tooling and libraries</div>\n                        <div id='securityGrid' class='grid'>${o.data.items.map(c).join("")}</div>\n                    </div>\n                    <div class='section'>\n                        <div class='section-title'>CLI / Tooling</div>\n                        <div class='section-sub'>Command-line & developer utilities</div>\n                        <div id='toolsGrid' class='grid'>${s.data.items.map(c).join("")}</div>\n                    </div>\n                </div>\n                <script nonce='${i}'>\n                    const vscode = acquireVsCodeApi();\n                    function openRepo(owner,name){vscode.postMessage({command:'openRepo',owner,repo:name});}\n                    const searchInput=document.getElementById('marketSearch');\n                    const allCards=Array.from(document.querySelectorAll('.app-card'));\n                    searchInput.addEventListener('input',()=>{const v=searchInput.value.toLowerCase();let shown=0;allCards.forEach(c=>{const name=c.dataset.name; const text=c.textContent.toLowerCase(); if(name.includes(v)||text.includes(v)){c.style.display='flex';shown++;} else c.style.display='none';});});\n                <\/script>\n                </body></html>`;a.webview.html=p}catch(u){l.window.showErrorMessage("Failed to open Marketplace: "+u.message)}finally{b()}})),l.commands.registerCommand("github-activity-dashboard.openProfileSettings",()=>a(this,void 0,void 0,function*(){try{f("Opening Settings...");const e=yield l.authentication.getSession("github",["user","read:user","user:email"],{createIfNone:!0}),t=new d.Octokit({auth:e.accessToken}),n=yield t.rest.users.getAuthenticated(),r=m.globalState.get("profileSettingsPrefs")||{appearance:"system",showPrivateRepos:!0},o=C(),s=l.window.createWebviewPanel("githubProfileSettings","Settings · GitHub",l.ViewColumn.One,{enableScripts:!0}),i=`<!DOCTYPE html><html><head><meta charset='UTF-8'><meta http-equiv="Content-Security-Policy" content="default-src 'none'; img-src ${s.webview.cspSource} https: data:; style-src ${s.webview.cspSource} 'unsafe-inline'; script-src 'nonce-${o}';"><title>Settings</title><style>\n                    body{margin:0;font:14px -apple-system,BlinkMacSystemFont,'Segoe UI',Helvetica,Arial,sans-serif;background:#0d1117;color:#e6edf3;}\n                    .header{padding:16px 32px;background:#161b22;border-bottom:1px solid #30363d;display:flex;align-items:center;gap:16px;}\n                    h1{margin:0;font-size:20px;font-weight:600;}\n                    .layout{display:grid;grid-template-columns:240px 1fr;max-width:1400px;margin:0 auto;padding:32px;gap:40px;}\n                    .nav{display:flex;flex-direction:column;gap:4px;}\n                    .nav a{padding:6px 10px;border-radius:6px;color:#e6edf3;text-decoration:none;font-weight:500;font-size:13px;}\n                    .nav a.active,.nav a:hover{background:#21262d;}\n                    form{display:flex;flex-direction:column;gap:24px;}\n                    .field{display:flex;flex-direction:column;gap:6px;}\n                    .field label{font-size:12px;font-weight:600;color:#7d8590;text-transform:uppercase;letter-spacing:.5px;}\n                    .field input,.field textarea{background:#0d1117;border:1px solid #30363d;color:#e6edf3;border-radius:6px;padding:8px 10px;font:13px inherit;resize:vertical;}\n                    .field input:focus,.field textarea:focus{outline:none;border-color:#2f81f7;box-shadow:0 0 0 1px #2f81f7;}\n                    .two-col{display:grid;grid-template-columns:repeat(auto-fit,minmax(260px,1fr));gap:24px;}\n                    .avatar-block{display:flex;align-items:center;gap:16px;}\n                    .avatar-block img{width:80px;height:80px;border-radius:50%;border:1px solid #30363d;}\n                    .save-bar{position:sticky;bottom:0;background:rgba(13,17,23,.9);backdrop-filter:blur(4px);padding:16px 0;margin-top:8px;border-top:1px solid #30363d;display:flex;justify-content:flex-end;}\n                    button.primary{background:#238636;color:#fff;border:1px solid #2ea043;font-weight:600;padding:8px 18px;border-radius:6px;cursor:pointer;font-size:14px;}\n                    button.primary:hover{background:#2ea043;}\n                    .section{background:#161b22;border:1px solid #30363d;border-radius:8px;padding:24px;display:flex;flex-direction:column;gap:24px;}\n                    .section h2{margin:0;font-size:16px;font-weight:600;}\n                    .flash{background:#1c4532;color:#7ee2b8;padding:10px 14px;border:1px solid #2ea043;border-radius:6px;font-size:12px;margin-bottom:12px;display:none;}\n                    .error{background:#471d21;color:#ffb1b8;padding:10px 14px;border:1px solid #da3633;border-radius:6px;font-size:12px;margin-bottom:12px;display:none;}\n                    .switch-row{display:flex;align-items:center;gap:12px;}\n                    .switch-row input{width:16px;height:16px;}\n                    .danger{border-color:#da3633;background:#271317;}\n                    .danger h2{color:#ffb1b8;}\n                    .danger button{background:#da3633;border:1px solid #ff7b72;}\n                    .danger button:hover{background:#ff7b72;}\n                    .inline-help{font-size:11px;color:#7d8590;}\n                </style></head><body>\n                                <div class='header' style='display:flex;justify-content:space-between;align-items:center;'>\n                                    <h1>Settings</h1>\n                                    <button id='logoutBtnHeader' style='background:#21262d;border:1px solid #30363d;color:#e6edf3;font-size:12px;padding:6px 12px;border-radius:6px;cursor:pointer;'>Logout</button>\n                                </div>\n                <div class='layout'>\n                   <nav class='nav'>\n                     <a href='#' class='active' data-section='profile'>Public profile</a>\n                     <a href='#' data-section='bio'>Bio</a>\n                     <a href='#' data-section='social'>Social</a>\n                     <a href='#' data-section='account'>Account</a>\n                     <a href='#' data-section='preferences'>Preferences</a>\n                     <a href='#' data-section='danger'>Danger Zone</a>\n                   </nav>\n                   <div id='contentArea'>\n                        <div id='flash' class='flash'></div>\n                        <div id='error' class='error'></div>\n                        <form id='profileForm'>\n                            <div class='section' data-section-panel='profile'>\n                                <h2>Public profile</h2>\n                                <div class='avatar-block'>\n                                    <img src='${n.data.avatar_url}' alt='avatar'/>\n                                    <div style='font-size:12px;color:#7d8590'>Avatar changes must be done on github.com</div>\n                                </div>\n                                <div class='two-col'>\n                                    <div class='field'>\n                                       <label for='name'>Name</label>\n                                       <input id='name' value="${(n.data.name||"").replace(/"/g,"&quot;")}">\n                                    </div>\n                                    <div class='field'>\n                                       <label for='company'>Company</label>\n                                       <input id='company' value="${(n.data.company||"").replace(/"/g,"&quot;")}">\n                                    </div>\n                                </div>\n                                <div class='two-col'>\n                                    <div class='field'>\n                                       <label for='location'>Location</label>\n                                       <input id='location' value="${(n.data.location||"").replace(/"/g,"&quot;")}">\n                                    </div>\n                                    <div class='field'>\n                                       <label for='blog'>Website</label>\n                                       <input id='blog' value="${(n.data.blog||"").replace(/"/g,"&quot;")}">\n                                    </div>\n                                </div>\n                                <div class='field'>\n                                   <label for='email'>Public Email</label>\n                                   <input id='email' value="${(n.data.email||"").replace(/"/g,"&quot;")}" placeholder='your@email.com'>\n                                </div>\n                                <div class='switch-row'>\n                                   <input type='checkbox' id='hireable' ${n.data.hireable?"checked":""} />\n                                   <label for='hireable' style='margin:0;font-size:13px;font-weight:500;color:#e6edf3;'>Available for hire</label>\n                                </div>\n                            </div>\n                            <div class='section' data-section-panel='bio' style='display:none;'>\n                                <h2>Bio</h2>\n                                <div class='field'>\n                                    <label for='bio'>Bio</label>\n                                    <textarea id='bio' rows='5' placeholder='Tell us about yourself...'>${(n.data.bio||"").replace(/</g,"&lt;")}</textarea>\n                                </div>\n                            </div>\n                            <div class='section' data-section-panel='social' style='display:none;'>\n                                <h2>Social links</h2>\n                                <div class='field'>\n                                    <label for='twitter'>Twitter Username</label>\n                                    <input id='twitter' value="${(n.data.twitter_username||"").replace(/"/g,"&quot;")}">\n                                </div>\n                                <div class='inline-help'>Add additional social links via your README for now.</div>\n                            </div>\n                            <div class='section' data-section-panel='account' style='display:none;'>\n                                <h2>Account</h2>\n                                <div class='two-col'>\n                                   <div class='field'><label>Username</label><input value='${n.data.login}' disabled></div>\n                                   <div class='field'><label>User ID</label><input value='${n.data.id}' disabled></div>\n                                </div>\n                                <div class='two-col'>\n                                   <div class='field'><label>Created</label><input value='${new Date(n.data.created_at).toLocaleDateString()}' disabled></div>\n                                   <div class='field'><label>Updated</label><input value='${new Date(n.data.updated_at).toLocaleDateString()}' disabled></div>\n                                </div>\n                                <div class='inline-help'>Immutable profile metadata shown for reference.</div>\n                            </div>\n                            <div class='section' data-section-panel='preferences' style='display:none;'>\n                                <h2>Preferences (Extension)</h2>\n                                <div class='field'>\n                                   <label for='appearance'>Appearance</label>\n                                   <select id='appearance' style='background:#0d1117;border:1px solid #30363d;color:#e6edf3;border-radius:6px;padding:8px 10px;'>\n                                       <option value='system' ${"system"===r.appearance?"selected":""}>System</option>\n                                       <option value='dark' ${"dark"===r.appearance?"selected":""}>Dark</option>\n                                       <option value='light' ${"light"===r.appearance?"selected":""}>Light</option>\n                                   </select>\n                                </div>\n                                <div class='switch-row'>\n                                   <input type='checkbox' id='showPrivateRepos' ${r.showPrivateRepos?"checked":""} />\n                                   <label for='showPrivateRepos' style='margin:0;font-size:13px;font-weight:500;color:#e6edf3;'>Show private repositories in profile views (local only)</label>\n                                </div>\n                                <div class='inline-help'>These preferences affect only this extension inside VS Code.</div>\n                            </div>\n                            <div class='section danger' data-section-panel='danger' style='display:none;'>\n                                <h2>Danger Zone</h2>\n                                <div class='field'>\n                                   <button type='button' id='refreshProfileBtn' class='primary' style='background:#8957e5;border:1px solid #a371f7;'>Refresh Profile Cache</button>\n                                   <div class='inline-help'>Forces refetch of repositories & stats in the profile panel.</div>\n                                </div>\n                                <div class='field'>\n                                   <button type='button' id='signOutBtn' style='background:#da3633;border:1px solid #ff7b72;color:#fff;font-weight:600;padding:8px 18px;border-radius:6px;cursor:pointer;'>Sign out of GitHub</button>\n                                   <div class='inline-help'>Signs you out of the GitHub authentication session in VS Code.</div>\n                                </div>\n                            </div>\n                            <div class='save-bar'><button class='primary' id='saveBtn' type='submit'>Save</button></div>\n                        </form>\n                   </div>\n                </div>\n                <script nonce='${o}'>\n                    const vscode = acquireVsCodeApi();\n                    const navLinks=[...document.querySelectorAll('.nav a')];\n                    const panels=[...document.querySelectorAll('[data-section-panel]')];\n                    navLinks.forEach(l=>l.addEventListener('click',e=>{e.preventDefault(); navLinks.forEach(x=>x.classList.remove('active')); l.classList.add('active'); const sec=l.dataset.section; panels.forEach(p=>{p.style.display=p.getAttribute('data-section-panel')===sec?'flex':'none';});}));\n                    const form=document.getElementById('profileForm');\n                    form.addEventListener('submit',e=>{e.preventDefault(); const payload={\n                        name: (document.getElementById('name')||{value:''}).value || null,\n                        company: (document.getElementById('company')||{value:''}).value || null,\n                        blog: (document.getElementById('blog')||{value:''}).value || null,\n                        location: (document.getElementById('location')||{value:''}).value || null,\n                        bio: (document.getElementById('bio')||{value:''}).value || null,\n                        twitter_username: (document.getElementById('twitter')||{value:''}).value || null,\n                        email: (document.getElementById('email')||{value:''}).value || null,\n                        hireable: (document.getElementById('hireable')||{checked:false}).checked || false\n                    }; vscode.postMessage({command:'updateProfile', payload}); vscode.postMessage({command:'updateLocalSettings', prefs:{appearance:(document.getElementById('appearance')||{value:'system'}).value, showPrivateRepos:(document.getElementById('showPrivateRepos')||{checked:true}).checked}});});\n                    document.getElementById('refreshProfileBtn')?.addEventListener('click',()=>{vscode.postMessage({command:'refreshProfileCache'});});\n                    document.getElementById('signOutBtn')?.addEventListener('click',()=>{vscode.postMessage({command:'signOut'});});\n                    document.getElementById('logoutBtnHeader')?.addEventListener('click',()=>{if(confirm('Logout from GitHub?')){vscode.postMessage({command:'signOut'});}});\n                    window.addEventListener('message',ev=>{const m=ev.data; if(m.command==='updateResult'){ const flash=document.getElementById('flash'); const err=document.getElementById('error'); if(m.ok){err.style.display='none'; flash.textContent='Profile updated successfully'; flash.style.display='block'; setTimeout(()=>flash.style.display='none',3000);} else {flash.style.display='none'; err.textContent=m.error||'Update failed'; err.style.display='block';}}});\n                <\/script>\n                </body></html>`;s.webview.html=i,s.webview.onDidReceiveMessage(e=>a(this,void 0,void 0,function*(){if("updateProfile"===e.command)try{f("Updating profile...");const n={},r=["name","company","blog","location","bio","twitter_username","email","hireable"];for(const t of r)void 0!==e.payload[t]&&(n[t]=e.payload[t]||null);yield t.rest.users.updateAuthenticated(n),s.webview.postMessage({command:"updateResult",ok:!0})}catch(e){s.webview.postMessage({command:"updateResult",ok:!1,error:e.message})}finally{b()}else if("updateLocalSettings"===e.command)try{yield m.globalState.update("profileSettingsPrefs",e.prefs||{})}catch(e){}else if("refreshProfileCache"===e.command)l.commands.executeCommand("github-activity-dashboard.refreshProfile"),s.webview.postMessage({command:"updateResult",ok:!0});else if("signOut"===e.command){try{yield l.commands.executeCommand("github.signout")}catch(e){}l.window.showInformationMessage("Signed out of GitHub. Reload window if session persists.")}}))}catch(e){l.window.showErrorMessage("Failed to open Settings: "+e.message)}finally{b()}}))},t.deactivate=function(){g&&(console.log("Extension deactivating, closing profile panel"),g.dispose(),g=void 0)};const l=i(n(398)),d=n(458),p=c(n(662)),u=n(566);let g,m,h=0;function f(e="Loading..."){if(h++,g)try{g.webview.postMessage({command:"globalLoader",action:"show",text:e})}catch(e){}}function b(e=!1){if(h=e?0:Math.max(0,h-1),0===h&&g)try{g.webview.postMessage({command:"globalLoader",action:"hide"})}catch(e){}}class v{constructor(){this._onDidChangeTreeData=new l.EventEmitter,this.onDidChangeTreeData=this._onDidChangeTreeData.event,this.repositories=[],this.repoItems=[],this.initializeOctokit()}initializeOctokit(){return a(this,void 0,void 0,function*(){const e=yield l.authentication.getSession("github",["repo"],{createIfNone:!0});this.octokit=new d.Octokit({auth:e.accessToken}),this.refresh()})}refresh(){this._onDidChangeTreeData.fire()}getTreeItem(e){return e}getChildren(e){return a(this,void 0,void 0,function*(){if(!this.octokit)return[];if(e)return[];{const e=yield this.octokit.users.getAuthenticated().then(e=>e.data.login),[t,n]=yield Promise.all([this.octokit.search.issuesAndPullRequests({q:`is:open is:issue assignee:${e}`}),this.octokit.search.issuesAndPullRequests({q:`is:open is:pr review-requested:${e}`})]);return[new l.TreeItem(`Assigned Issues: ${t.data.total_count}`,l.TreeItemCollapsibleState.None),new l.TreeItem(`Review Requests: ${n.data.total_count}`,l.TreeItemCollapsibleState.None)]}})}}class y{constructor(){this._onDidChangeTreeData=new l.EventEmitter,this.onDidChangeTreeData=this._onDidChangeTreeData.event,this.initializeOctokit()}initializeOctokit(){return a(this,void 0,void 0,function*(){try{const e=yield l.authentication.getSession("github",["repo"],{createIfNone:!0});this.octokit=new d.Octokit({auth:e.accessToken}),this.refresh()}catch(e){l.window.showErrorMessage("Could not authenticate with GitHub.")}})}refresh(){this._onDidChangeTreeData.fire()}getTreeItem(e){return e}getChildren(e){return a(this,void 0,void 0,function*(){if(!this.octokit)return[new l.TreeItem("Please authenticate with GitHub",l.TreeItemCollapsibleState.None)];try{const e=(yield this.octokit.users.getAuthenticated()).data,t=[new l.TreeItem(`👤 ${e.name||e.login}`,l.TreeItemCollapsibleState.None),new l.TreeItem(`📧 ${e.email||"Private"}`,l.TreeItemCollapsibleState.None),new l.TreeItem(`🏢 ${e.company||"No company"}`,l.TreeItemCollapsibleState.None),new l.TreeItem(`📍 ${e.location||"No location"}`,l.TreeItemCollapsibleState.None),new l.TreeItem(`📝 ${e.bio||"No bio"}`,l.TreeItemCollapsibleState.None),new l.TreeItem(`📊 ${e.public_repos} public repos`,l.TreeItemCollapsibleState.None),new l.TreeItem(`👥 ${e.followers} followers`,l.TreeItemCollapsibleState.None),new l.TreeItem(`👤 ${e.following} following`,l.TreeItemCollapsibleState.None),new l.TreeItem(`⭐ ${e.public_gists} public gists`,l.TreeItemCollapsibleState.None),new l.TreeItem(`📅 Joined ${new Date(e.created_at).toLocaleDateString()}`,l.TreeItemCollapsibleState.None)],n=new l.TreeItem("🔗 View Profile in VS Code",l.TreeItemCollapsibleState.None);return n.command={command:"github-activity-dashboard.openProfile",title:"Open Profile in VS Code",arguments:[]},t.push(n),t}catch(e){return[new l.TreeItem(`Error: ${e.message}`,l.TreeItemCollapsibleState.None)]}})}}class w{constructor(){this._onDidChangeTreeData=new l.EventEmitter,this.onDidChangeTreeData=this._onDidChangeTreeData.event,this.initializeOctokit()}initializeOctokit(){return a(this,void 0,void 0,function*(){try{const e=yield l.authentication.getSession("github",["notifications"],{createIfNone:!0});this.octokit=new d.Octokit({auth:e.accessToken}),this.refresh()}catch(e){l.window.showErrorMessage("Could not authenticate with GitHub.")}})}refresh(){this._onDidChangeTreeData.fire()}getTreeItem(e){return e}getChildren(e){return a(this,void 0,void 0,function*(){if(!this.octokit)return[new l.TreeItem("Please authenticate with GitHub",l.TreeItemCollapsibleState.None)];try{const e=yield this.octokit.activity.listNotificationsForAuthenticatedUser();return 0===e.data.length?[new l.TreeItem("No notifications",l.TreeItemCollapsibleState.None)]:e.data.map(e=>{const t=new l.TreeItem(e.subject.title,l.TreeItemCollapsibleState.None);return t.description=e.repository.full_name,t.tooltip=`${e.subject.type}: ${e.subject.title}\nRepository: ${e.repository.full_name}\nUpdated: ${e.updated_at}`,e.subject.url&&(t.command={command:"vscode.open",title:"Open Notification",arguments:[l.Uri.parse(e.subject.url.replace("api.github.com/repos","github.com").replace("/pulls/","/pull/").replace("/issues/","/issues/"))]}),t.iconPath=e.unread?new l.ThemeIcon("mail"):new l.ThemeIcon("mail-read"),t})}catch(e){return[new l.TreeItem(`Error: ${e.message}`,l.TreeItemCollapsibleState.None)]}})}}class T{constructor(){this._onDidChangeTreeData=new l.EventEmitter,this.onDidChangeTreeData=this._onDidChangeTreeData.event,this.initializeOctokit()}initializeOctokit(){return a(this,void 0,void 0,function*(){const e=yield l.authentication.getSession("github",["repo"],{createIfNone:!0});this.octokit=new d.Octokit({auth:e.accessToken}),this.refresh()})}refresh(){this._onDidChangeTreeData.fire()}getTreeItem(e){return e}getChildren(e){return a(this,void 0,void 0,function*(){return this.octokit?(yield this.octokit.repos.listForAuthenticatedUser()).data.map(e=>{const t=new l.TreeItem(e.name);return t.command={command:"vscode.open",title:"Open repo",arguments:[l.Uri.parse(e.html_url)]},t}):[]})}}class E{constructor(){this._onDidChangeTreeData=new l.EventEmitter,this.onDidChangeTreeData=this._onDidChangeTreeData.event,this.initializeOctokit()}initializeOctokit(){return a(this,void 0,void 0,function*(){const e=yield l.authentication.getSession("github",["repo"],{createIfNone:!0});this.octokit=new d.Octokit({auth:e.accessToken}),this.refresh()})}refresh(){this._onDidChangeTreeData.fire()}getTreeItem(e){return e}getChildren(e){return a(this,void 0,void 0,function*(){if(!this.octokit)return[];const{data:e}=yield this.octokit.activity.listPublicEventsForUser({username:(yield this.octokit.users.getAuthenticated()).data.login});return e.map(e=>new l.TreeItem(`${e.type} on ${e.repo.name}`))})}}class k{constructor(){this._onDidChangeTreeData=new l.EventEmitter,this.onDidChangeTreeData=this._onDidChangeTreeData.event,this.initializeOctokit()}initializeOctokit(){return a(this,void 0,void 0,function*(){const e=yield l.authentication.getSession("github",["repo"],{createIfNone:!0});this.octokit=new d.Octokit({auth:e.accessToken}),this.refresh()})}refresh(){this._onDidChangeTreeData.fire()}getTreeItem(e){return e}getChildren(e){return a(this,void 0,void 0,function*(){return this.octokit?(yield this.octokit.activity.listReposStarredByAuthenticatedUser()).data.map(e=>new S(e.name,l.TreeItemCollapsibleState.None,{owner:e.owner.login,repo:e.name,type:"repo",url:e.html_url})):[]})}}class x{constructor(){this._onDidChangeTreeData=new l.EventEmitter,this.onDidChangeTreeData=this._onDidChangeTreeData.event,this.repositories=[],this.repoItems=[],this.initializeOctokit()}initializeOctokit(){return a(this,void 0,void 0,function*(){const e=yield l.authentication.getSession("github",["repo"],{createIfNone:!0});this.octokit=new d.Octokit({auth:e.accessToken}),this.refresh()})}refresh(){return a(this,void 0,void 0,function*(){if(!this.octokit)return;const e=yield this.octokit.repos.listForAuthenticatedUser({per_page:100});this.repositories=e.data,this.repoItems=[],this._onDidChangeTreeData.fire()})}getTreeItem(e){return e}getChildren(e){return a(this,void 0,void 0,function*(){if(!this.octokit)return[];if(e&&e.repoInfo){const{owner:t,repo:n,path:r}=e.repoInfo;if("repo"===e.repoInfo.type||"dir"===e.repoInfo.type)try{const e=yield this.octokit.repos.getContent({owner:t,repo:n,path:r||""});if(Array.isArray(e.data))return e.data.map(e=>new _(e.name,"dir"===e.type?l.TreeItemCollapsibleState.Collapsed:l.TreeItemCollapsibleState.None,{owner:t,repo:n,path:e.path,type:e.type,sha:e.sha}))}catch(e){return[new _(`Error: ${e.message}`,l.TreeItemCollapsibleState.None)]}return[]}return 0===this.repoItems.length&&this.repositories.length>0&&(this.repoItems=this.repositories.map(e=>{const t=new _(e.name,l.TreeItemCollapsibleState.Collapsed,{owner:e.owner.login,repo:e.name,type:"repo",url:e.html_url});return t.description=e.private?"Private":"Public",t.tooltip=`${e.full_name}\n${e.description||"No description"}\n⭐ ${e.stargazers_count} stars • 🍴 ${e.forks_count} forks`,t})),this.repoItems})}}class _ extends l.TreeItem{constructor(e,t,n){super(e,t),this.label=e,this.collapsibleState=t,this.repoInfo=n,"file"===(null==n?void 0:n.type)&&(this.command={command:"github-activity-dashboard.openProfileFile",title:"Open File",arguments:[this]})}}class S extends l.TreeItem{constructor(e,t,n){super(e,t),this.label=e,this.collapsibleState=t,this.repoInfo=n,"file"===(null==n?void 0:n.type)&&(this.command={command:"github-activity-dashboard.openStarredFile",title:"Open File",arguments:[this]})}}function C(){let e="";for(let t=0;t<32;t++)e+="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".charAt(Math.floor(62*Math.random()));return e}function P(e){return{ts:"typescript",js:"javascript",json:"json",md:"markdown",py:"python",java:"java",cs:"csharp",cpp:"cpp",c:"c",go:"go",html:"html",css:"css"}[e]||"plaintext"}function O(e){var t;return{js:"javascript",jsx:"javascript",ts:"typescript",tsx:"typescript",py:"python",java:"java",cpp:"cpp",c:"c",cs:"csharp",php:"php",rb:"ruby",go:"go",rs:"rust",swift:"swift",kt:"kotlin",scala:"scala",html:"html",css:"css",scss:"scss",sass:"sass",less:"less",json:"json",xml:"xml",yaml:"yaml",yml:"yaml",md:"markdown",sh:"bash",sql:"sql",dockerfile:"dockerfile"}[(null===(t=e.split(".").pop())||void 0===t?void 0:t.toLowerCase())||""]||"plaintext"}function A(e,t,n,r,o){const s=C(),i=(e=>{console.log("=== HIERARCHICAL TREE CREATION ==="),console.log("Processing",e.length,"items");const t={children:new Map};e.forEach(e=>{const n=e.path.split("/");let r=t;n.forEach((t,o)=>{r.children.has(t)||r.children.set(t,{name:t,path:n.slice(0,o+1).join("/"),type:o===n.length-1&&"blob"===e.type?"file":"folder",size:e.size,sha:e.sha,children:new Map}),r=r.children.get(t)})});const n=e=>{const t={name:e.name,path:e.path,type:e.type,size:e.size,sha:e.sha,children:[]};if(e.children&&e.children.size>0){const r=Array.from(e.children.values()).map(e=>n(e)).sort((e,t)=>e.type!==t.type?"folder"===e.type?-1:1:e.name.localeCompare(t.name));t.children=r}return t},r=Array.from(t.children.values()).map(e=>n(e)).sort((e,t)=>e.type!==t.type?"folder"===e.type?-1:1:e.name.localeCompare(t.name));return console.log("Root items:",r.length),console.log("Tree structure built successfully"),console.log("Root items preview:",r.slice(0,3).map(e=>({name:e.name,type:e.type,path:e.path,childrenCount:e.children?e.children.length:0}))),{rootItems:r}})(r);return`\n        <!DOCTYPE html>\n        <html lang="en">\n        <head>\n            <meta charset="UTF-8">\n            <meta name="viewport" content="width=device-width, initial-scale=1.0">\n            <meta http-equiv="Content-Security-Policy" content="default-src 'none'; img-src ${o.cspSource} https: data:; style-src ${o.cspSource} 'unsafe-inline'; script-src 'nonce-${s}';">\n            <title>${e}/${t}</title>\n                        <link rel="stylesheet" href="${o.asWebviewUri(l.Uri.joinPath(m.extensionUri,"resources","repo.css"))}">\n                        <style>\n                            /* Fallback / scroll assurance */\n                            html, body { height:100%; margin:0; }\n                            .container { height:100vh; display:flex; }\n                            .main-content { display:flex; flex-direction:column; flex:1; min-height:0; }\n                            #file-display { flex:1; min-height:0; overflow:auto; }\n                            .blob-wrapper { overflow:auto; max-height:none !important; }\n                            table { width:100%; border-collapse:separate; }\n                            .blob-num { white-space:nowrap; }\n                            .blob-code { white-space:pre; }\n                        </style>\n        </head>\n        <body>\n            <div id="globalLoaderOverlay" role="alert" aria-live="polite" aria-busy="true"><div class="gh-loader-shell"><div class="gh-loader-ring"><svg viewBox="0 0 16 16" width="40" height="40" aria-hidden="true" class="gh-loader-icon"><path fill="currentColor" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2 .37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z"></path></svg></div><div class="gh-loader-text" id="globalLoaderText">Loading...</div></div></div>\n            <style>#globalLoaderOverlay{position:fixed;inset:0;display:none;align-items:center;justify-content:center;background:rgba(13,17,23,.85);backdrop-filter:blur(2px);z-index:9999;}#globalLoaderOverlay.active{display:flex}.gh-loader-shell{display:flex;flex-direction:column;align-items:center;gap:18px}.gh-loader-ring{width:80px;height:80px;border:4px solid rgba(255,255,255,0.12);border-top-color:#2f81f7;border-radius:50%;animation:ghSpin .9s linear infinite;position:relative;display:flex;align-items:center;justify-content:center}.gh-loader-icon{color:#2f81f7;filter:drop-shadow(0 0 6px rgba(47,129,247,.6));animation:ghIconPulse 3s ease-in-out infinite}.gh-loader-text{font:600 13px/1.4 -apple-system,BlinkMacSystemFont,'Segoe UI',Helvetica,Arial,sans-serif;color:#e6edf3;letter-spacing:.5px;text-transform:uppercase}@keyframes ghSpin{to{transform:rotate(360deg)}}@keyframes ghIconPulse{0%,100%{opacity:.85}50%{opacity:1}}</style>\n            <style>#globalLoaderOverlay{display:flex}</style>\n            <div class="container">\n                <div class="sidebar">\n                    <div class="repo-header">\n                        <h1 class="repo-title">${e}/${t}</h1>\n                        <p class="repo-description">${n.description||"No description provided"}</p>\n                        <div class="repo-stats">\n                            <div class="stat">\n                                <span>⭐</span>\n                                <span>${n.stargazers_count||0}</span>\n                            </div>\n                            <div class="stat">\n                                <span>🍴</span>\n                                <span>${n.forks_count||0}</span>\n                            </div>\n                            <div class="stat">\n                                <span>👁️</span>\n                                <span>${n.watchers_count||0}</span>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="file-tree">\n                        ${(e=>{console.log("=== BASIC TREE RENDERING ===");const t=(e,n)=>{const r=20*n+16,o="file"===e.type?"file":"folder",s="folder"===e.type?e.path.replace(/[^a-zA-Z0-9]/g,"_"):"";let i='<div class="tree-item-container">';return i+=`<button class="tree-item ${o}" data-path="${e.path}" data-type="${o}" data-folder-name="${s}" style="padding-left: ${r}px;">`,i+='<span class="tree-icon"></span>'+e.name,i+="</button>","folder"===e.type&&e.children&&e.children.length>0&&(i+=`<div class="folder-children" id="folder-${s}">`,e.children.sort((e,t)=>e.type!==t.type?"folder"===e.type?-1:1:e.name.localeCompare(t.name)).forEach(e=>{i+=t(e,n+1)}),i+="</div>"),i+="</div>",i};let n="";return e.rootItems.sort((e,t)=>e.type!==t.type?"folder"===e.type?-1:1:e.name.localeCompare(t.name)).forEach(e=>{n+=t(e,0)}),console.log("Generated HTML length:",n.length),console.log("Generated HTML preview:",n.substring(0,1e3)),console.log("Number of tree-item buttons:",(n.match(/class="tree-item/g)||[]).length),console.log("Number of folder-children divs:",(n.match(/class="folder-children"/g)||[]).length),console.log("=== END BASIC TREE RENDERING ==="),n})(i)}\n                    </div>\n                </div>\n                <div class="main-content">\n                    <div class="file-toolbar">\n                        <div class="breadcrumbs" id="breadcrumbs"><span class="repo-root">${e} / ${t}</span></div>\n                        <div class="file-actions"><span class="branch-badge">${n.default_branch||"main"}</span></div>\n                    </div>\n                    <div id="file-display"></div>\n                </div>\n            </div>\n            \n            <script nonce="${s}">\n                const vscode = acquireVsCodeApi();\n                // Global loader listener\n                window.addEventListener('message', ev => { const m = ev.data; if(m && m.command==='globalLoader'){ const o=document.getElementById('globalLoaderOverlay'); const t=document.getElementById('globalLoaderText'); if(m.action==='show'){ if(t && m.text) t.textContent=m.text; o && (o.style.display='flex'); } if(m.action==='hide'){ o && (o.style.display='none'); } }});\n                let activeElement = null;\n                \n                // Initialize event listeners when page loads\n                document.addEventListener('DOMContentLoaded', function() {\n                    console.log('DOM Content Loaded - Setting up event listeners');\n                    setupEventListeners();\n                });\n\n                // Also try to set up immediately in case DOMContentLoaded already fired\n                if (document.readyState === 'loading') {\n                    document.addEventListener('DOMContentLoaded', setupEventListeners);\n                } else {\n                    setupEventListeners();\n                }\n\n                function setupEventListeners() {\n                    console.log('Setting up event listeners');\n                    const fileTree = document.querySelector('.file-tree');\n                    if (!fileTree) {\n                        console.error('File tree not found');\n                        return;\n                    }\n\n                    // Log the initial tree structure\n                    try {\n                        console.log('File tree HTML:', fileTree.innerHTML.substring(0, 500) + '...');\n                    } catch (e) {\n                        console.log('Could not read file tree innerHTML');\n                    }\n                    console.log('Tree items found:', document.querySelectorAll('.tree-item').length);\n                    console.log('Folder items found:', document.querySelectorAll('.tree-item.folder').length);\n                    console.log('File items found:', document.querySelectorAll('.tree-item.file').length);\n                    console.log('Folder children divs found:', document.querySelectorAll('.folder-children').length);\n\n                    // Attach direct click handlers to each rendered button to avoid delegation edge cases\n                    attachClickHandlers();\n                }\n\n                function attachClickHandlers() {\n                    const buttons = Array.from(document.querySelectorAll('.tree-item'));\n                    console.log('Attaching click handlers to', buttons.length, 'tree-item buttons');\n                    buttons.forEach(btn => {\n                        // Avoid adding duplicate listeners\n                        // don't use TypeScript-only casts inside the emitted webview script\n                        if (btn && btn.__hasTreeHandler) return;\n                        try { btn.__hasTreeHandler = true; } catch (e) { /* ignore */ }\n\n                        btn.addEventListener('click', (e) => {\n                            try {\n                                e.preventDefault();\n                                e.stopPropagation();\n                                const path = btn.getAttribute('data-path');\n                                const type = btn.getAttribute('data-type');\n                                const folderName = btn.getAttribute('data-folder-name');\n                                console.log('tree-item clicked', { path, type, folderName });\n                                if (type === 'folder') {\n                                    toggleFolder(btn);\n                                } else if (type === 'file') {\n                                    openFile(path, btn);\n                                }\n                            } catch (err) {\n                                console.error('Error in tree-item click handler:', err);\n                            }\n                        });\n                    });\n                }\n                \n                function toggleFolder(element, event) {\n                    if (event) {\n                        try { event.stopPropagation(); } catch (e) {}\n                        try { event.preventDefault(); } catch (e) {}\n                    }\n\n                    console.log('=== FOLDER TOGGLE ===');\n\n                    const folderName = element.getAttribute('data-folder-name');\n                    console.log('Toggling folder:', folderName);\n\n                    if (!folderName) {\n                        console.error('No folder name found');\n                        return;\n                    }\n\n                    // Find the folder children div by ID\n                    const folderDiv = document.getElementById('folder-' + folderName);\n                    console.log('Looking for folder div with id:', 'folder-' + folderName);\n                    console.log('Found folder div:', !!folderDiv);\n\n                    if (folderDiv) {\n                        // Use classList to toggle visibility reliably\n                        const isShown = folderDiv.classList.contains('show');\n                        if (!isShown) {\n                            folderDiv.classList.add('show');\n                            element.classList.add('expanded');\n                            console.log('✅ EXPANDED folder:', folderName);\n                        } else {\n                            folderDiv.classList.remove('show');\n                            element.classList.remove('expanded');\n                            console.log('✅ COLLAPSED folder:', folderName);\n                        }\n                    } else {\n                        console.error('❌ Could not find folder div for:', folderName);\n                        // Debug: list all folder divs\n                        const allFolders = document.querySelectorAll('[id^="folder-"]');\n                        console.log('Available folder divs:', allFolders.length);\n                        allFolders.forEach(function(folder, index) {\n                            console.log('  ' + index + ': id="' + folder.id + '"');\n                        });\n\n                        // Try to find the element by different means\n                        const allElements = document.querySelectorAll('.folder-children');\n                        console.log('All .folder-children elements:', allElements.length);\n                        allElements.forEach(function(el, index) {\n                            try {\n                                console.log('  ' + index + ': id="' + el.id + '", display="' + el.style.display + '"');\n                            } catch (e) {\n                                console.log('  ' + index + ': id="' + el.id + '", display="(unavailable)"');\n                            }\n                        });\n                    }\n\n                    console.log('=== END FOLDER TOGGLE ===');\n                }\n                \n                function openFile(path, element) {\n                    const type = element.getAttribute('data-type');\n                    console.log('Opening file:', path, 'Type:', type);\n                    \n                    // Don't open folders as files\n                    if (type === 'folder') {\n                        console.log('Ignoring folder click - should be handled by toggleFolder');\n                        return;\n                    }\n                    \n                    // Clear previous selection\n                    if (activeElement) {\n                        activeElement.classList.remove('active');\n                    }\n                    \n                    // Mark current file as active\n                    element.classList.add('active');\n                    activeElement = element;\n                    \n                    // Show overlay loader with file name (lock so initial hide won't remove it)\n                    try {\n                        const overlay = document.getElementById('globalLoaderOverlay');\n                        if (overlay) {\n                            overlay.dataset.locked = '1';\n                            overlay.style.display = 'flex';\n                            const t = document.getElementById('globalLoaderText');\n                            if (t) t.textContent = 'Loading ' + (path.split('/').pop() || path) + '...';\n                        }\n                    } catch (e) { console.warn('Overlay show failed', e); }\n                    // Also put a lightweight inline placeholder\n                    document.getElementById('file-display').innerHTML = '<div class="loading"><span>Loading ' + path + '...</span></div>';\n                    \n                    // Request file content with type information\n                    vscode.postMessage({\n                        command: 'openFile',\n                        path: path,\n                        type: type\n                    });\n                }\n                \n                // Handle messages from extension\n                window.addEventListener('message', event => {\n                    const message = event.data;\n                    console.log('Received message:', message);\n                    \n                    if (message.command === 'showFileContent') {\n                        const lines = message.content.split('\\n');\n                        const fileDisplayElement = document.getElementById('file-display');\n                        if (fileDisplayElement) {\n                            updateBreadcrumbs(message.path);\n                            const numberedRows = lines.map(function(line, i){\n                                return '<tr><td id="L'+(i+1)+'" class="blob-num">'+(i+1)+'</td><td class="blob-code"><span class="blob-code-inner">'+escapeHtml(line)+'</span></td></tr>';\n                            }).join('');\n                            fileDisplayElement.innerHTML = ''\n                              + '<div class="Box">'\n                              +   '<div class="Box-header">'\n                              +     '<span class="file-info">'+escapeHtml(message.path.split('/').pop()||'')+'</span>'\n                              +     '<span>'+lines.length+' lines ('+Math.round((message.size||0)/1024)+' KB)</span>'\n                              +     '<span style="margin-left:auto; color:var(--color-fg-muted);">UTF-8</span>'\n                              +   '</div>'\n                              +   '<div class="blob-wrapper"><table><tbody>'+numberedRows+'</tbody></table></div>'\n                              + '</div>';\n                        }\n                        const ov = document.getElementById('globalLoaderOverlay'); if (ov) { ov.style.display='none'; delete ov.dataset.locked; }\n                    } else if (message.command === 'showError') {\n                        document.getElementById('file-display').innerHTML = \n                            '<div class="error">' +\n                                '<strong>Error:</strong> ' + message.error +\n                            '</div>';\n                        const ov = document.getElementById('globalLoaderOverlay'); if (ov) { ov.style.display='none'; delete ov.dataset.locked; }\n                    }\n                });\n                \n                function escapeHtml(text) {\n                    const div = document.createElement('div');\n                    div.textContent = text;\n                    return div.innerHTML;\n                }\n                function updateBreadcrumbs(path) {\n                    const bc = document.getElementById('breadcrumbs');\n                    if (!bc) return;\n                    const segments = path.split('/').filter(Boolean);\n                    let html = '<span class="repo-root">${e} / ${t}</span>';\n                    let accum = '';\n                    segments.forEach(seg => {\n                        accum = accum ? accum + '/' + seg : seg;\n                        html += ' <span class="sep">/</span> <span>'+escapeHtml(seg)+'</span>';\n                    });\n                    bc.innerHTML = html;\n                }\n                // Initial welcome\n                document.getElementById('file-display').innerHTML = '<div class="welcome-screen"><div class="welcome-icon">📁</div><div class="welcome-title">${e}/${t}</div><div class="welcome-subtitle">Select a file to view its contents</div></div>';\n                // Hide initial overlay after tree is rendered (unless a file load locked it)\n                try { const ov=document.getElementById('globalLoaderOverlay'); if(ov){ const t=document.getElementById('globalLoaderText'); if(t) t.textContent='Loading repository...'; setTimeout(()=>{ if(!ov.dataset.locked) ov.style.display='none'; }, 300); } } catch(e) {}\n            <\/script>\n        </body>\n        </html>\n    `}function R(e){return{JavaScript:"#f1e05a",TypeScript:"#3178c6",Python:"#3572A5",Java:"#b07219",HTML:"#e34c26",CSS:"#563d7c",C:"#555555","C++":"#f34b7d","C#":"#239120",Go:"#00ADD8",Rust:"#dea584",PHP:"#4F5D95",Ruby:"#701516",Swift:"#fa7343",Kotlin:"#A97BFF",Dart:"#00B4AB",Scala:"#c22d40",R:"#198CE7",Shell:"#89e051",PowerShell:"#012456",Vue:"#4FC08D",React:"#61DAFB"}[e]||"#586069"}},317:e=>{"use strict";e.exports=require("child_process")},346:e=>{e.exports=function e(t,n,r,o){if("function"!=typeof r)throw new Error("method for before hook must be a function");return o||(o={}),Array.isArray(n)?n.reverse().reduce(function(n,r){return e.bind(null,t,r,n,o)},r)():Promise.resolve().then(function(){return t.registry[n]?t.registry[n].reduce(function(e,t){return t.hook.bind(null,e,o)},r)():r(o)})}},398:e=>{"use strict";e.exports=require("vscode")},423:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=n(896),s=r(n(753)).default("@kwsites/file-exists");t.exists=function(e,n=t.READABLE){return function(e,t,n){s("checking %s",e);try{const r=o.statSync(e);return r.isFile()&&t?(s("[OK] path represents a file"),!0):r.isDirectory()&&n?(s("[OK] path represents a directory"),!0):(s("[FAIL] path represents something other than a file or directory"),!1)}catch(e){if("ENOENT"===e.code)return s("[FAIL] path is not accessible: %o",e),!1;throw s("[FATAL] %o",e),e}}(e,(n&t.FILE)>0,(n&t.FOLDER)>0)},t.FILE=1,t.FOLDER=2,t.READABLE=t.FILE+t.FOLDER},447:e=>{e.exports=function(e,t,n){if(e.registry[t]){var r=e.registry[t].map(function(e){return e.orig}).indexOf(n);-1!==r&&e.registry[t].splice(r,1)}}},458:(e,t,n)=>{"use strict";function r(){return"object"==typeof navigator&&"userAgent"in navigator?navigator.userAgent:"object"==typeof process&&void 0!==process.version?`Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`:"<environment undetectable>"}n.r(t),n.d(t,{Octokit:()=>ee});var o=n(811);function s(e,t){const n=Object.assign({},e);return Object.keys(t).forEach(r=>{!function(e){if("object"!=typeof e||null===e)return!1;if("[object Object]"!==Object.prototype.toString.call(e))return!1;const t=Object.getPrototypeOf(e);if(null===t)return!0;const n=Object.prototype.hasOwnProperty.call(t,"constructor")&&t.constructor;return"function"==typeof n&&n instanceof n&&Function.prototype.call(n)===Function.prototype.call(e)}(t[r])?Object.assign(n,{[r]:t[r]}):r in e?n[r]=s(e[r],t[r]):Object.assign(n,{[r]:t[r]})}),n}function i(e){for(const t in e)void 0===e[t]&&delete e[t];return e}function a(e,t,n){if("string"==typeof t){let[e,r]=t.split(" ");n=Object.assign(r?{method:e,url:r}:{url:e},n)}else n=Object.assign({},t);var r;n.headers=(r=n.headers)?Object.keys(r).reduce((e,t)=>(e[t.toLowerCase()]=r[t],e),{}):{},i(n),i(n.headers);const o=s(e||{},n);return"/graphql"===n.url&&(e&&e.mediaType.previews?.length&&(o.mediaType.previews=e.mediaType.previews.filter(e=>!o.mediaType.previews.includes(e)).concat(o.mediaType.previews)),o.mediaType.previews=(o.mediaType.previews||[]).map(e=>e.replace(/-preview/,""))),o}const c=/\{[^{}}]+\}/g;function l(e){return e.replace(/(?:^\W+)|(?:(?<!\W)\W+$)/g,"").split(/,/)}function d(e,t){const n={__proto__:null};for(const r of Object.keys(e))-1===t.indexOf(r)&&(n[r]=e[r]);return n}function p(e){return e.split(/(%[0-9A-Fa-f]{2})/g).map(function(e){return/%[0-9A-Fa-f]/.test(e)||(e=encodeURI(e).replace(/%5B/g,"[").replace(/%5D/g,"]")),e}).join("")}function u(e){return encodeURIComponent(e).replace(/[!'()*]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})}function g(e,t,n){return t="+"===e||"#"===e?p(t):u(t),n?u(n)+"="+t:t}function m(e){return null!=e}function h(e){return";"===e||"&"===e||"?"===e}function f(e,t){var n=["+","#",".","/",";","?","&"];return e=e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,function(e,r,o){if(r){let e="";const o=[];if(-1!==n.indexOf(r.charAt(0))&&(e=r.charAt(0),r=r.substr(1)),r.split(/,/g).forEach(function(n){var r=/([^:\*]*)(?::(\d+)|(\*))?/.exec(n);o.push(function(e,t,n,r){var o=e[n],s=[];if(m(o)&&""!==o)if("string"==typeof o||"number"==typeof o||"boolean"==typeof o)o=o.toString(),r&&"*"!==r&&(o=o.substring(0,parseInt(r,10))),s.push(g(t,o,h(t)?n:""));else if("*"===r)Array.isArray(o)?o.filter(m).forEach(function(e){s.push(g(t,e,h(t)?n:""))}):Object.keys(o).forEach(function(e){m(o[e])&&s.push(g(t,o[e],e))});else{const e=[];Array.isArray(o)?o.filter(m).forEach(function(n){e.push(g(t,n))}):Object.keys(o).forEach(function(n){m(o[n])&&(e.push(u(n)),e.push(g(t,o[n].toString())))}),h(t)?s.push(u(n)+"="+e.join(",")):0!==e.length&&s.push(e.join(","))}else";"===t?m(o)&&s.push(u(n)):""!==o||"&"!==t&&"?"!==t?""===o&&s.push(""):s.push(u(n)+"=");return s}(t,e,r[1],r[2]||r[3]))}),e&&"+"!==e){var s=",";return"?"===e?s="&":"#"!==e&&(s=e),(0!==o.length?e:"")+o.join(s)}return o.join(",")}return p(o)}),"/"===e?e:e.replace(/\/$/,"")}function b(e){let t,n=e.method.toUpperCase(),r=(e.url||"/").replace(/:([a-z]\w+)/g,"{$1}"),o=Object.assign({},e.headers),s=d(e,["method","baseUrl","url","headers","request","mediaType"]);const i=function(e){const t=e.match(c);return t?t.map(l).reduce((e,t)=>e.concat(t),[]):[]}(r);var a;r=(a=r,{expand:f.bind(null,a)}).expand(s),/^http/.test(r)||(r=e.baseUrl+r);const p=d(s,Object.keys(e).filter(e=>i.includes(e)).concat("baseUrl"));if(!/application\/octet-stream/i.test(o.accept)&&(e.mediaType.format&&(o.accept=o.accept.split(/,/).map(t=>t.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,`application/vnd$1$2.${e.mediaType.format}`)).join(",")),r.endsWith("/graphql")&&e.mediaType.previews?.length)){const t=o.accept.match(/(?<![\w-])[\w-]+(?=-preview)/g)||[];o.accept=t.concat(e.mediaType.previews).map(t=>`application/vnd.github.${t}-preview${e.mediaType.format?`.${e.mediaType.format}`:"+json"}`).join(",")}return["GET","HEAD"].includes(n)?r=function(e,t){const n=/\?/.test(e)?"&":"?",r=Object.keys(t);return 0===r.length?e:e+n+r.map(e=>"q"===e?"q="+t.q.split("+").map(encodeURIComponent).join("+"):`${e}=${encodeURIComponent(t[e])}`).join("&")}(r,p):"data"in p?t=p.data:Object.keys(p).length&&(t=p),o["content-type"]||void 0===t||(o["content-type"]="application/json; charset=utf-8"),["PATCH","PUT"].includes(n)&&void 0===t&&(t=""),Object.assign({method:n,url:r,headers:o},void 0!==t?{body:t}:null,e.request?{request:e.request}:null)}function v(e,t,n){return b(a(e,t,n))}const y=function e(t,n){const r=a(t,n),o=v.bind(null,r);return Object.assign(o,{DEFAULTS:r,defaults:e.bind(null,r),merge:a.bind(null,r),parse:b})}(null,{method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":`octokit-endpoint.js/9.0.6 ${r()}`},mediaType:{format:""}});class w extends Error{constructor(e){super(e),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="Deprecation"}}var T=n(519),E=n.n(T);const k=E()(e=>console.warn(e)),x=E()(e=>console.warn(e));class _ extends Error{constructor(e,t,n){let r;super(e),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="HttpError",this.status=t,"headers"in n&&void 0!==n.headers&&(r=n.headers),"response"in n&&(this.response=n.response,r=n.response.headers);const o=Object.assign({},n.request);n.request.headers.authorization&&(o.headers=Object.assign({},n.request.headers,{authorization:n.request.headers.authorization.replace(/(?<! ) .*$/," [REDACTED]")})),o.url=o.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]"),this.request=o,Object.defineProperty(this,"code",{get:()=>(k(new w("[@octokit/request-error] `error.code` is deprecated, use `error.status`.")),t)}),Object.defineProperty(this,"headers",{get:()=>(x(new w("[@octokit/request-error] `error.headers` is deprecated, use `error.response.headers`.")),r||{})})}}function S(e){const t=e.request&&e.request.log?e.request.log:console,n=!1!==e.request?.parseSuccessResponseBody;(function(e){if("object"!=typeof e||null===e)return!1;if("[object Object]"!==Object.prototype.toString.call(e))return!1;const t=Object.getPrototypeOf(e);if(null===t)return!0;const n=Object.prototype.hasOwnProperty.call(t,"constructor")&&t.constructor;return"function"==typeof n&&n instanceof n&&Function.prototype.call(n)===Function.prototype.call(e)}(e.body)||Array.isArray(e.body))&&(e.body=JSON.stringify(e.body));let r,o,s={},{fetch:i}=globalThis;if(e.request?.fetch&&(i=e.request.fetch),!i)throw new Error("fetch is not set. Please pass a fetch implementation as new Octokit({ request: { fetch }}). Learn more at https://github.com/octokit/octokit.js/#fetch-missing");return i(e.url,{method:e.method,body:e.body,redirect:e.request?.redirect,headers:e.headers,signal:e.request?.signal,...e.body&&{duplex:"half"}}).then(async i=>{o=i.url,r=i.status;for(const e of i.headers)s[e[0]]=e[1];if("deprecation"in s){const n=s.link&&s.link.match(/<([^<>]+)>; rel="deprecation"/),r=n&&n.pop();t.warn(`[@octokit/request] "${e.method} ${e.url}" is deprecated. It is scheduled to be removed on ${s.sunset}${r?`. See ${r}`:""}`)}if(204!==r&&205!==r){if("HEAD"===e.method){if(r<400)return;throw new _(i.statusText,r,{response:{url:o,status:r,headers:s,data:void 0},request:e})}if(304===r)throw new _("Not modified",r,{response:{url:o,status:r,headers:s,data:await C(i)},request:e});if(r>=400){const t=await C(i),n=new _(function(e){if("string"==typeof e)return e;let t;return t="documentation_url"in e?` - ${e.documentation_url}`:"","message"in e?Array.isArray(e.errors)?`${e.message}: ${e.errors.map(JSON.stringify).join(", ")}${t}`:`${e.message}${t}`:`Unknown error: ${JSON.stringify(e)}`}(t),r,{response:{url:o,status:r,headers:s,data:t},request:e});throw n}return n?await C(i):i.body}}).then(e=>({status:r,url:o,headers:s,data:e})).catch(t=>{if(t instanceof _)throw t;if("AbortError"===t.name)throw t;let n=t.message;throw"TypeError"===t.name&&"cause"in t&&(t.cause instanceof Error?n=t.cause.message:"string"==typeof t.cause&&(n=t.cause)),new _(n,500,{request:e})})}async function C(e){const t=e.headers.get("content-type");return/application\/json/.test(t)?e.json().catch(()=>e.text()).catch(()=>""):!t||/^text\/|charset=utf-8$/.test(t)?e.text():function(e){return e.arrayBuffer()}(e)}const P=function e(t,n){const r=t.defaults(n);return Object.assign(function(t,n){const o=r.merge(t,n);if(!o.request||!o.request.hook)return S(r.parse(o));const s=(e,t)=>S(r.parse(r.merge(e,t)));return Object.assign(s,{endpoint:r,defaults:e.bind(null,r)}),o.request.hook(s,o)},{endpoint:r,defaults:e.bind(null,r)})}(y,{headers:{"user-agent":`octokit-request.js/8.4.1 ${r()}`}});var O=class extends Error{constructor(e,t,n){super("Request failed due to following response errors:\n"+n.errors.map(e=>` - ${e.message}`).join("\n")),this.request=e,this.headers=t,this.response=n,this.name="GraphqlResponseError",this.errors=n.errors,this.data=n.data,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},A=["method","baseUrl","url","headers","request","query","mediaType"],R=["query","method","url"],F=/\/api\/v3\/?$/;function G(e,t){const n=e.defaults(t);return Object.assign((e,t)=>function(e,t,n){if(n){if("string"==typeof t&&"query"in n)return Promise.reject(new Error('[@octokit/graphql] "query" cannot be used as variable name'));for(const e in n)if(R.includes(e))return Promise.reject(new Error(`[@octokit/graphql] "${e}" cannot be used as variable name`))}const r="string"==typeof t?Object.assign({query:t},n):t,o=Object.keys(r).reduce((e,t)=>A.includes(t)?(e[t]=r[t],e):(e.variables||(e.variables={}),e.variables[t]=r[t],e),{}),s=r.baseUrl||e.endpoint.DEFAULTS.baseUrl;return F.test(s)&&(o.url=s.replace(F,"/api/graphql")),e(o).then(e=>{if(e.data.errors){const t={};for(const n of Object.keys(e.headers))t[n]=e.headers[n];throw new O(o,t,e.data)}return e.data.data})}(n,e,t),{defaults:G.bind(null,n),endpoint:n.endpoint})}G(P,{headers:{"user-agent":`octokit-graphql.js/7.1.1 ${r()}`},method:"POST",url:"/graphql"});const D=/^v1\./,U=/^ghs_/,I=/^ghu_/;async function L(e){const t=3===e.split(/\./).length,n=D.test(e)||U.test(e),r=I.test(e);return{type:"token",token:e,tokenType:t?"app":n?"installation":r?"user-to-server":"oauth"}}async function $(e,t,n,r){const o=t.endpoint.merge(n,r);return o.headers.authorization=function(e){return 3===e.split(/\./).length?`bearer ${e}`:`token ${e}`}(e),t(o)}const M=function(e){if(!e)throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");if("string"!=typeof e)throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string");return e=e.replace(/^(token|bearer) +/i,""),Object.assign(L.bind(null,e),{hook:$.bind(null,e)})};var j="5.2.2",B=()=>{},z=console.warn.bind(console),q=console.error.bind(console),N=`octokit-core.js/${j} ${r()}`,H=class{static{this.VERSION=j}static defaults(e){return class extends(this){constructor(...t){const n=t[0]||{};super("function"!=typeof e?Object.assign({},e,n,n.userAgent&&e.userAgent?{userAgent:`${n.userAgent} ${e.userAgent}`}:null):e(n))}}}static{this.plugins=[]}static plugin(...e){const t=this.plugins;return class extends(this){static{this.plugins=t.concat(e.filter(e=>!t.includes(e)))}}}constructor(e={}){const t=new o.Collection,n={baseUrl:P.endpoint.DEFAULTS.baseUrl,headers:{},request:Object.assign({},e.request,{hook:t.bind(null,"request")}),mediaType:{previews:[],format:""}};var r;if(n.headers["user-agent"]=e.userAgent?`${e.userAgent} ${N}`:N,e.baseUrl&&(n.baseUrl=e.baseUrl),e.previews&&(n.mediaType.previews=e.previews),e.timeZone&&(n.headers["time-zone"]=e.timeZone),this.request=P.defaults(n),this.graphql=(r=this.request,G(r,{method:"POST",url:"/graphql"})).defaults(n),this.log=function(e={}){return"function"!=typeof e.debug&&(e.debug=B),"function"!=typeof e.info&&(e.info=B),"function"!=typeof e.warn&&(e.warn=z),"function"!=typeof e.error&&(e.error=q),e}(e.log),this.hook=t,e.authStrategy){const{authStrategy:n,...r}=e,o=n(Object.assign({request:this.request,log:this.log,octokit:this,octokitOptions:r},e.auth));t.wrap("request",o.hook),this.auth=o}else if(e.auth){const n=M(e.auth);t.wrap("request",n.hook),this.auth=n}else this.auth=async()=>({type:"unauthenticated"});const s=this.constructor;for(let t=0;t<s.plugins.length;++t)Object.assign(this,s.plugins[t](this,e))}};function V(e){e.hook.wrap("request",(t,n)=>{e.log.debug("request",n);const r=Date.now(),o=e.request.endpoint.parse(n),s=o.url.replace(n.baseUrl,"");return t(n).then(t=>(e.log.info(`${o.method} ${s} - ${t.status} in ${Date.now()-r}ms`),t)).catch(t=>{throw e.log.info(`${o.method} ${s} - ${t.status} in ${Date.now()-r}ms`),t})})}function W(e,t,n){const r="function"==typeof t?t.endpoint(n):e.request.endpoint(t,n),o="function"==typeof t?t:e.request,s=r.method,i=r.headers;let a=r.url;return{[Symbol.asyncIterator]:()=>({async next(){if(!a)return{done:!0};try{const e=function(e){if(!e.data)return{...e,data:[]};if(!("total_count"in e.data)||"url"in e.data)return e;const t=e.data.incomplete_results,n=e.data.repository_selection,r=e.data.total_count;delete e.data.incomplete_results,delete e.data.repository_selection,delete e.data.total_count;const o=Object.keys(e.data)[0],s=e.data[o];return e.data=s,void 0!==t&&(e.data.incomplete_results=t),void 0!==n&&(e.data.repository_selection=n),e.data.total_count=r,e}(await o({method:s,url:a,headers:i}));return a=((e.headers.link||"").match(/<([^<>]+)>;\s*rel="next"/)||[])[1],{value:e}}catch(e){if(409!==e.status)throw e;return a="",{value:{status:200,headers:{},data:[]}}}}})}}function K(e,t,n,r){return"function"==typeof n&&(r=n,n=void 0),J(e,[],W(e,t,n)[Symbol.asyncIterator](),r)}function J(e,t,n,r){return n.next().then(o=>{if(o.done)return t;let s=!1;return t=t.concat(r?r(o.value,function(){s=!0}):o.value.data),s?t:J(e,t,n,r)})}function Y(e){return{paginate:Object.assign(K.bind(null,e),{iterator:W.bind(null,e)})}}V.VERSION="4.0.1",Object.assign(K,{iterator:W}),Y.VERSION="11.4.4-cjs.2";const Z=new Map;for(const[e,t]of Object.entries({actions:{addCustomLabelsToSelfHostedRunnerForOrg:["POST /orgs/{org}/actions/runners/{runner_id}/labels"],addCustomLabelsToSelfHostedRunnerForRepo:["POST /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],addRepoAccessToSelfHostedRunnerGroupInOrg:["PUT /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],approveWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve"],cancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],createEnvironmentVariable:["POST /repos/{owner}/{repo}/environments/{environment_name}/variables"],createOrUpdateEnvironmentSecret:["PUT /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"],createOrgVariable:["POST /orgs/{org}/actions/variables"],createRegistrationTokenForOrg:["POST /orgs/{org}/actions/runners/registration-token"],createRegistrationTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/registration-token"],createRemoveTokenForOrg:["POST /orgs/{org}/actions/runners/remove-token"],createRemoveTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/remove-token"],createRepoVariable:["POST /repos/{owner}/{repo}/actions/variables"],createWorkflowDispatch:["POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"],deleteActionsCacheById:["DELETE /repos/{owner}/{repo}/actions/caches/{cache_id}"],deleteActionsCacheByKey:["DELETE /repos/{owner}/{repo}/actions/caches{?key,ref}"],deleteArtifact:["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],deleteEnvironmentSecret:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],deleteEnvironmentVariable:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],deleteOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}"],deleteOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"],deleteRepoVariable:["DELETE /repos/{owner}/{repo}/actions/variables/{name}"],deleteSelfHostedRunnerFromOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}"],deleteSelfHostedRunnerFromRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],deleteWorkflowRun:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],deleteWorkflowRunLogs:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],disableSelectedRepositoryGithubActionsOrganization:["DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}"],disableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable"],downloadArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],downloadJobLogsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],downloadWorkflowRunAttemptLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs"],downloadWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],enableSelectedRepositoryGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories/{repository_id}"],enableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable"],forceCancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/force-cancel"],generateRunnerJitconfigForOrg:["POST /orgs/{org}/actions/runners/generate-jitconfig"],generateRunnerJitconfigForRepo:["POST /repos/{owner}/{repo}/actions/runners/generate-jitconfig"],getActionsCacheList:["GET /repos/{owner}/{repo}/actions/caches"],getActionsCacheUsage:["GET /repos/{owner}/{repo}/actions/cache/usage"],getActionsCacheUsageByRepoForOrg:["GET /orgs/{org}/actions/cache/usage-by-repository"],getActionsCacheUsageForOrg:["GET /orgs/{org}/actions/cache/usage"],getAllowedActionsOrganization:["GET /orgs/{org}/actions/permissions/selected-actions"],getAllowedActionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/selected-actions"],getArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],getCustomOidcSubClaimForRepo:["GET /repos/{owner}/{repo}/actions/oidc/customization/sub"],getEnvironmentPublicKey:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/public-key"],getEnvironmentSecret:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],getEnvironmentVariable:["GET /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],getGithubActionsDefaultWorkflowPermissionsOrganization:["GET /orgs/{org}/actions/permissions/workflow"],getGithubActionsDefaultWorkflowPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/workflow"],getGithubActionsPermissionsOrganization:["GET /orgs/{org}/actions/permissions"],getGithubActionsPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions"],getJobForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],getOrgPublicKey:["GET /orgs/{org}/actions/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}"],getOrgVariable:["GET /orgs/{org}/actions/variables/{name}"],getPendingDeploymentsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],getRepoPermissions:["GET /repos/{owner}/{repo}/actions/permissions",{},{renamed:["actions","getGithubActionsPermissionsRepository"]}],getRepoPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],getRepoVariable:["GET /repos/{owner}/{repo}/actions/variables/{name}"],getReviewsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals"],getSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}"],getSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],getWorkflow:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],getWorkflowAccessToRepository:["GET /repos/{owner}/{repo}/actions/permissions/access"],getWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],getWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}"],getWorkflowRunUsage:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],getWorkflowUsage:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],listArtifactsForRepo:["GET /repos/{owner}/{repo}/actions/artifacts"],listEnvironmentSecrets:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets"],listEnvironmentVariables:["GET /repos/{owner}/{repo}/environments/{environment_name}/variables"],listJobsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],listJobsForWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs"],listLabelsForSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}/labels"],listLabelsForSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],listOrgSecrets:["GET /orgs/{org}/actions/secrets"],listOrgVariables:["GET /orgs/{org}/actions/variables"],listRepoOrganizationSecrets:["GET /repos/{owner}/{repo}/actions/organization-secrets"],listRepoOrganizationVariables:["GET /repos/{owner}/{repo}/actions/organization-variables"],listRepoSecrets:["GET /repos/{owner}/{repo}/actions/secrets"],listRepoVariables:["GET /repos/{owner}/{repo}/actions/variables"],listRepoWorkflows:["GET /repos/{owner}/{repo}/actions/workflows"],listRunnerApplicationsForOrg:["GET /orgs/{org}/actions/runners/downloads"],listRunnerApplicationsForRepo:["GET /repos/{owner}/{repo}/actions/runners/downloads"],listSelectedReposForOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],listSelectedReposForOrgVariable:["GET /orgs/{org}/actions/variables/{name}/repositories"],listSelectedRepositoriesEnabledGithubActionsOrganization:["GET /orgs/{org}/actions/permissions/repositories"],listSelfHostedRunnersForOrg:["GET /orgs/{org}/actions/runners"],listSelfHostedRunnersForRepo:["GET /repos/{owner}/{repo}/actions/runners"],listWorkflowRunArtifacts:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],listWorkflowRuns:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],listWorkflowRunsForRepo:["GET /repos/{owner}/{repo}/actions/runs"],reRunJobForWorkflowRun:["POST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun"],reRunWorkflow:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],reRunWorkflowFailedJobs:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs"],removeAllCustomLabelsFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels"],removeAllCustomLabelsFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],removeCustomLabelFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}"],removeCustomLabelFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],reviewCustomGatesForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rule"],reviewPendingDeploymentsForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],setAllowedActionsOrganization:["PUT /orgs/{org}/actions/permissions/selected-actions"],setAllowedActionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/selected-actions"],setCustomLabelsForSelfHostedRunnerForOrg:["PUT /orgs/{org}/actions/runners/{runner_id}/labels"],setCustomLabelsForSelfHostedRunnerForRepo:["PUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],setCustomOidcSubClaimForRepo:["PUT /repos/{owner}/{repo}/actions/oidc/customization/sub"],setGithubActionsDefaultWorkflowPermissionsOrganization:["PUT /orgs/{org}/actions/permissions/workflow"],setGithubActionsDefaultWorkflowPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/workflow"],setGithubActionsPermissionsOrganization:["PUT /orgs/{org}/actions/permissions"],setGithubActionsPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"],setSelectedReposForOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories"],setSelectedRepositoriesEnabledGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories"],setWorkflowAccessToRepository:["PUT /repos/{owner}/{repo}/actions/permissions/access"],updateEnvironmentVariable:["PATCH /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],updateOrgVariable:["PATCH /orgs/{org}/actions/variables/{name}"],updateRepoVariable:["PATCH /repos/{owner}/{repo}/actions/variables/{name}"]},activity:{checkRepoIsStarredByAuthenticatedUser:["GET /user/starred/{owner}/{repo}"],deleteRepoSubscription:["DELETE /repos/{owner}/{repo}/subscription"],deleteThreadSubscription:["DELETE /notifications/threads/{thread_id}/subscription"],getFeeds:["GET /feeds"],getRepoSubscription:["GET /repos/{owner}/{repo}/subscription"],getThread:["GET /notifications/threads/{thread_id}"],getThreadSubscriptionForAuthenticatedUser:["GET /notifications/threads/{thread_id}/subscription"],listEventsForAuthenticatedUser:["GET /users/{username}/events"],listNotificationsForAuthenticatedUser:["GET /notifications"],listOrgEventsForAuthenticatedUser:["GET /users/{username}/events/orgs/{org}"],listPublicEvents:["GET /events"],listPublicEventsForRepoNetwork:["GET /networks/{owner}/{repo}/events"],listPublicEventsForUser:["GET /users/{username}/events/public"],listPublicOrgEvents:["GET /orgs/{org}/events"],listReceivedEventsForUser:["GET /users/{username}/received_events"],listReceivedPublicEventsForUser:["GET /users/{username}/received_events/public"],listRepoEvents:["GET /repos/{owner}/{repo}/events"],listRepoNotificationsForAuthenticatedUser:["GET /repos/{owner}/{repo}/notifications"],listReposStarredByAuthenticatedUser:["GET /user/starred"],listReposStarredByUser:["GET /users/{username}/starred"],listReposWatchedByUser:["GET /users/{username}/subscriptions"],listStargazersForRepo:["GET /repos/{owner}/{repo}/stargazers"],listWatchedReposForAuthenticatedUser:["GET /user/subscriptions"],listWatchersForRepo:["GET /repos/{owner}/{repo}/subscribers"],markNotificationsAsRead:["PUT /notifications"],markRepoNotificationsAsRead:["PUT /repos/{owner}/{repo}/notifications"],markThreadAsDone:["DELETE /notifications/threads/{thread_id}"],markThreadAsRead:["PATCH /notifications/threads/{thread_id}"],setRepoSubscription:["PUT /repos/{owner}/{repo}/subscription"],setThreadSubscription:["PUT /notifications/threads/{thread_id}/subscription"],starRepoForAuthenticatedUser:["PUT /user/starred/{owner}/{repo}"],unstarRepoForAuthenticatedUser:["DELETE /user/starred/{owner}/{repo}"]},apps:{addRepoToInstallation:["PUT /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","addRepoToInstallationForAuthenticatedUser"]}],addRepoToInstallationForAuthenticatedUser:["PUT /user/installations/{installation_id}/repositories/{repository_id}"],checkToken:["POST /applications/{client_id}/token"],createFromManifest:["POST /app-manifests/{code}/conversions"],createInstallationAccessToken:["POST /app/installations/{installation_id}/access_tokens"],deleteAuthorization:["DELETE /applications/{client_id}/grant"],deleteInstallation:["DELETE /app/installations/{installation_id}"],deleteToken:["DELETE /applications/{client_id}/token"],getAuthenticated:["GET /app"],getBySlug:["GET /apps/{app_slug}"],getInstallation:["GET /app/installations/{installation_id}"],getOrgInstallation:["GET /orgs/{org}/installation"],getRepoInstallation:["GET /repos/{owner}/{repo}/installation"],getSubscriptionPlanForAccount:["GET /marketplace_listing/accounts/{account_id}"],getSubscriptionPlanForAccountStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}"],getUserInstallation:["GET /users/{username}/installation"],getWebhookConfigForApp:["GET /app/hook/config"],getWebhookDelivery:["GET /app/hook/deliveries/{delivery_id}"],listAccountsForPlan:["GET /marketplace_listing/plans/{plan_id}/accounts"],listAccountsForPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],listInstallationReposForAuthenticatedUser:["GET /user/installations/{installation_id}/repositories"],listInstallationRequestsForAuthenticatedApp:["GET /app/installation-requests"],listInstallations:["GET /app/installations"],listInstallationsForAuthenticatedUser:["GET /user/installations"],listPlans:["GET /marketplace_listing/plans"],listPlansStubbed:["GET /marketplace_listing/stubbed/plans"],listReposAccessibleToInstallation:["GET /installation/repositories"],listSubscriptionsForAuthenticatedUser:["GET /user/marketplace_purchases"],listSubscriptionsForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed"],listWebhookDeliveries:["GET /app/hook/deliveries"],redeliverWebhookDelivery:["POST /app/hook/deliveries/{delivery_id}/attempts"],removeRepoFromInstallation:["DELETE /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","removeRepoFromInstallationForAuthenticatedUser"]}],removeRepoFromInstallationForAuthenticatedUser:["DELETE /user/installations/{installation_id}/repositories/{repository_id}"],resetToken:["PATCH /applications/{client_id}/token"],revokeInstallationAccessToken:["DELETE /installation/token"],scopeToken:["POST /applications/{client_id}/token/scoped"],suspendInstallation:["PUT /app/installations/{installation_id}/suspended"],unsuspendInstallation:["DELETE /app/installations/{installation_id}/suspended"],updateWebhookConfigForApp:["PATCH /app/hook/config"]},billing:{getGithubActionsBillingOrg:["GET /orgs/{org}/settings/billing/actions"],getGithubActionsBillingUser:["GET /users/{username}/settings/billing/actions"],getGithubBillingUsageReportOrg:["GET /organizations/{org}/settings/billing/usage"],getGithubPackagesBillingOrg:["GET /orgs/{org}/settings/billing/packages"],getGithubPackagesBillingUser:["GET /users/{username}/settings/billing/packages"],getSharedStorageBillingOrg:["GET /orgs/{org}/settings/billing/shared-storage"],getSharedStorageBillingUser:["GET /users/{username}/settings/billing/shared-storage"]},checks:{create:["POST /repos/{owner}/{repo}/check-runs"],createSuite:["POST /repos/{owner}/{repo}/check-suites"],get:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}"],getSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}"],listAnnotations:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations"],listForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-runs"],listForSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs"],listSuitesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-suites"],rerequestRun:["POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest"],rerequestSuite:["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest"],setSuitesPreferences:["PATCH /repos/{owner}/{repo}/check-suites/preferences"],update:["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}"]},codeScanning:{commitAutofix:["POST /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix/commits"],createAutofix:["POST /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix"],createVariantAnalysis:["POST /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses"],deleteAnalysis:["DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}"],deleteCodeqlDatabase:["DELETE /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}"],getAlert:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",{},{renamedParameters:{alert_id:"alert_number"}}],getAnalysis:["GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}"],getAutofix:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix"],getCodeqlDatabase:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}"],getDefaultSetup:["GET /repos/{owner}/{repo}/code-scanning/default-setup"],getSarif:["GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}"],getVariantAnalysis:["GET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}"],getVariantAnalysisRepoTask:["GET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/repos/{repo_owner}/{repo_name}"],listAlertInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances"],listAlertsForOrg:["GET /orgs/{org}/code-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/code-scanning/alerts"],listAlertsInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",{},{renamed:["codeScanning","listAlertInstances"]}],listCodeqlDatabases:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases"],listRecentAnalyses:["GET /repos/{owner}/{repo}/code-scanning/analyses"],updateAlert:["PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"],updateDefaultSetup:["PATCH /repos/{owner}/{repo}/code-scanning/default-setup"],uploadSarif:["POST /repos/{owner}/{repo}/code-scanning/sarifs"]},codeSecurity:{attachConfiguration:["POST /orgs/{org}/code-security/configurations/{configuration_id}/attach"],attachEnterpriseConfiguration:["POST /enterprises/{enterprise}/code-security/configurations/{configuration_id}/attach"],createConfiguration:["POST /orgs/{org}/code-security/configurations"],createConfigurationForEnterprise:["POST /enterprises/{enterprise}/code-security/configurations"],deleteConfiguration:["DELETE /orgs/{org}/code-security/configurations/{configuration_id}"],deleteConfigurationForEnterprise:["DELETE /enterprises/{enterprise}/code-security/configurations/{configuration_id}"],detachConfiguration:["DELETE /orgs/{org}/code-security/configurations/detach"],getConfiguration:["GET /orgs/{org}/code-security/configurations/{configuration_id}"],getConfigurationForRepository:["GET /repos/{owner}/{repo}/code-security-configuration"],getConfigurationsForEnterprise:["GET /enterprises/{enterprise}/code-security/configurations"],getConfigurationsForOrg:["GET /orgs/{org}/code-security/configurations"],getDefaultConfigurations:["GET /orgs/{org}/code-security/configurations/defaults"],getDefaultConfigurationsForEnterprise:["GET /enterprises/{enterprise}/code-security/configurations/defaults"],getRepositoriesForConfiguration:["GET /orgs/{org}/code-security/configurations/{configuration_id}/repositories"],getRepositoriesForEnterpriseConfiguration:["GET /enterprises/{enterprise}/code-security/configurations/{configuration_id}/repositories"],getSingleConfigurationForEnterprise:["GET /enterprises/{enterprise}/code-security/configurations/{configuration_id}"],setConfigurationAsDefault:["PUT /orgs/{org}/code-security/configurations/{configuration_id}/defaults"],setConfigurationAsDefaultForEnterprise:["PUT /enterprises/{enterprise}/code-security/configurations/{configuration_id}/defaults"],updateConfiguration:["PATCH /orgs/{org}/code-security/configurations/{configuration_id}"],updateEnterpriseConfiguration:["PATCH /enterprises/{enterprise}/code-security/configurations/{configuration_id}"]},codesOfConduct:{getAllCodesOfConduct:["GET /codes_of_conduct"],getConductCode:["GET /codes_of_conduct/{key}"]},codespaces:{addRepositoryForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],checkPermissionsForDevcontainer:["GET /repos/{owner}/{repo}/codespaces/permissions_check"],codespaceMachinesForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/machines"],createForAuthenticatedUser:["POST /user/codespaces"],createOrUpdateOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],createOrUpdateSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}"],createWithPrForAuthenticatedUser:["POST /repos/{owner}/{repo}/pulls/{pull_number}/codespaces"],createWithRepoForAuthenticatedUser:["POST /repos/{owner}/{repo}/codespaces"],deleteForAuthenticatedUser:["DELETE /user/codespaces/{codespace_name}"],deleteFromOrganization:["DELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}"],deleteOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],deleteSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}"],exportForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/exports"],getCodespacesForUserInOrg:["GET /orgs/{org}/members/{username}/codespaces"],getExportDetailsForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/exports/{export_id}"],getForAuthenticatedUser:["GET /user/codespaces/{codespace_name}"],getOrgPublicKey:["GET /orgs/{org}/codespaces/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}"],getPublicKeyForAuthenticatedUser:["GET /user/codespaces/secrets/public-key"],getRepoPublicKey:["GET /repos/{owner}/{repo}/codespaces/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],getSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}"],listDevcontainersInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/devcontainers"],listForAuthenticatedUser:["GET /user/codespaces"],listInOrganization:["GET /orgs/{org}/codespaces",{},{renamedParameters:{org_id:"org"}}],listInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces"],listOrgSecrets:["GET /orgs/{org}/codespaces/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/codespaces/secrets"],listRepositoriesForSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}/repositories"],listSecretsForAuthenticatedUser:["GET /user/codespaces/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],preFlightWithRepoForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/new"],publishForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/publish"],removeRepositoryForSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],repoMachinesForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/machines"],setRepositoriesForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],startForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/start"],stopForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/stop"],stopInOrganization:["POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stop"],updateForAuthenticatedUser:["PATCH /user/codespaces/{codespace_name}"]},copilot:{addCopilotSeatsForTeams:["POST /orgs/{org}/copilot/billing/selected_teams"],addCopilotSeatsForUsers:["POST /orgs/{org}/copilot/billing/selected_users"],cancelCopilotSeatAssignmentForTeams:["DELETE /orgs/{org}/copilot/billing/selected_teams"],cancelCopilotSeatAssignmentForUsers:["DELETE /orgs/{org}/copilot/billing/selected_users"],copilotMetricsForOrganization:["GET /orgs/{org}/copilot/metrics"],copilotMetricsForTeam:["GET /orgs/{org}/team/{team_slug}/copilot/metrics"],getCopilotOrganizationDetails:["GET /orgs/{org}/copilot/billing"],getCopilotSeatDetailsForUser:["GET /orgs/{org}/members/{username}/copilot"],listCopilotSeats:["GET /orgs/{org}/copilot/billing/seats"],usageMetricsForOrg:["GET /orgs/{org}/copilot/usage"],usageMetricsForTeam:["GET /orgs/{org}/team/{team_slug}/copilot/usage"]},dependabot:{addSelectedRepoToOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],deleteOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],getAlert:["GET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"],getOrgPublicKey:["GET /orgs/{org}/dependabot/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}"],getRepoPublicKey:["GET /repos/{owner}/{repo}/dependabot/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/dependabot/alerts"],listAlertsForOrg:["GET /orgs/{org}/dependabot/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/dependabot/alerts"],listOrgSecrets:["GET /orgs/{org}/dependabot/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/dependabot/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],updateAlert:["PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"]},dependencyGraph:{createRepositorySnapshot:["POST /repos/{owner}/{repo}/dependency-graph/snapshots"],diffRange:["GET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}"],exportSbom:["GET /repos/{owner}/{repo}/dependency-graph/sbom"]},emojis:{get:["GET /emojis"]},gists:{checkIsStarred:["GET /gists/{gist_id}/star"],create:["POST /gists"],createComment:["POST /gists/{gist_id}/comments"],delete:["DELETE /gists/{gist_id}"],deleteComment:["DELETE /gists/{gist_id}/comments/{comment_id}"],fork:["POST /gists/{gist_id}/forks"],get:["GET /gists/{gist_id}"],getComment:["GET /gists/{gist_id}/comments/{comment_id}"],getRevision:["GET /gists/{gist_id}/{sha}"],list:["GET /gists"],listComments:["GET /gists/{gist_id}/comments"],listCommits:["GET /gists/{gist_id}/commits"],listForUser:["GET /users/{username}/gists"],listForks:["GET /gists/{gist_id}/forks"],listPublic:["GET /gists/public"],listStarred:["GET /gists/starred"],star:["PUT /gists/{gist_id}/star"],unstar:["DELETE /gists/{gist_id}/star"],update:["PATCH /gists/{gist_id}"],updateComment:["PATCH /gists/{gist_id}/comments/{comment_id}"]},git:{createBlob:["POST /repos/{owner}/{repo}/git/blobs"],createCommit:["POST /repos/{owner}/{repo}/git/commits"],createRef:["POST /repos/{owner}/{repo}/git/refs"],createTag:["POST /repos/{owner}/{repo}/git/tags"],createTree:["POST /repos/{owner}/{repo}/git/trees"],deleteRef:["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],getBlob:["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],getCommit:["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],getRef:["GET /repos/{owner}/{repo}/git/ref/{ref}"],getTag:["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],getTree:["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],listMatchingRefs:["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],updateRef:["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]},gitignore:{getAllTemplates:["GET /gitignore/templates"],getTemplate:["GET /gitignore/templates/{name}"]},interactions:{getRestrictionsForAuthenticatedUser:["GET /user/interaction-limits"],getRestrictionsForOrg:["GET /orgs/{org}/interaction-limits"],getRestrictionsForRepo:["GET /repos/{owner}/{repo}/interaction-limits"],getRestrictionsForYourPublicRepos:["GET /user/interaction-limits",{},{renamed:["interactions","getRestrictionsForAuthenticatedUser"]}],removeRestrictionsForAuthenticatedUser:["DELETE /user/interaction-limits"],removeRestrictionsForOrg:["DELETE /orgs/{org}/interaction-limits"],removeRestrictionsForRepo:["DELETE /repos/{owner}/{repo}/interaction-limits"],removeRestrictionsForYourPublicRepos:["DELETE /user/interaction-limits",{},{renamed:["interactions","removeRestrictionsForAuthenticatedUser"]}],setRestrictionsForAuthenticatedUser:["PUT /user/interaction-limits"],setRestrictionsForOrg:["PUT /orgs/{org}/interaction-limits"],setRestrictionsForRepo:["PUT /repos/{owner}/{repo}/interaction-limits"],setRestrictionsForYourPublicRepos:["PUT /user/interaction-limits",{},{renamed:["interactions","setRestrictionsForAuthenticatedUser"]}]},issues:{addAssignees:["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],addLabels:["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],addSubIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/sub_issues"],checkUserCanBeAssigned:["GET /repos/{owner}/{repo}/assignees/{assignee}"],checkUserCanBeAssignedToIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}"],create:["POST /repos/{owner}/{repo}/issues"],createComment:["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],createLabel:["POST /repos/{owner}/{repo}/labels"],createMilestone:["POST /repos/{owner}/{repo}/milestones"],deleteComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],deleteLabel:["DELETE /repos/{owner}/{repo}/labels/{name}"],deleteMilestone:["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],get:["GET /repos/{owner}/{repo}/issues/{issue_number}"],getComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],getEvent:["GET /repos/{owner}/{repo}/issues/events/{event_id}"],getLabel:["GET /repos/{owner}/{repo}/labels/{name}"],getMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],list:["GET /issues"],listAssignees:["GET /repos/{owner}/{repo}/assignees"],listComments:["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],listCommentsForRepo:["GET /repos/{owner}/{repo}/issues/comments"],listEvents:["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],listEventsForRepo:["GET /repos/{owner}/{repo}/issues/events"],listEventsForTimeline:["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline"],listForAuthenticatedUser:["GET /user/issues"],listForOrg:["GET /orgs/{org}/issues"],listForRepo:["GET /repos/{owner}/{repo}/issues"],listLabelsForMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],listLabelsForRepo:["GET /repos/{owner}/{repo}/labels"],listLabelsOnIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],listMilestones:["GET /repos/{owner}/{repo}/milestones"],listSubIssues:["GET /repos/{owner}/{repo}/issues/{issue_number}/sub_issues"],lock:["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],removeAllLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],removeAssignees:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],removeLabel:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],removeSubIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/sub_issue"],reprioritizeSubIssue:["PATCH /repos/{owner}/{repo}/issues/{issue_number}/sub_issues/priority"],setLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],unlock:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],update:["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],updateComment:["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],updateLabel:["PATCH /repos/{owner}/{repo}/labels/{name}"],updateMilestone:["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"]},licenses:{get:["GET /licenses/{license}"],getAllCommonlyUsed:["GET /licenses"],getForRepo:["GET /repos/{owner}/{repo}/license"]},markdown:{render:["POST /markdown"],renderRaw:["POST /markdown/raw",{headers:{"content-type":"text/plain; charset=utf-8"}}]},meta:{get:["GET /meta"],getAllVersions:["GET /versions"],getOctocat:["GET /octocat"],getZen:["GET /zen"],root:["GET /"]},migrations:{deleteArchiveForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/archive"],deleteArchiveForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/archive"],downloadArchiveForOrg:["GET /orgs/{org}/migrations/{migration_id}/archive"],getArchiveForAuthenticatedUser:["GET /user/migrations/{migration_id}/archive"],getStatusForAuthenticatedUser:["GET /user/migrations/{migration_id}"],getStatusForOrg:["GET /orgs/{org}/migrations/{migration_id}"],listForAuthenticatedUser:["GET /user/migrations"],listForOrg:["GET /orgs/{org}/migrations"],listReposForAuthenticatedUser:["GET /user/migrations/{migration_id}/repositories"],listReposForOrg:["GET /orgs/{org}/migrations/{migration_id}/repositories"],listReposForUser:["GET /user/migrations/{migration_id}/repositories",{},{renamed:["migrations","listReposForAuthenticatedUser"]}],startForAuthenticatedUser:["POST /user/migrations"],startForOrg:["POST /orgs/{org}/migrations"],unlockRepoForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock"],unlockRepoForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock"]},oidc:{getOidcCustomSubTemplateForOrg:["GET /orgs/{org}/actions/oidc/customization/sub"],updateOidcCustomSubTemplateForOrg:["PUT /orgs/{org}/actions/oidc/customization/sub"]},orgs:{addSecurityManagerTeam:["PUT /orgs/{org}/security-managers/teams/{team_slug}",{},{deprecated:"octokit.rest.orgs.addSecurityManagerTeam() is deprecated, see https://docs.github.com/rest/orgs/security-managers#add-a-security-manager-team"}],assignTeamToOrgRole:["PUT /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],assignUserToOrgRole:["PUT /orgs/{org}/organization-roles/users/{username}/{role_id}"],blockUser:["PUT /orgs/{org}/blocks/{username}"],cancelInvitation:["DELETE /orgs/{org}/invitations/{invitation_id}"],checkBlockedUser:["GET /orgs/{org}/blocks/{username}"],checkMembershipForUser:["GET /orgs/{org}/members/{username}"],checkPublicMembershipForUser:["GET /orgs/{org}/public_members/{username}"],convertMemberToOutsideCollaborator:["PUT /orgs/{org}/outside_collaborators/{username}"],createInvitation:["POST /orgs/{org}/invitations"],createOrUpdateCustomProperties:["PATCH /orgs/{org}/properties/schema"],createOrUpdateCustomPropertiesValuesForRepos:["PATCH /orgs/{org}/properties/values"],createOrUpdateCustomProperty:["PUT /orgs/{org}/properties/schema/{custom_property_name}"],createWebhook:["POST /orgs/{org}/hooks"],delete:["DELETE /orgs/{org}"],deleteWebhook:["DELETE /orgs/{org}/hooks/{hook_id}"],enableOrDisableSecurityProductOnAllOrgRepos:["POST /orgs/{org}/{security_product}/{enablement}",{},{deprecated:"octokit.rest.orgs.enableOrDisableSecurityProductOnAllOrgRepos() is deprecated, see https://docs.github.com/rest/orgs/orgs#enable-or-disable-a-security-feature-for-an-organization"}],get:["GET /orgs/{org}"],getAllCustomProperties:["GET /orgs/{org}/properties/schema"],getCustomProperty:["GET /orgs/{org}/properties/schema/{custom_property_name}"],getMembershipForAuthenticatedUser:["GET /user/memberships/orgs/{org}"],getMembershipForUser:["GET /orgs/{org}/memberships/{username}"],getOrgRole:["GET /orgs/{org}/organization-roles/{role_id}"],getWebhook:["GET /orgs/{org}/hooks/{hook_id}"],getWebhookConfigForOrg:["GET /orgs/{org}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}"],list:["GET /organizations"],listAppInstallations:["GET /orgs/{org}/installations"],listAttestations:["GET /orgs/{org}/attestations/{subject_digest}"],listBlockedUsers:["GET /orgs/{org}/blocks"],listCustomPropertiesValuesForRepos:["GET /orgs/{org}/properties/values"],listFailedInvitations:["GET /orgs/{org}/failed_invitations"],listForAuthenticatedUser:["GET /user/orgs"],listForUser:["GET /users/{username}/orgs"],listInvitationTeams:["GET /orgs/{org}/invitations/{invitation_id}/teams"],listMembers:["GET /orgs/{org}/members"],listMembershipsForAuthenticatedUser:["GET /user/memberships/orgs"],listOrgRoleTeams:["GET /orgs/{org}/organization-roles/{role_id}/teams"],listOrgRoleUsers:["GET /orgs/{org}/organization-roles/{role_id}/users"],listOrgRoles:["GET /orgs/{org}/organization-roles"],listOrganizationFineGrainedPermissions:["GET /orgs/{org}/organization-fine-grained-permissions"],listOutsideCollaborators:["GET /orgs/{org}/outside_collaborators"],listPatGrantRepositories:["GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories"],listPatGrantRequestRepositories:["GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories"],listPatGrantRequests:["GET /orgs/{org}/personal-access-token-requests"],listPatGrants:["GET /orgs/{org}/personal-access-tokens"],listPendingInvitations:["GET /orgs/{org}/invitations"],listPublicMembers:["GET /orgs/{org}/public_members"],listSecurityManagerTeams:["GET /orgs/{org}/security-managers",{},{deprecated:"octokit.rest.orgs.listSecurityManagerTeams() is deprecated, see https://docs.github.com/rest/orgs/security-managers#list-security-manager-teams"}],listWebhookDeliveries:["GET /orgs/{org}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /orgs/{org}/hooks"],pingWebhook:["POST /orgs/{org}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeCustomProperty:["DELETE /orgs/{org}/properties/schema/{custom_property_name}"],removeMember:["DELETE /orgs/{org}/members/{username}"],removeMembershipForUser:["DELETE /orgs/{org}/memberships/{username}"],removeOutsideCollaborator:["DELETE /orgs/{org}/outside_collaborators/{username}"],removePublicMembershipForAuthenticatedUser:["DELETE /orgs/{org}/public_members/{username}"],removeSecurityManagerTeam:["DELETE /orgs/{org}/security-managers/teams/{team_slug}",{},{deprecated:"octokit.rest.orgs.removeSecurityManagerTeam() is deprecated, see https://docs.github.com/rest/orgs/security-managers#remove-a-security-manager-team"}],reviewPatGrantRequest:["POST /orgs/{org}/personal-access-token-requests/{pat_request_id}"],reviewPatGrantRequestsInBulk:["POST /orgs/{org}/personal-access-token-requests"],revokeAllOrgRolesTeam:["DELETE /orgs/{org}/organization-roles/teams/{team_slug}"],revokeAllOrgRolesUser:["DELETE /orgs/{org}/organization-roles/users/{username}"],revokeOrgRoleTeam:["DELETE /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],revokeOrgRoleUser:["DELETE /orgs/{org}/organization-roles/users/{username}/{role_id}"],setMembershipForUser:["PUT /orgs/{org}/memberships/{username}"],setPublicMembershipForAuthenticatedUser:["PUT /orgs/{org}/public_members/{username}"],unblockUser:["DELETE /orgs/{org}/blocks/{username}"],update:["PATCH /orgs/{org}"],updateMembershipForAuthenticatedUser:["PATCH /user/memberships/orgs/{org}"],updatePatAccess:["POST /orgs/{org}/personal-access-tokens/{pat_id}"],updatePatAccesses:["POST /orgs/{org}/personal-access-tokens"],updateWebhook:["PATCH /orgs/{org}/hooks/{hook_id}"],updateWebhookConfigForOrg:["PATCH /orgs/{org}/hooks/{hook_id}/config"]},packages:{deletePackageForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}"],deletePackageForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}"],deletePackageForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}"],deletePackageVersionForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getAllPackageVersionsForAPackageOwnedByAnOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByOrg"]}],getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByAuthenticatedUser"]}],getAllPackageVersionsForPackageOwnedByAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions"],getPackageForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}"],getPackageForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}"],getPackageForUser:["GET /users/{username}/packages/{package_type}/{package_name}"],getPackageVersionForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],listDockerMigrationConflictingPackagesForAuthenticatedUser:["GET /user/docker/conflicts"],listDockerMigrationConflictingPackagesForOrganization:["GET /orgs/{org}/docker/conflicts"],listDockerMigrationConflictingPackagesForUser:["GET /users/{username}/docker/conflicts"],listPackagesForAuthenticatedUser:["GET /user/packages"],listPackagesForOrganization:["GET /orgs/{org}/packages"],listPackagesForUser:["GET /users/{username}/packages"],restorePackageForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForUser:["POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageVersionForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForUser:["POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"]},privateRegistries:{createOrgPrivateRegistry:["POST /orgs/{org}/private-registries"],deleteOrgPrivateRegistry:["DELETE /orgs/{org}/private-registries/{secret_name}"],getOrgPrivateRegistry:["GET /orgs/{org}/private-registries/{secret_name}"],getOrgPublicKey:["GET /orgs/{org}/private-registries/public-key"],listOrgPrivateRegistries:["GET /orgs/{org}/private-registries"],updateOrgPrivateRegistry:["PATCH /orgs/{org}/private-registries/{secret_name}"]},projects:{addCollaborator:["PUT /projects/{project_id}/collaborators/{username}"],createCard:["POST /projects/columns/{column_id}/cards"],createColumn:["POST /projects/{project_id}/columns"],createForAuthenticatedUser:["POST /user/projects"],createForOrg:["POST /orgs/{org}/projects"],createForRepo:["POST /repos/{owner}/{repo}/projects"],delete:["DELETE /projects/{project_id}"],deleteCard:["DELETE /projects/columns/cards/{card_id}"],deleteColumn:["DELETE /projects/columns/{column_id}"],get:["GET /projects/{project_id}"],getCard:["GET /projects/columns/cards/{card_id}"],getColumn:["GET /projects/columns/{column_id}"],getPermissionForUser:["GET /projects/{project_id}/collaborators/{username}/permission"],listCards:["GET /projects/columns/{column_id}/cards"],listCollaborators:["GET /projects/{project_id}/collaborators"],listColumns:["GET /projects/{project_id}/columns"],listForOrg:["GET /orgs/{org}/projects"],listForRepo:["GET /repos/{owner}/{repo}/projects"],listForUser:["GET /users/{username}/projects"],moveCard:["POST /projects/columns/cards/{card_id}/moves"],moveColumn:["POST /projects/columns/{column_id}/moves"],removeCollaborator:["DELETE /projects/{project_id}/collaborators/{username}"],update:["PATCH /projects/{project_id}"],updateCard:["PATCH /projects/columns/cards/{card_id}"],updateColumn:["PATCH /projects/columns/{column_id}"]},pulls:{checkIfMerged:["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],create:["POST /repos/{owner}/{repo}/pulls"],createReplyForReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],createReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],createReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],deletePendingReview:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],deleteReviewComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],dismissReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],get:["GET /repos/{owner}/{repo}/pulls/{pull_number}"],getReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],getReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],list:["GET /repos/{owner}/{repo}/pulls"],listCommentsForReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],listCommits:["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],listFiles:["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],listRequestedReviewers:["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],listReviewComments:["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],listReviewCommentsForRepo:["GET /repos/{owner}/{repo}/pulls/comments"],listReviews:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],merge:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],removeRequestedReviewers:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],requestReviewers:["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],submitReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],update:["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],updateBranch:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch"],updateReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],updateReviewComment:["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"]},rateLimit:{get:["GET /rate_limit"]},reactions:{createForCommitComment:["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions"],createForIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions"],createForIssueComment:["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],createForPullRequestReviewComment:["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],createForRelease:["POST /repos/{owner}/{repo}/releases/{release_id}/reactions"],createForTeamDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],createForTeamDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"],deleteForCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}"],deleteForIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}"],deleteForIssueComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}"],deleteForPullRequestComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}"],deleteForRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}"],deleteForTeamDiscussion:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}"],deleteForTeamDiscussionComment:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}"],listForCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions"],listForIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions"],listForIssueComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],listForPullRequestReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],listForRelease:["GET /repos/{owner}/{repo}/releases/{release_id}/reactions"],listForTeamDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],listForTeamDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"]},repos:{acceptInvitation:["PATCH /user/repository_invitations/{invitation_id}",{},{renamed:["repos","acceptInvitationForAuthenticatedUser"]}],acceptInvitationForAuthenticatedUser:["PATCH /user/repository_invitations/{invitation_id}"],addAppAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],addCollaborator:["PUT /repos/{owner}/{repo}/collaborators/{username}"],addStatusCheckContexts:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],addTeamAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],addUserAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],cancelPagesDeployment:["POST /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}/cancel"],checkAutomatedSecurityFixes:["GET /repos/{owner}/{repo}/automated-security-fixes"],checkCollaborator:["GET /repos/{owner}/{repo}/collaborators/{username}"],checkPrivateVulnerabilityReporting:["GET /repos/{owner}/{repo}/private-vulnerability-reporting"],checkVulnerabilityAlerts:["GET /repos/{owner}/{repo}/vulnerability-alerts"],codeownersErrors:["GET /repos/{owner}/{repo}/codeowners/errors"],compareCommits:["GET /repos/{owner}/{repo}/compare/{base}...{head}"],compareCommitsWithBasehead:["GET /repos/{owner}/{repo}/compare/{basehead}"],createAttestation:["POST /repos/{owner}/{repo}/attestations"],createAutolink:["POST /repos/{owner}/{repo}/autolinks"],createCommitComment:["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],createCommitSignatureProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],createCommitStatus:["POST /repos/{owner}/{repo}/statuses/{sha}"],createDeployKey:["POST /repos/{owner}/{repo}/keys"],createDeployment:["POST /repos/{owner}/{repo}/deployments"],createDeploymentBranchPolicy:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],createDeploymentProtectionRule:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],createDeploymentStatus:["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],createDispatchEvent:["POST /repos/{owner}/{repo}/dispatches"],createForAuthenticatedUser:["POST /user/repos"],createFork:["POST /repos/{owner}/{repo}/forks"],createInOrg:["POST /orgs/{org}/repos"],createOrUpdateCustomPropertiesValues:["PATCH /repos/{owner}/{repo}/properties/values"],createOrUpdateEnvironment:["PUT /repos/{owner}/{repo}/environments/{environment_name}"],createOrUpdateFileContents:["PUT /repos/{owner}/{repo}/contents/{path}"],createOrgRuleset:["POST /orgs/{org}/rulesets"],createPagesDeployment:["POST /repos/{owner}/{repo}/pages/deployments"],createPagesSite:["POST /repos/{owner}/{repo}/pages"],createRelease:["POST /repos/{owner}/{repo}/releases"],createRepoRuleset:["POST /repos/{owner}/{repo}/rulesets"],createUsingTemplate:["POST /repos/{template_owner}/{template_repo}/generate"],createWebhook:["POST /repos/{owner}/{repo}/hooks"],declineInvitation:["DELETE /user/repository_invitations/{invitation_id}",{},{renamed:["repos","declineInvitationForAuthenticatedUser"]}],declineInvitationForAuthenticatedUser:["DELETE /user/repository_invitations/{invitation_id}"],delete:["DELETE /repos/{owner}/{repo}"],deleteAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],deleteAdminBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],deleteAnEnvironment:["DELETE /repos/{owner}/{repo}/environments/{environment_name}"],deleteAutolink:["DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}"],deleteBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],deleteCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],deleteCommitSignatureProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],deleteDeployKey:["DELETE /repos/{owner}/{repo}/keys/{key_id}"],deleteDeployment:["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],deleteDeploymentBranchPolicy:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],deleteFile:["DELETE /repos/{owner}/{repo}/contents/{path}"],deleteInvitation:["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],deleteOrgRuleset:["DELETE /orgs/{org}/rulesets/{ruleset_id}"],deletePagesSite:["DELETE /repos/{owner}/{repo}/pages"],deletePullRequestReviewProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],deleteRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}"],deleteReleaseAsset:["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],deleteRepoRuleset:["DELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}"],deleteWebhook:["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],disableAutomatedSecurityFixes:["DELETE /repos/{owner}/{repo}/automated-security-fixes"],disableDeploymentProtectionRule:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],disablePrivateVulnerabilityReporting:["DELETE /repos/{owner}/{repo}/private-vulnerability-reporting"],disableVulnerabilityAlerts:["DELETE /repos/{owner}/{repo}/vulnerability-alerts"],downloadArchive:["GET /repos/{owner}/{repo}/zipball/{ref}",{},{renamed:["repos","downloadZipballArchive"]}],downloadTarballArchive:["GET /repos/{owner}/{repo}/tarball/{ref}"],downloadZipballArchive:["GET /repos/{owner}/{repo}/zipball/{ref}"],enableAutomatedSecurityFixes:["PUT /repos/{owner}/{repo}/automated-security-fixes"],enablePrivateVulnerabilityReporting:["PUT /repos/{owner}/{repo}/private-vulnerability-reporting"],enableVulnerabilityAlerts:["PUT /repos/{owner}/{repo}/vulnerability-alerts"],generateReleaseNotes:["POST /repos/{owner}/{repo}/releases/generate-notes"],get:["GET /repos/{owner}/{repo}"],getAccessRestrictions:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],getAdminBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],getAllDeploymentProtectionRules:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],getAllEnvironments:["GET /repos/{owner}/{repo}/environments"],getAllStatusCheckContexts:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],getAllTopics:["GET /repos/{owner}/{repo}/topics"],getAppsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],getAutolink:["GET /repos/{owner}/{repo}/autolinks/{autolink_id}"],getBranch:["GET /repos/{owner}/{repo}/branches/{branch}"],getBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection"],getBranchRules:["GET /repos/{owner}/{repo}/rules/branches/{branch}"],getClones:["GET /repos/{owner}/{repo}/traffic/clones"],getCodeFrequencyStats:["GET /repos/{owner}/{repo}/stats/code_frequency"],getCollaboratorPermissionLevel:["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],getCombinedStatusForRef:["GET /repos/{owner}/{repo}/commits/{ref}/status"],getCommit:["GET /repos/{owner}/{repo}/commits/{ref}"],getCommitActivityStats:["GET /repos/{owner}/{repo}/stats/commit_activity"],getCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}"],getCommitSignatureProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],getCommunityProfileMetrics:["GET /repos/{owner}/{repo}/community/profile"],getContent:["GET /repos/{owner}/{repo}/contents/{path}"],getContributorsStats:["GET /repos/{owner}/{repo}/stats/contributors"],getCustomDeploymentProtectionRule:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],getCustomPropertiesValues:["GET /repos/{owner}/{repo}/properties/values"],getDeployKey:["GET /repos/{owner}/{repo}/keys/{key_id}"],getDeployment:["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],getDeploymentBranchPolicy:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],getDeploymentStatus:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],getEnvironment:["GET /repos/{owner}/{repo}/environments/{environment_name}"],getLatestPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/latest"],getLatestRelease:["GET /repos/{owner}/{repo}/releases/latest"],getOrgRuleSuite:["GET /orgs/{org}/rulesets/rule-suites/{rule_suite_id}"],getOrgRuleSuites:["GET /orgs/{org}/rulesets/rule-suites"],getOrgRuleset:["GET /orgs/{org}/rulesets/{ruleset_id}"],getOrgRulesets:["GET /orgs/{org}/rulesets"],getPages:["GET /repos/{owner}/{repo}/pages"],getPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],getPagesDeployment:["GET /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}"],getPagesHealthCheck:["GET /repos/{owner}/{repo}/pages/health"],getParticipationStats:["GET /repos/{owner}/{repo}/stats/participation"],getPullRequestReviewProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],getPunchCardStats:["GET /repos/{owner}/{repo}/stats/punch_card"],getReadme:["GET /repos/{owner}/{repo}/readme"],getReadmeInDirectory:["GET /repos/{owner}/{repo}/readme/{dir}"],getRelease:["GET /repos/{owner}/{repo}/releases/{release_id}"],getReleaseAsset:["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],getReleaseByTag:["GET /repos/{owner}/{repo}/releases/tags/{tag}"],getRepoRuleSuite:["GET /repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}"],getRepoRuleSuites:["GET /repos/{owner}/{repo}/rulesets/rule-suites"],getRepoRuleset:["GET /repos/{owner}/{repo}/rulesets/{ruleset_id}"],getRepoRulesets:["GET /repos/{owner}/{repo}/rulesets"],getStatusChecksProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],getTeamsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],getTopPaths:["GET /repos/{owner}/{repo}/traffic/popular/paths"],getTopReferrers:["GET /repos/{owner}/{repo}/traffic/popular/referrers"],getUsersWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],getViews:["GET /repos/{owner}/{repo}/traffic/views"],getWebhook:["GET /repos/{owner}/{repo}/hooks/{hook_id}"],getWebhookConfigForRepo:["GET /repos/{owner}/{repo}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}"],listActivities:["GET /repos/{owner}/{repo}/activity"],listAttestations:["GET /repos/{owner}/{repo}/attestations/{subject_digest}"],listAutolinks:["GET /repos/{owner}/{repo}/autolinks"],listBranches:["GET /repos/{owner}/{repo}/branches"],listBranchesForHeadCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head"],listCollaborators:["GET /repos/{owner}/{repo}/collaborators"],listCommentsForCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],listCommitCommentsForRepo:["GET /repos/{owner}/{repo}/comments"],listCommitStatusesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],listCommits:["GET /repos/{owner}/{repo}/commits"],listContributors:["GET /repos/{owner}/{repo}/contributors"],listCustomDeploymentRuleIntegrations:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps"],listDeployKeys:["GET /repos/{owner}/{repo}/keys"],listDeploymentBranchPolicies:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],listDeploymentStatuses:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],listDeployments:["GET /repos/{owner}/{repo}/deployments"],listForAuthenticatedUser:["GET /user/repos"],listForOrg:["GET /orgs/{org}/repos"],listForUser:["GET /users/{username}/repos"],listForks:["GET /repos/{owner}/{repo}/forks"],listInvitations:["GET /repos/{owner}/{repo}/invitations"],listInvitationsForAuthenticatedUser:["GET /user/repository_invitations"],listLanguages:["GET /repos/{owner}/{repo}/languages"],listPagesBuilds:["GET /repos/{owner}/{repo}/pages/builds"],listPublic:["GET /repositories"],listPullRequestsAssociatedWithCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls"],listReleaseAssets:["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],listReleases:["GET /repos/{owner}/{repo}/releases"],listTags:["GET /repos/{owner}/{repo}/tags"],listTeams:["GET /repos/{owner}/{repo}/teams"],listWebhookDeliveries:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /repos/{owner}/{repo}/hooks"],merge:["POST /repos/{owner}/{repo}/merges"],mergeUpstream:["POST /repos/{owner}/{repo}/merge-upstream"],pingWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeAppAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],removeCollaborator:["DELETE /repos/{owner}/{repo}/collaborators/{username}"],removeStatusCheckContexts:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],removeStatusCheckProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],removeTeamAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],removeUserAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],renameBranch:["POST /repos/{owner}/{repo}/branches/{branch}/rename"],replaceAllTopics:["PUT /repos/{owner}/{repo}/topics"],requestPagesBuild:["POST /repos/{owner}/{repo}/pages/builds"],setAdminBranchProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],setAppAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],setStatusCheckContexts:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],setTeamAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],setUserAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],testPushWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],transfer:["POST /repos/{owner}/{repo}/transfer"],update:["PATCH /repos/{owner}/{repo}"],updateBranchProtection:["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],updateCommitComment:["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],updateDeploymentBranchPolicy:["PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],updateInformationAboutPagesSite:["PUT /repos/{owner}/{repo}/pages"],updateInvitation:["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],updateOrgRuleset:["PUT /orgs/{org}/rulesets/{ruleset_id}"],updatePullRequestReviewProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],updateRelease:["PATCH /repos/{owner}/{repo}/releases/{release_id}"],updateReleaseAsset:["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],updateRepoRuleset:["PUT /repos/{owner}/{repo}/rulesets/{ruleset_id}"],updateStatusCheckPotection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",{},{renamed:["repos","updateStatusCheckProtection"]}],updateStatusCheckProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],updateWebhook:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],updateWebhookConfigForRepo:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config"],uploadReleaseAsset:["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",{baseUrl:"https://uploads.github.com"}]},search:{code:["GET /search/code"],commits:["GET /search/commits"],issuesAndPullRequests:["GET /search/issues"],labels:["GET /search/labels"],repos:["GET /search/repositories"],topics:["GET /search/topics"],users:["GET /search/users"]},secretScanning:{createPushProtectionBypass:["POST /repos/{owner}/{repo}/secret-scanning/push-protection-bypasses"],getAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"],getScanHistory:["GET /repos/{owner}/{repo}/secret-scanning/scan-history"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/secret-scanning/alerts"],listAlertsForOrg:["GET /orgs/{org}/secret-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/secret-scanning/alerts"],listLocationsForAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations"],updateAlert:["PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"]},securityAdvisories:{createFork:["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/forks"],createPrivateVulnerabilityReport:["POST /repos/{owner}/{repo}/security-advisories/reports"],createRepositoryAdvisory:["POST /repos/{owner}/{repo}/security-advisories"],createRepositoryAdvisoryCveRequest:["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/cve"],getGlobalAdvisory:["GET /advisories/{ghsa_id}"],getRepositoryAdvisory:["GET /repos/{owner}/{repo}/security-advisories/{ghsa_id}"],listGlobalAdvisories:["GET /advisories"],listOrgRepositoryAdvisories:["GET /orgs/{org}/security-advisories"],listRepositoryAdvisories:["GET /repos/{owner}/{repo}/security-advisories"],updateRepositoryAdvisory:["PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}"]},teams:{addOrUpdateMembershipForUserInOrg:["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],addOrUpdateProjectPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}"],addOrUpdateRepoPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],checkPermissionsForProjectInOrg:["GET /orgs/{org}/teams/{team_slug}/projects/{project_id}"],checkPermissionsForRepoInOrg:["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],create:["POST /orgs/{org}/teams"],createDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],createDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions"],deleteDiscussionCommentInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],deleteDiscussionInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],deleteInOrg:["DELETE /orgs/{org}/teams/{team_slug}"],getByName:["GET /orgs/{org}/teams/{team_slug}"],getDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],getDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],getMembershipForUserInOrg:["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],list:["GET /orgs/{org}/teams"],listChildInOrg:["GET /orgs/{org}/teams/{team_slug}/teams"],listDiscussionCommentsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],listDiscussionsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions"],listForAuthenticatedUser:["GET /user/teams"],listMembersInOrg:["GET /orgs/{org}/teams/{team_slug}/members"],listPendingInvitationsInOrg:["GET /orgs/{org}/teams/{team_slug}/invitations"],listProjectsInOrg:["GET /orgs/{org}/teams/{team_slug}/projects"],listReposInOrg:["GET /orgs/{org}/teams/{team_slug}/repos"],removeMembershipForUserInOrg:["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],removeProjectInOrg:["DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}"],removeRepoInOrg:["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],updateDiscussionCommentInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],updateDiscussionInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],updateInOrg:["PATCH /orgs/{org}/teams/{team_slug}"]},users:{addEmailForAuthenticated:["POST /user/emails",{},{renamed:["users","addEmailForAuthenticatedUser"]}],addEmailForAuthenticatedUser:["POST /user/emails"],addSocialAccountForAuthenticatedUser:["POST /user/social_accounts"],block:["PUT /user/blocks/{username}"],checkBlocked:["GET /user/blocks/{username}"],checkFollowingForUser:["GET /users/{username}/following/{target_user}"],checkPersonIsFollowedByAuthenticated:["GET /user/following/{username}"],createGpgKeyForAuthenticated:["POST /user/gpg_keys",{},{renamed:["users","createGpgKeyForAuthenticatedUser"]}],createGpgKeyForAuthenticatedUser:["POST /user/gpg_keys"],createPublicSshKeyForAuthenticated:["POST /user/keys",{},{renamed:["users","createPublicSshKeyForAuthenticatedUser"]}],createPublicSshKeyForAuthenticatedUser:["POST /user/keys"],createSshSigningKeyForAuthenticatedUser:["POST /user/ssh_signing_keys"],deleteEmailForAuthenticated:["DELETE /user/emails",{},{renamed:["users","deleteEmailForAuthenticatedUser"]}],deleteEmailForAuthenticatedUser:["DELETE /user/emails"],deleteGpgKeyForAuthenticated:["DELETE /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","deleteGpgKeyForAuthenticatedUser"]}],deleteGpgKeyForAuthenticatedUser:["DELETE /user/gpg_keys/{gpg_key_id}"],deletePublicSshKeyForAuthenticated:["DELETE /user/keys/{key_id}",{},{renamed:["users","deletePublicSshKeyForAuthenticatedUser"]}],deletePublicSshKeyForAuthenticatedUser:["DELETE /user/keys/{key_id}"],deleteSocialAccountForAuthenticatedUser:["DELETE /user/social_accounts"],deleteSshSigningKeyForAuthenticatedUser:["DELETE /user/ssh_signing_keys/{ssh_signing_key_id}"],follow:["PUT /user/following/{username}"],getAuthenticated:["GET /user"],getById:["GET /user/{account_id}"],getByUsername:["GET /users/{username}"],getContextForUser:["GET /users/{username}/hovercard"],getGpgKeyForAuthenticated:["GET /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","getGpgKeyForAuthenticatedUser"]}],getGpgKeyForAuthenticatedUser:["GET /user/gpg_keys/{gpg_key_id}"],getPublicSshKeyForAuthenticated:["GET /user/keys/{key_id}",{},{renamed:["users","getPublicSshKeyForAuthenticatedUser"]}],getPublicSshKeyForAuthenticatedUser:["GET /user/keys/{key_id}"],getSshSigningKeyForAuthenticatedUser:["GET /user/ssh_signing_keys/{ssh_signing_key_id}"],list:["GET /users"],listAttestations:["GET /users/{username}/attestations/{subject_digest}"],listBlockedByAuthenticated:["GET /user/blocks",{},{renamed:["users","listBlockedByAuthenticatedUser"]}],listBlockedByAuthenticatedUser:["GET /user/blocks"],listEmailsForAuthenticated:["GET /user/emails",{},{renamed:["users","listEmailsForAuthenticatedUser"]}],listEmailsForAuthenticatedUser:["GET /user/emails"],listFollowedByAuthenticated:["GET /user/following",{},{renamed:["users","listFollowedByAuthenticatedUser"]}],listFollowedByAuthenticatedUser:["GET /user/following"],listFollowersForAuthenticatedUser:["GET /user/followers"],listFollowersForUser:["GET /users/{username}/followers"],listFollowingForUser:["GET /users/{username}/following"],listGpgKeysForAuthenticated:["GET /user/gpg_keys",{},{renamed:["users","listGpgKeysForAuthenticatedUser"]}],listGpgKeysForAuthenticatedUser:["GET /user/gpg_keys"],listGpgKeysForUser:["GET /users/{username}/gpg_keys"],listPublicEmailsForAuthenticated:["GET /user/public_emails",{},{renamed:["users","listPublicEmailsForAuthenticatedUser"]}],listPublicEmailsForAuthenticatedUser:["GET /user/public_emails"],listPublicKeysForUser:["GET /users/{username}/keys"],listPublicSshKeysForAuthenticated:["GET /user/keys",{},{renamed:["users","listPublicSshKeysForAuthenticatedUser"]}],listPublicSshKeysForAuthenticatedUser:["GET /user/keys"],listSocialAccountsForAuthenticatedUser:["GET /user/social_accounts"],listSocialAccountsForUser:["GET /users/{username}/social_accounts"],listSshSigningKeysForAuthenticatedUser:["GET /user/ssh_signing_keys"],listSshSigningKeysForUser:["GET /users/{username}/ssh_signing_keys"],setPrimaryEmailVisibilityForAuthenticated:["PATCH /user/email/visibility",{},{renamed:["users","setPrimaryEmailVisibilityForAuthenticatedUser"]}],setPrimaryEmailVisibilityForAuthenticatedUser:["PATCH /user/email/visibility"],unblock:["DELETE /user/blocks/{username}"],unfollow:["DELETE /user/following/{username}"],updateAuthenticated:["PATCH /user"]}}))for(const[n,r]of Object.entries(t)){const[t,o,s]=r,[i,a]=t.split(/ /),c=Object.assign({method:i,url:a},o);Z.has(e)||Z.set(e,new Map),Z.get(e).set(n,{scope:e,methodName:n,endpointDefaults:c,decorations:s})}const Q={has:({scope:e},t)=>Z.get(e).has(t),getOwnPropertyDescriptor(e,t){return{value:this.get(e,t),configurable:!0,writable:!0,enumerable:!0}},defineProperty:(e,t,n)=>(Object.defineProperty(e.cache,t,n),!0),deleteProperty:(e,t)=>(delete e.cache[t],!0),ownKeys:({scope:e})=>[...Z.get(e).keys()],set:(e,t,n)=>e.cache[t]=n,get({octokit:e,scope:t,cache:n},r){if(n[r])return n[r];const o=Z.get(t).get(r);if(!o)return;const{endpointDefaults:s,decorations:i}=o;return n[r]=i?function(e,t,n,r,o){const s=e.request.defaults(r);return Object.assign(function(...r){let i=s.endpoint.merge(...r);if(o.mapToData)return i=Object.assign({},i,{data:i[o.mapToData],[o.mapToData]:void 0}),s(i);if(o.renamed){const[r,s]=o.renamed;e.log.warn(`octokit.${t}.${n}() has been renamed to octokit.${r}.${s}()`)}if(o.deprecated&&e.log.warn(o.deprecated),o.renamedParameters){const i=s.endpoint.merge(...r);for(const[r,s]of Object.entries(o.renamedParameters))r in i&&(e.log.warn(`"${r}" parameter is deprecated for "octokit.${t}.${n}()". Use "${s}" instead`),s in i||(i[s]=i[r]),delete i[r]);return s(i)}return s(...r)},s)}(e,t,r,s,i):e.request.defaults(s),n[r]}};function X(e){const t=function(e){const t={};for(const n of Z.keys())t[n]=new Proxy({octokit:e,scope:n,cache:{}},Q);return t}(e);return{...t,rest:t}}X.VERSION="13.3.2-cjs.1";var ee=H.plugin(V,X,Y).defaults({userAgent:"octokit-rest.js/20.1.2"})},474:e=>{"use strict";e.exports=require("node:events")},519:(e,t,n)=>{var r=n(587);function o(e){var t=function(){return t.called?t.value:(t.called=!0,t.value=e.apply(this,arguments))};return t.called=!1,t}function s(e){var t=function(){if(t.called)throw new Error(t.onceError);return t.called=!0,t.value=e.apply(this,arguments)},n=e.name||"Function wrapped with `once`";return t.onceError=n+" shouldn't be called more than once",t.called=!1,t}e.exports=r(o),e.exports.strict=r(s),o.proto=o(function(){Object.defineProperty(Function.prototype,"once",{value:function(){return o(this)},configurable:!0}),Object.defineProperty(Function.prototype,"onceStrict",{value:function(){return s(this)},configurable:!0})})},566:function(e,t,n){"use strict";var r,o=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||(r=function(e){return r=Object.getOwnPropertyNames||function(e){var t=[];for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[t.length]=n);return t},r(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n=r(e),i=0;i<n.length;i++)"default"!==n[i]&&o(t,e,n[i]);return s(t,e),t});Object.defineProperty(t,"__esModule",{value:!0}),t.getCreateRepoWebviewContent=function(e,t,n,r=[],o=[]){const s=e.asWebviewUri(a.Uri.joinPath(n,"resources","createRepo.css")),i=e.asWebviewUri(a.Uri.joinPath(n,"node_modules","@vscode/codicons","dist","codicon.css"));return`\n        <!DOCTYPE html>\n        <html lang="en">\n        <head>\n            <meta charset="UTF-8">\n            <meta name="viewport" content="width=device-width, initial-scale=1.0">\n            <meta http-equiv="Content-Security-Policy" content="default-src 'none'; font-src ${e.cspSource}; style-src ${e.cspSource} 'unsafe-inline'; script-src 'nonce-${t}';">\n            <link href="${s}" rel="stylesheet">\n            <link href="${i}" rel="stylesheet" />\n            <title>Create a New Repository</title>\n        </head>\n        <body>\n            <div id="globalLoaderOverlay" style="position:fixed;inset:0;display:none;align-items:center;justify-content:center;background:rgba(13,17,23,.85);backdrop-filter:blur(2px);z-index:9999;">\n                <div class="gh-loader-shell" style="display:flex;flex-direction:column;align-items:center;gap:18px;">\n                    <div class="gh-loader-ring" style="width:80px;height:80px;border:4px solid rgba(255,255,255,0.12);border-top-color:#2f81f7;border-radius:50%;animation:ghSpin .9s linear infinite;position:relative;display:flex;align-items:center;justify-content:center;">\n                        <svg viewBox="0 0 16 16" width="46" height="46" aria-hidden="true" class="gh-loader-icon" style="color:#2f81f7;filter:drop-shadow(0 0 6px rgba(47,129,247,.6));animation:ghIconPulse 3s ease-in-out infinite;">\n                            <path fill="currentColor" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2 .37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z" />\n                        </svg>\n                    </div>\n                    <div class="gh-loader-text" id="globalLoaderText" style="font:600 13px/1.4 -apple-system,BlinkMacSystemFont,'Segoe UI',Helvetica,Arial,sans-serif;color:#e6edf3;letter-spacing:.5px;text-transform:uppercase;">Loading...</div>\n                </div>\n                <style>\n                    @keyframes ghSpin { to { transform: rotate(360deg); } }\n                    @keyframes ghIconPulse { 0%,100% { opacity:.85;} 50% { opacity:1;} }\n                </style>\n            </div>\n            <div class="github-create-repo-bg">\n                <div class="container">\n                    <div class="github-create-repo">\n                        <div class="header">\n                            <i class="codicon codicon-repo"></i>\n                            <h1>Create a new repository</h1>\n                        </div>\n                        <p class="github-create-repo-desc">A repository contains all project files, including the revision history. Already have a project repository elsewhere?</p>\n                        <form class="github-create-repo-form" id="create-repo-form">\n                            <div class="form-group">\n                                <label for="repoName">Repository name <span class="required">*</span></label>\n                                <div class="input-with-icon">\n                                    <i class="codicon codicon-repo"></i>\n                                    <input type="text" id="repoName" name="repoName" required placeholder="my-awesome-project">\n                                </div>\n                                <p class="description">Great repository names are short and memorable. Need inspiration? How about <strong>stellar-octo-guide</strong>?</p>\n                            </div>\n                            <div class="form-group">\n                                <label for="description">Description <span class="description">(optional)</span></label>\n                                <input type="text" id="description" name="description" placeholder="Short description of this repository">\n                            </div>\n                            <div class="form-group visibility-group">\n                                <div class="radio-option">\n                                    <input type="radio" id="public" name="visibility" value="public" checked>\n                                    <label for="public">\n                                        <i class="codicon codicon-globe"></i>\n                                        <strong>Public</strong>\n                                        <span class="description">Anyone on the internet can see this repository. You choose who can commit.</span>\n                                    </label>\n                                </div>\n                                <div class="radio-option">\n                                    <input type="radio" id="private" name="visibility" value="private">\n                                    <label for="private">\n                                        <i class="codicon codicon-lock"></i>\n                                        <strong>Private</strong>\n                                        <span class="description">You choose who can see and commit to this repository.</span>\n                                    </label>\n                                </div>\n                            </div>\n                            <div class="form-group">\n                                <label>Initialize this repository with:</label>\n                                <div class="checkbox-option">\n                                    <input type="checkbox" id="addReadme" name="addReadme" checked>\n                                    <label for="addReadme">Add a README file</label>\n                                </div>\n                                <div class="form-group" style="margin-top:12px;">\n                                    <label for="gitignoreTemplate">.gitignore template</label>\n                                    <select id="gitignoreTemplate" style="width:100%; padding:10px 12px; background:#0d1117; border:1px solid #30363d; border-radius:6px; color:#f0f6fc;">\n                                        <option value="">None</option>\n                                        ${r.map(e=>`<option value="${e}">${e}</option>`).join("")}\n                                    </select>\n                                    <p class="description">Select a language or framework specific .gitignore.</p>\n                                </div>\n                                <div class="form-group" style="margin-top:12px;">\n                                    <label for="licenseTemplate">License</label>\n                                    <select id="licenseTemplate" style="width:100%; padding:10px 12px; background:#0d1117; border:1px solid #30363d; border-radius:6px; color:#f0f6fc;">\n                                        <option value="">None</option>\n                                        ${o.map(e=>`<option value="${e.key}">${e.name}${e.spdx_id?" ("+e.spdx_id+")":""}</option>`).join("")}\n                                    </select>\n                                    <p class="description">Choose a license template appropriate for your project.</p>\n                                </div>\n                            </div>\n                            <div class="form-group" style="margin-top:12px;">\n                                <label for="defaultBranch">Default branch name</label>\n                                <input type="text" id="defaultBranch" placeholder="main" value="main" />\n                                <p class="description">Customize the initial branch name.</p>\n                            </div>\n                            <div class="form-group">\n                                <label for="homepage">Homepage (optional)</label>\n                                <input type="text" id="homepage" placeholder="https://example.com" />\n                            </div>\n                            <div class="form-group">\n                                <label for="topics">Topics (comma separated)</label>\n                                <input type="text" id="topics" placeholder="devtools, vscode, extension" />\n                            </div>\n                            <button id="createRepoBtn" class="github-create-repo-btn">\n                                <i class="codicon codicon-add"></i>\n                                Create repository\n                            </button>\n                            <div id="error-message" class="error-message"></div>\n                            <div id="success-message" class="success-message" style="display:none;"></div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n            <script nonce="${t}">\n                const vscode = acquireVsCodeApi();\n                const createRepoBtn = document.getElementById('createRepoBtn');\n                const repoNameInput = document.getElementById('repoName');\n                const descriptionInput = document.getElementById('description');\n                const publicRadio = document.getElementById('public');\n                const addReadmeCheckbox = document.getElementById('addReadme');\n                const errorMessage = document.getElementById('error-message');\n                const successMessage = document.getElementById('success-message');\n                const gitignoreSelect = document.getElementById('gitignoreTemplate');\n                const licenseSelect = document.getElementById('licenseTemplate');\n                const defaultBranchInput = document.getElementById('defaultBranch');\n                const homepageInput = document.getElementById('homepage');\n                const topicsInput = document.getElementById('topics');\n                \n                createRepoBtn.addEventListener('click', (e) => {\n                    e.preventDefault();\n                    const repoName = repoNameInput.value;\n                    if (!repoName) {\n                        errorMessage.textContent = 'Repository name is required.';\n                        repoNameInput.focus();\n                        return;\n                    }\n                    errorMessage.textContent = '';\n                    createRepoBtn.disabled = true;\n                    createRepoBtn.innerHTML = '<i class="codicon codicon-sync codicon-spin"></i> Creating repository...';\n                    vscode.postMessage({\n                        command: 'createRepository',\n                        repoName: repoName,\n                        description: descriptionInput.value,\n                        isPrivate: !publicRadio.checked,\n                        initReadme: addReadmeCheckbox.checked,\n                        gitignoreTemplate: gitignoreSelect.value || '',\n                        licenseTemplate: licenseSelect.value || '',\n                        defaultBranch: defaultBranchInput.value || 'main',\n                        homepage: homepageInput.value || '',\n                        topics: topicsInput.value.split(',').map(t => t.trim()).filter(Boolean)\n                    });\n                });\n                \n                window.addEventListener('message', event => {\n                    const message = event.data;\n                    if(message.command === 'globalLoader') {\n                        const overlay = document.getElementById('globalLoaderOverlay');\n                        const textEl = document.getElementById('globalLoaderText');\n                        if(message.action === 'show') { if(textEl && message.text) textEl.textContent = message.text; overlay?.classList.add('active'); overlay && (overlay.style.display='flex'); }\n                        if(message.action === 'hide') { overlay?.classList.remove('active'); overlay && (overlay.style.display='none'); }\n                    }\n                    if (message.command === 'creationFailed') {\n                        createRepoBtn.disabled = false;\n                        createRepoBtn.innerHTML = '<i class="codicon codicon-add"></i>Create repository';\n                    } else if (message.command === 'creationSuccess') {\n                        createRepoBtn.disabled = true;\n                        createRepoBtn.innerHTML = '<i class="codicon codicon-check"></i> Created';\n                        successMessage.style.display = 'block';\n                        successMessage.innerHTML = 'Repository <strong>' + message.repo.full_name + '</strong> created. <a href="#" id="openInPanel">Open now</a>';\n                        const openLink = document.getElementById('openInPanel');\n                        if (openLink) {\n                            openLink.addEventListener('click', (e) => {\n                                e.preventDefault();\n                                vscode.postMessage({ command: 'openRepo', owner: message.repo.owner.login, repo: message.repo.name, repoUrl: message.repo.clone_url });\n                            });\n                        }\n                    }\n                });\n            <\/script>\n        </body>\n        </html>\n    `},t.getRepoExplorerWebviewContent=function(e,t,n,r,o,s=""){const i=e.asWebviewUri(a.Uri.joinPath(n,"resources","createRepo.css"));return`\n        <!DOCTYPE html>\n        <html lang="en">\n        <head>\n            <meta charset="UTF-8">\n            <meta name="viewport" content="width=device-width, initial-scale=1.0">\n            <meta http-equiv="Content-Security-Policy" content="default-src 'none'; style-src ${e.cspSource} 'unsafe-inline'; script-src 'nonce-${t}';">\n            <link href="${i}" rel="stylesheet">\n            <title>${o} Explorer</title>\n            <style>\n                body { font-family: var(--vscode-font-family); background: var(--vscode-editor-background); color: var(--vscode-editor-foreground); }\n                .container { max-width: 1200px; margin: 0 auto; padding: 20px; }\n                .header { display: flex; align-items: center; gap: 12px; margin-bottom: 20px; padding-bottom: 12px; border-bottom: 1px solid var(--vscode-panel-border); }\n                .header h1 { margin: 0; font-size: 24px; }\n                .breadcrumb { display: flex; gap: 8px; margin-bottom: 20px; }\n                .breadcrumb-item { color: var(--vscode-textLink-foreground); cursor: pointer; }\n                .breadcrumb-item:hover { text-decoration: underline; }\n                .breadcrumb-separator { color: var(--vscode-description-foreground); }\n                .repo-list { list-style: none; padding: 0; }\n                .repo-item { display: flex; align-items: center; gap: 12px; padding: 12px; border: 1px solid var(--vscode-panel-border); border-radius: 6px; margin-bottom: 8px; background: var(--vscode-panel-background); cursor: pointer; transition: all 0.2s; }\n                .repo-item:hover { border-color: var(--vscode-focusBorder); background: var(--vscode-toolbar-hoverBackground); }\n                .repo-item-icon { font-size: 16px; width: 20px; text-align: center; }\n                .repo-item-name { flex: 1; font-weight: 500; }\n                .repo-item-size { color: var(--vscode-description-foreground); font-size: 12px; }\n                .loading { text-align: center; padding: 40px; color: var(--vscode-description-foreground); }\n                .error { color: var(--vscode-errorForeground); padding: 20px; background: var(--vscode-inputValidation-errorBackground); border: 1px solid var(--vscode-inputValidation-errorBorder); border-radius: 6px; }\n            </style>\n        </head>\n        <body>\n            <div class="container">\n                <div class="header">\n                    <span class="codicon codicon-repo"></span>\n                    <h1>${r}/${o}</h1>\n                </div>\n                ${s?`<div class="breadcrumb">${s.split("/").map((e,t)=>`<span class="breadcrumb-item" data-path="${s.split("/").slice(0,t+1).join("/")}">${e}</span>${t<s.split("/").length-1?'<span class="breadcrumb-separator">/</span>':""}`).join("")}</div>`:""}\n                <div id="repo-explorer">\n                    <div class="loading">Loading repository contents...</div>\n                </div>\n            </div>\n            <script nonce="${t}">\n                const vscode = acquireVsCodeApi();\n                \n                // Handle breadcrumb navigation\n                document.addEventListener('click', function(e) {\n                    const breadcrumbItem = e.target.closest('.breadcrumb-item');\n                    if (breadcrumbItem) {\n                        const path = breadcrumbItem.getAttribute('data-path');\n                        vscode.postMessage({ command: 'navigate', path: path });\n                        e.preventDefault();\n                    }\n                });\n                \n                window.addEventListener('message', event => {\n                    const message = event.data;\n                    if (message.command === 'updateExplorer') {\n                        document.getElementById('repo-explorer').innerHTML = message.html;\n                        \n                        // Add click handlers for items\n                        document.querySelectorAll('.repo-item[data-path]').forEach(item => {\n                            item.addEventListener('click', function() {\n                                const path = this.getAttribute('data-path');\n                                const type = this.getAttribute('data-type');\n                                if (type === 'dir') {\n                                    vscode.postMessage({ command: 'navigate', path: path });\n                                } else {\n                                    vscode.postMessage({ command: 'openFile', path: path });\n                                }\n                            });\n                        });\n                    }\n                });\n            <\/script>\n        </body>\n        </html>\n    `};const a=i(n(398))},573:e=>{"use strict";e.exports=require("node:buffer")},585:e=>{var t=1e3,n=60*t,r=60*n,o=24*r,s=7*o;function i(e,t,n,r){var o=t>=1.5*n;return Math.round(e/n)+" "+r+(o?"s":"")}e.exports=function(e,a){a=a||{};var c,l,d=typeof e;if("string"===d&&e.length>0)return function(e){if(!((e=String(e)).length>100)){var i=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(i){var a=parseFloat(i[1]);switch((i[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return 315576e5*a;case"weeks":case"week":case"w":return a*s;case"days":case"day":case"d":return a*o;case"hours":case"hour":case"hrs":case"hr":case"h":return a*r;case"minutes":case"minute":case"mins":case"min":case"m":return a*n;case"seconds":case"second":case"secs":case"sec":case"s":return a*t;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return a;default:return}}}}(e);if("number"===d&&isFinite(e))return a.long?(c=e,(l=Math.abs(c))>=o?i(c,l,o,"day"):l>=r?i(c,l,r,"hour"):l>=n?i(c,l,n,"minute"):l>=t?i(c,l,t,"second"):c+" ms"):function(e){var s=Math.abs(e);return s>=o?Math.round(e/o)+"d":s>=r?Math.round(e/r)+"h":s>=n?Math.round(e/n)+"m":s>=t?Math.round(e/t)+"s":e+"ms"}(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))}},587:e=>{e.exports=function e(t,n){if(t&&n)return e(t)(n);if("function"!=typeof t)throw new TypeError("need wrapper function");return Object.keys(t).forEach(function(e){r[e]=t[e]}),r;function r(){for(var e=new Array(arguments.length),n=0;n<e.length;n++)e[n]=arguments[n];var r=t.apply(this,e),o=e[e.length-1];return"function"==typeof r&&r!==o&&Object.keys(o).forEach(function(e){r[e]=o[e]}),r}}},640:e=>{e.exports=function(e,t,n,r){var o=r;e.registry[n]||(e.registry[n]=[]),"before"===t&&(r=function(e,t){return Promise.resolve().then(o.bind(null,t)).then(e.bind(null,t))}),"after"===t&&(r=function(e,t){var n;return Promise.resolve().then(e.bind(null,t)).then(function(e){return o(n=e,t)}).then(function(){return n})}),"error"===t&&(r=function(e,t){return Promise.resolve().then(e.bind(null,t)).catch(function(e){return o(e,t)})}),e.registry[n].push({hook:r,orig:o})}},662:(e,t,n)=>{"use strict";var r,o,s,i=Object.create,a=Object.defineProperty,c=Object.getOwnPropertyDescriptor,l=Object.getOwnPropertyNames,d=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty,u=(e,t)=>function(){return e&&(t=(0,e[l(e)[0]])(e=0)),t},g=(e,t)=>{for(var n in t)a(e,n,{get:t[n],enumerable:!0})},m=(e,t,n,r)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let o of l(t))p.call(e,o)||o===n||a(e,o,{get:()=>t[o],enumerable:!(r=c(t,o))||r.enumerable});return e},h=e=>m(a({},"__esModule",{value:!0}),e),f=u({"src/lib/errors/git-error.ts"(){r=class extends Error{constructor(e,t){super(t),this.task=e,Object.setPrototypeOf(this,new.target.prototype)}}}}),b=u({"src/lib/errors/git-response-error.ts"(){f(),o=class extends r{constructor(e,t){super(void 0,t||String(e)),this.git=e}}}});function v(...e){const t=new String(e);return s.set(t,e),t}function y(e){return e instanceof String&&s.has(e)}function w(e){return s.get(e)||[]}var T,E,k,x,_,S,C,P,O=u({"src/lib/args/pathspec.ts"(){s=new WeakMap}}),A=u({"src/lib/errors/git-construct-error.ts"(){f(),T=class extends r{constructor(e,t){super(void 0,t),this.config=e}}}}),R=u({"src/lib/errors/git-plugin-error.ts"(){f(),E=class extends r{constructor(e,t,n){super(e,n),this.task=e,this.plugin=t,Object.setPrototypeOf(this,new.target.prototype)}}}}),F=u({"src/lib/errors/task-configuration-error.ts"(){f(),k=class extends r{constructor(e){super(void 0,e)}}}});function G(e){return"function"!=typeof e?C:e}function D(e){return"function"==typeof e&&e!==C}function U(e,t){const n=e.indexOf(t);return n<=0?[e,""]:[e.substr(0,n),e.substr(n+1)]}function I(e,t=0){return $(e)&&e.length>t?e[t]:void 0}function L(e,t=0){if($(e)&&e.length>t)return e[e.length-1-t]}function $(e){return!(!e||"number"!=typeof e.length)}function M(e="",t=!0,n="\n"){return e.split(n).reduce((e,n)=>{const r=t?n.trim():n;return r&&e.push(r),e},[])}function j(e,t){return M(e,!0).map(e=>t(e))}function B(e){return(0,_.exists)(e,_.FOLDER)}function z(e,t){return Array.isArray(e)?e.includes(t)||e.push(t):e.add(t),t}function q(e,t){return Array.isArray(e)&&!e.includes(t)&&e.push(t),e}function N(e,t){if(Array.isArray(e)){const n=e.indexOf(t);n>=0&&e.splice(n,1)}else e.delete(t);return t}function H(e){return Array.isArray(e)?e:[e]}function V(e){return e.replace(/[\s-]+(.)/g,(e,t)=>t.toUpperCase())}function W(e){return H(e).map(String)}function K(e,t=0){if(null==e)return t;const n=parseInt(e,10);return isNaN(n)?t:n}function J(e,t){const n=[];for(let r=0,o=e.length;r<o;r++)n.push(t,e[r]);return n}function Y(e){return(Array.isArray(e)?x.Buffer.concat(e):e).toString("utf-8")}function Z(e,t){return Object.assign({},...t.map(t=>t in e?{[t]:e[t]}:{}))}function Q(e=0){return new Promise(t=>setTimeout(t,e))}function X(e){if(!1!==e)return e}var ee,te,ne,re,oe,se=u({"src/lib/utils/util.ts"(){x=n(573),_=n(926),S="\0",C=()=>{},P=Object.prototype.toString.call.bind(Object.prototype.toString)}});function ie(e,t,n){return t(e)?e:arguments.length>2?n:void 0}function ae(e,t){const n=y(e)?"string":typeof e;return/number|string|boolean/.test(n)&&(!t||!t.includes(n))}function ce(e){return!!e&&"[object Object]"===P(e)}function le(e){return"function"==typeof e}var de,pe,ue,ge,me,he=u({"src/lib/utils/argument-filters.ts"(){se(),O(),ee=e=>Array.isArray(e),te=e=>"string"==typeof e,ne=e=>Array.isArray(e)&&e.every(te),re=e=>te(e)||Array.isArray(e)&&e.every(te),oe=e=>null!=e&&!"number|boolean|function".includes(typeof e)&&(Array.isArray(e)||"string"==typeof e||"number"==typeof e.length)}}),fe=u({"src/lib/utils/exit-codes.ts"(){de=(e=>(e[e.SUCCESS=0]="SUCCESS",e[e.ERROR=1]="ERROR",e[e.NOT_FOUND=-2]="NOT_FOUND",e[e.UNCLEAN=128]="UNCLEAN",e))(de||{})}}),be=u({"src/lib/utils/git-output-streams.ts"(){pe=class e{constructor(e,t){this.stdOut=e,this.stdErr=t}asStrings(){return new e(this.stdOut.toString("utf8"),this.stdErr.toString("utf8"))}}}}),ve=u({"src/lib/utils/line-parser.ts"(){ue=class{constructor(e,t){this.matches=[],this.parse=(e,t)=>(this.resetMatches(),!!this._regExp.every((t,n)=>this.addMatch(t,n,e(n)))&&!1!==this.useMatches(t,this.prepareMatches())),this._regExp=Array.isArray(e)?e:[e],t&&(this.useMatches=t)}useMatches(e,t){throw new Error("LineParser:useMatches not implemented")}resetMatches(){this.matches.length=0}prepareMatches(){return this.matches}addMatch(e,t,n){const r=n&&e.exec(n);return r&&this.pushMatch(t,r),!!r}pushMatch(e,t){this.matches.push(...t.slice(1))}},ge=class extends ue{addMatch(e,t,n){return/^remote:\s/.test(String(n))&&super.addMatch(e,t,n)}pushMatch(e,t){(e>0||t.length>1)&&super.pushMatch(e,t)}}}});function ye(...e){const t=process.cwd(),n=Object.assign({baseDir:t,...me},...e.filter(e=>"object"==typeof e&&e));return n.baseDir=n.baseDir||t,n.trimmed=!0===n.trimmed,n}var we=u({"src/lib/utils/simple-git-options.ts"(){me={binary:"git",maxConcurrentProcesses:5,config:[],trimmed:!1}}});function Te(e,t=[]){return ce(e)?Object.keys(e).reduce((t,n)=>{const r=e[n];if(y(r))t.push(r);else if(ae(r,["boolean"]))t.push(n+"="+r);else if(Array.isArray(r))for(const e of r)ae(e,["string","number"])||t.push(n+"="+e);else t.push(n);return t},t):t}function Ee(e,t=0,n=!1){const r=[];for(let n=0,o=t<0?e.length:t;n<o;n++)"string|number".includes(typeof e[n])&&r.push(String(e[n]));return Te(ke(e),r),n||r.push(...function(e){const t="function"==typeof L(e);return ie(L(e,t?1:0),ee,[])}(e)),r}function ke(e){const t=le(L(e));return ie(L(e,t?1:0),ce)}function xe(e,t=!0){const n=G(L(e));return t||D(n)?n:void 0}var _e=u({"src/lib/utils/task-options.ts"(){he(),se(),O()}});function Se(e,t){return e(t.stdOut,t.stdErr)}function Ce(e,t,n,r=!0){return H(n).forEach(n=>{for(let o=M(n,r),s=0,i=o.length;s<i;s++){const n=(e=0)=>{if(!(s+e>=i))return o[s+e]};t.some(({parse:t})=>t(n,e))}}),e}var Pe=u({"src/lib/utils/task-parser.ts"(){se()}}),Oe={};g(Oe,{ExitCodes:()=>de,GitOutputStreams:()=>pe,LineParser:()=>ue,NOOP:()=>C,NULL:()=>S,RemoteLineParser:()=>ge,append:()=>z,appendTaskOptions:()=>Te,asArray:()=>H,asCamelCase:()=>V,asFunction:()=>G,asNumber:()=>K,asStringArray:()=>W,bufferToString:()=>Y,callTaskParser:()=>Se,createInstanceConfig:()=>ye,delay:()=>Q,filterArray:()=>ee,filterFunction:()=>le,filterHasLength:()=>oe,filterPlainObject:()=>ce,filterPrimitives:()=>ae,filterString:()=>te,filterStringArray:()=>ne,filterStringOrStringArray:()=>re,filterType:()=>ie,first:()=>I,folderExists:()=>B,forEachLineWithContent:()=>j,getTrailingOptions:()=>Ee,including:()=>q,isUserFunction:()=>D,last:()=>L,objectToString:()=>P,orVoid:()=>X,parseStringResponse:()=>Ce,pick:()=>Z,prefixedArray:()=>J,remove:()=>N,splitOn:()=>U,toLinesWithContent:()=>M,trailingFunctionArgument:()=>xe,trailingOptionsArgument:()=>ke});var Ae,Re,Fe,Ge=u({"src/lib/utils/index.ts"(){he(),fe(),be(),ve(),we(),_e(),Pe(),se()}}),De={};function Ue(e){switch(e){case"bare":return Le();case"root":return Ie()}return{commands:["rev-parse","--is-inside-work-tree"],format:"utf-8",onError:Re,parser:Fe}}function Ie(){return{commands:["rev-parse","--git-dir"],format:"utf-8",onError:Re,parser:e=>/^\.(git)?$/.test(e.trim())}}function Le(){return{commands:["rev-parse","--is-bare-repository"],format:"utf-8",onError:Re,parser:Fe}}g(De,{CheckRepoActions:()=>Ae,checkIsBareRepoTask:()=>Le,checkIsRepoRootTask:()=>Ie,checkIsRepoTask:()=>Ue});var $e,Me,je,Be,ze,qe=u({"src/lib/tasks/check-is-repo.ts"(){Ge(),Ae=(e=>(e.BARE="bare",e.IN_TREE="tree",e.IS_REPO_ROOT="root",e))(Ae||{}),Re=({exitCode:e},t,n,r)=>{if(128===e&&function(e){return/(Not a git repository|Kein Git-Repository)/i.test(String(e))}(t))return n(Buffer.from("false"));r(t)},Fe=e=>"true"===e.trim()}}),Ne=u({"src/lib/responses/CleanSummary.ts"(){Ge(),$e=class{constructor(e){this.dryRun=e,this.paths=[],this.files=[],this.folders=[]}},Me=/^[a-z]+\s*/i,je=/^[a-z]+\s+[a-z]+\s*/i,Be=/\/$/}}),He={};function Ve(e){return{commands:ze,format:"empty",parser:e}}function We(e){return{commands:ze,format:"empty",parser(){throw"string"==typeof e?new k(e):e}}}function Ke(e,t=!1){return{commands:e,format:"utf-8",parser:e=>t?String(e).trim():e}}function Je(e){return{commands:e,format:"buffer",parser:e=>e}}function Ye(e){return"buffer"===e.format}function Ze(e){return"empty"===e.format||!e.commands.length}g(He,{EMPTY_COMMANDS:()=>ze,adhocExecTask:()=>Ve,configurationErrorTask:()=>We,isBufferTask:()=>Ye,isEmptyTask:()=>Ze,straightThroughBufferTask:()=>Je,straightThroughStringTask:()=>Ke});var Qe,Xe,et,tt,nt,rt=u({"src/lib/tasks/task.ts"(){F(),ze=[]}}),ot={};function st(e,t){const{cleanMode:n,options:r,valid:o}=function(e){let t,n=[],r={cleanMode:!1,options:!0};return e.replace(/[^a-z]i/g,"").split("").forEach(e=>{var o;!function(e){return"f"===e||"n"===e}(e)?r.options=r.options&&(o=n[n.length]=`-${e}`,/^-[a-z]$/i.test(o)&&nt.has(o.charAt(1))):(t=e,r.cleanMode=!0)}),{cleanMode:t,options:n,valid:r}}(e);return n?o.options?(r.push(...t),r.some(ct)?We(Qe):it(n,r)):We(et+JSON.stringify(e)):We(Xe)}function it(e,t){return{commands:["clean",`-${e}`,...t],format:"utf-8",parser:t=>function(e,t){const n=new $e(e),r=e?je:Me;return M(t).forEach(e=>{const t=e.replace(r,"");n.paths.push(t),(Be.test(t)?n.folders:n.files).push(t)}),n}("n"===e,t)}}function at(e){return Array.isArray(e)&&e.every(e=>nt.has(e))}function ct(e){return/^-[^\-]/.test(e)?e.indexOf("i")>0:"--interactive"===e}g(ot,{CONFIG_ERROR_INTERACTIVE_MODE:()=>Qe,CONFIG_ERROR_MODE_REQUIRED:()=>Xe,CONFIG_ERROR_UNKNOWN_OPTION:()=>et,CleanOptions:()=>tt,cleanTask:()=>it,cleanWithOptionsTask:()=>st,isCleanOptionsArray:()=>at});var lt,dt=u({"src/lib/tasks/clean.ts"(){Ne(),Ge(),rt(),Qe="Git clean interactive mode is not supported",Xe='Git clean mode parameter ("n" or "f") is required',et="Git clean unknown option found in: ",tt=(e=>(e.DRY_RUN="n",e.FORCE="f",e.IGNORED_INCLUDED="x",e.IGNORED_ONLY="X",e.EXCLUDING="e",e.QUIET="q",e.RECURSIVE="d",e))(tt||{}),nt=new Set(["i",...W(Object.values(tt))])}});function pt(e){return e.replace(/^(file):/,"")}function*ut(e,t=null){const n=e.split("\0");for(let e=0,r=n.length-1;e<r;){const r=pt(n[e++]);let o=n[e++],s=t;if(o.includes("\n")){const e=U(o,"\n");s=e[0],o=e[1]}yield{file:r,key:s,value:o}}}var gt,mt=u({"src/lib/responses/ConfigList.ts"(){Ge(),lt=class{constructor(){this.files=[],this.values=Object.create(null)}get all(){return this._all||(this._all=this.files.reduce((e,t)=>Object.assign(e,this.values[t]),{})),this._all}addFile(e){if(!(e in this.values)){const t=L(this.files);this.values[e]=t?Object.create(this.values[t]):{},this.files.push(e)}return this.values[e]}addValue(e,t,n){const r=this.addFile(e);r.hasOwnProperty(t)?Array.isArray(r[t])?r[t].push(n):r[t]=[r[t],n]:r[t]=n,this._all=void 0}}}});function ht(e,t){return"string"==typeof e&&gt.hasOwnProperty(e)?e:t}var ft,bt,vt,yt,wt,Tt,Et=u({"src/lib/tasks/config.ts"(){mt(),Ge(),gt=(e=>(e.system="system",e.global="global",e.local="local",e.worktree="worktree",e))(gt||{})}}),kt=u({"src/lib/tasks/diff-name-status.ts"(){ft=(e=>(e.ADDED="A",e.COPIED="C",e.DELETED="D",e.MODIFIED="M",e.RENAMED="R",e.CHANGED="T",e.UNMERGED="U",e.UNKNOWN="X",e.BROKEN="B",e))(ft||{}),bt=new Set(Object.values(ft))}});function xt(...e){return(new Tt).param(...e)}var _t,St,Ct=u({"src/lib/tasks/grep.ts"(){Ge(),rt(),vt=["-h"],yt=Symbol("grepQuery"),Tt=class{constructor(){this[wt]=[]}*[(wt=yt,Symbol.iterator)](){for(const e of this[yt])yield e}and(...e){return e.length&&this[yt].push("--and","(",...J(e,"-e"),")"),this}param(...e){return this[yt].push(...J(e,"-e")),this}}}}),Pt={};function Ot(e,t){const n=["reset"];return Rt(e)&&n.push(`--${e}`),n.push(...t),Ke(n)}function At(e){if(Rt(e))return e;switch(typeof e){case"string":case"undefined":return"soft"}}function Rt(e){return St.includes(e)}g(Pt,{ResetMode:()=>_t,getResetMode:()=>At,resetTask:()=>Ot});var Ft=u({"src/lib/tasks/reset.ts"(){rt(),_t=(e=>(e.MIXED="mixed",e.SOFT="soft",e.HARD="hard",e.MERGE="merge",e.KEEP="keep",e))(_t||{}),St=Array.from(Object.values(_t))}}),Gt={};g(Gt,{CheckRepoActions:()=>Ae,CleanOptions:()=>tt,DiffNameStatus:()=>ft,GitConfigScope:()=>gt,GitConstructError:()=>T,GitError:()=>r,GitPluginError:()=>E,GitResponseError:()=>o,ResetMode:()=>_t,TaskConfigurationError:()=>k,grepQueryBuilder:()=>xt,pathspec:()=>v});var Dt=u({"src/lib/api.ts"(){O(),A(),f(),R(),b(),F(),qe(),dt(),Et(),kt(),Ct(),Ft()}}),Ut=u({"src/lib/plugins/abort-plugin.ts"(){R()}});var It,Lt,$t=u({"src/lib/plugins/block-unsafe-operations-plugin.ts"(){R()}}),Mt=u({"src/lib/plugins/command-config-prefixing-plugin.ts"(){Ge()}});var jt,Bt,zt=u({"src/lib/plugins/completion-detection.plugin.ts"(){It=n(100),Ge(),Lt=(0,It.deferred)().promise}});function qt(e){return!e||!/^([a-z]:)?([a-z0-9/.\\_-]+)$/i.test(e)}function Nt(e,t){if(e.length<1||e.length>2)throw new E(void 0,"binary",jt);if(e.some(qt)){if(!t)throw new E(void 0,"binary",Bt);console.warn(Bt)}const[n,r]=e;return{binary:n,prefix:r}}var Ht=u({"src/lib/plugins/custom-binary.plugin.ts"(){R(),Ge(),jt="Invalid value supplied for custom binary, requires a single string or an array containing either one or two strings",Bt="Invalid value supplied for custom binary, restricted characters must be removed or supply the unsafe.allowUnsafeCustomBinary option"}});function Vt(e){return!(!e.exitCode||!e.stdErr.length)}function Wt(e){return Buffer.concat([...e.stdOut,...e.stdErr])}function Kt(e=!1,t=Vt,n=Wt){return(r,o)=>!e&&r||!t(o)?r:n(o)}function Jt(e){return{type:"task.error",action(t,n){const o=e(t.error,{stdErr:n.stdErr,stdOut:n.stdOut,exitCode:n.exitCode});return Buffer.isBuffer(o)?{error:new r(void 0,o.toString("utf-8"))}:{error:o}}}}var Yt,Zt,Qt,Xt=u({"src/lib/plugins/error-detection.plugin.ts"(){f()}}),en=u({"src/lib/plugins/plugin-store.ts"(){Yt=n(474),Ge(),Zt=class{constructor(){this.plugins=new Set,this.events=new Yt.EventEmitter}on(e,t){this.events.on(e,t)}reconfigure(e,t){this.events.emit(e,t)}append(e,t){const n=z(this.plugins,{type:e,action:t});return()=>this.plugins.delete(n)}add(e){const t=[];return H(e).forEach(e=>e&&this.plugins.add(z(t,e))),()=>{t.forEach(e=>this.plugins.delete(e))}}exec(e,t,n){let r=t;const o=Object.freeze(Object.create(n));for(const t of this.plugins)t.type===e&&(r=t.action(r,o));return r}}}}),tn=u({"src/lib/plugins/progress-monitor-plugin.ts"(){Ge()}}),nn=u({"src/lib/plugins/simple-git-plugin.ts"(){}}),rn=u({"src/lib/plugins/spawn-options-plugin.ts"(){Ge()}}),on=u({"src/lib/plugins/timout-plugin.ts"(){R()}}),sn=u({"src/lib/plugins/index.ts"(){Ut(),$t(),Mt(),zt(),Ht(),Xt(),en(),tn(),nn(),rn(),on()}}),an=u({"src/lib/plugins/suffix-paths.plugin.ts"(){O()}});function cn(e,t,n){return t&&String(t).replace(/\s*/,"")?(r,...o)=>{e(`%s ${r}`,t,...o),n&&n(r,...o)}:n?(t,...r)=>{e(t,...r),n(t,...r)}:e}function ln(e,t,n,r=function(){return(0,Qt.default)("simple-git")}()){const o=e&&`[${e}]`||"",s=[],i="string"==typeof t?r.extend(t):t,a=function(e,t,{namespace:n}){if("string"==typeof e)return e;const r=t&&t.namespace||"";return r.startsWith(n)?r.substr(n.length+1):r||n}(ie(t,te),i,r);return function t(n){const s=n&&`[${n}]`||"",a=i&&cn(i,s)||C,l=cn(r,`${o} ${s}`,a);return Object.assign(i?a:l,{label:e,sibling:c,info:l,step:t})}(n);function c(t,n){return z(s,ln(e,a.replace(/^[^:]+/,t),n,r))}}var dn,pn,un,gn=u({"src/lib/git-logger.ts"(){var e,t;t=null!=(e=n(753))?i(d(e)):{},Qt=m(e&&e.__esModule?t:a(t,"default",{value:e,enumerable:!0}),e),Ge(),Qt.default.formatters.L=e=>String(oe(e)?e.length:"-"),Qt.default.formatters.B=e=>Buffer.isBuffer(e)?e.toString("utf8"):P(e)}}),mn=u({"src/lib/runners/tasks-pending-queue.ts"(){f(),gn(),dn=class e{constructor(e="GitExecutor"){this.logLabel=e,this._queue=new Map}withProgress(e){return this._queue.get(e)}createProgress(t){const n=e.getName(t.commands[0]);return{task:t,logger:ln(this.logLabel,n),name:n}}push(e){const t=this.createProgress(e);return t.logger("Adding task to the queue, commands = %o",e.commands),this._queue.set(e,t),t}fatal(e){for(const[t,{logger:n}]of Array.from(this._queue.entries()))t===e.task?(n.info("Failed %o",e),n("Fatal exception, any as-yet un-started tasks run through this executor will not be attempted")):n.info("A fatal exception occurred in a previous task, the queue has been purged: %o",e.message),this.complete(t);if(0!==this._queue.size)throw new Error(`Queue size should be zero after fatal: ${this._queue.size}`)}complete(e){this.withProgress(e)&&this._queue.delete(e)}attempt(e){const t=this.withProgress(e);if(!t)throw new r(void 0,"TasksPendingQueue: attempt called for an unknown task");return t.logger("Starting task"),t}static getName(t="empty"){return`task:${t}:${++e.counter}`}static{this.counter=0}}}});function hn(e,t){return{method:I(e.commands)||"",commands:t}}function fn(e,t,n,r){return o=>{n("%s received %L bytes",t,o),r("%B",o),e.push(o)}}var bn,vn=u({"src/lib/runners/git-executor-chain.ts"(){pn=n(317),f(),rt(),Ge(),mn(),un=class{constructor(e,t,n){this._executor=e,this._scheduler=t,this._plugins=n,this._chain=Promise.resolve(),this._queue=new dn}get cwd(){return this._cwd||this._executor.cwd}set cwd(e){this._cwd=e}get env(){return this._executor.env}get outputHandler(){return this._executor.outputHandler}chain(){return this}push(e){return this._queue.push(e),this._chain=this._chain.then(()=>this.attemptTask(e))}async attemptTask(e){const t=await this._scheduler.next(),n=()=>this._queue.complete(e);try{const{logger:t}=this._queue.attempt(e);return await(Ze(e)?this.attemptEmptyTask(e,t):this.attemptRemoteTask(e,t))}catch(t){throw this.onFatalException(e,t)}finally{n(),t()}}onFatalException(e,t){const n=t instanceof r?Object.assign(t,{task:e}):new r(e,t&&String(t));return this._chain=Promise.resolve(),this._queue.fatal(n),n}async attemptRemoteTask(e,t){const n=this._plugins.exec("spawn.binary","",hn(e,e.commands)),r=this._plugins.exec("spawn.args",[...e.commands],hn(e,e.commands)),o=await this.gitResponse(e,n,r,this.outputHandler,t.step("SPAWN")),s=await this.handleTaskData(e,r,o,t.step("HANDLE"));return t("passing response to task's parser as a %s",e.format),Ye(e)?Se(e.parser,s):Se(e.parser,s.asStrings())}async attemptEmptyTask(e,t){return t("empty task bypassing child process to call to task's parser"),e.parser(this)}handleTaskData(e,t,n,r){const{exitCode:o,rejection:s,stdOut:i,stdErr:a}=n;return new Promise((c,l)=>{r("Preparing to handle process response exitCode=%d stdOut=",o);const{error:d}=this._plugins.exec("task.error",{error:s},{...hn(e,t),...n});return d&&e.onError?(r.info("exitCode=%s handling with custom error handler"),e.onError(n,d,e=>{r.info("custom error handler treated as success"),r("custom error returned a %s",P(e)),c(new pe(Array.isArray(e)?Buffer.concat(e):e,Buffer.concat(a)))},l)):d?(r.info("handling as error: exitCode=%s stdErr=%s rejection=%o",o,a.length,s),l(d)):(r.info("retrieving task output complete"),void c(new pe(Buffer.concat(i),Buffer.concat(a))))})}async gitResponse(e,t,n,r,o){const s=o.sibling("output"),i=this._plugins.exec("spawn.options",{cwd:this.cwd,env:this.env,windowsHide:!0},hn(e,e.commands));return new Promise(a=>{const c=[],l=[];o.info("%s %o",t,n),o("%O",i);let d=this._beforeSpawn(e,n);if(d)return a({stdOut:c,stdErr:l,exitCode:9901,rejection:d});this._plugins.exec("spawn.before",void 0,{...hn(e,n),kill(e){d=e||d}});const p=(0,pn.spawn)(t,n,i);p.stdout.on("data",fn(c,"stdOut",o,s.step("stdOut"))),p.stderr.on("data",fn(l,"stdErr",o,s.step("stdErr"))),p.on("error",function(e,t){return n=>{t("[ERROR] child process exception %o",n),e.push(Buffer.from(String(n.stack),"ascii"))}}(l,o)),r&&(o("Passing child process stdOut/stdErr to custom outputHandler"),r(t,p.stdout,p.stderr,[...n])),this._plugins.exec("spawn.after",void 0,{...hn(e,n),spawned:p,close(e,t){a({stdOut:c,stdErr:l,exitCode:e,rejection:d||t})},kill(e){p.killed||(d=e,p.kill("SIGINT"))}})})}_beforeSpawn(e,t){let n;return this._plugins.exec("spawn.before",void 0,{...hn(e,t),kill(e){n=e||n}}),n}}}}),yn={};g(yn,{GitExecutor:()=>bn});var wn=u({"src/lib/runners/git-executor.ts"(){vn(),bn=class{constructor(e,t,n){this.cwd=e,this._scheduler=t,this._plugins=n,this._chain=new un(this,this._scheduler,this._plugins)}chain(){return new un(this,this._scheduler,this._plugins)}push(e){return this._chain.push(e)}}}});var Tn=u({"src/lib/task-callback.ts"(){b(),Ge()}});function En(e,t){return Ve(n=>{if(!B(e))throw new Error(`Git.cwd: cannot change to non-directory "${e}"`);return(t||n).cwd=e})}var kn=u({"src/lib/tasks/change-working-directory.ts"(){Ge(),rt()}});function xn(e){const t=["checkout",...e];return"-b"===t[1]&&t.includes("-B")&&(t[1]=N(t,"-B")),Ke(t)}var _n,Sn,Cn=u({"src/lib/tasks/checkout.ts"(){Ge(),rt()}}),Pn=u({"src/lib/tasks/count-objects.ts"(){Ge(),_n=new ue(/([a-z-]+): (\d+)$/,(e,[t,n])=>{const r=V(t);e.hasOwnProperty(r)&&(e[r]=K(n))})}});function On(e){return Ce({author:null,branch:"",commit:"",root:!1,summary:{changes:0,insertions:0,deletions:0}},Sn,e)}var An=u({"src/lib/parsers/parse-commit.ts"(){Ge(),Sn=[new ue(/^\[([^\s]+)( \([^)]+\))? ([^\]]+)/,(e,[t,n,r])=>{e.branch=t,e.commit=r,e.root=!!n}),new ue(/\s*Author:\s(.+)/i,(e,[t])=>{const n=t.split("<"),r=n.pop();r&&r.includes("@")&&(e.author={email:r.substr(0,r.length-1),name:n.join("<").trim()})}),new ue(/(\d+)[^,]*(?:,\s*(\d+)[^,]*)(?:,\s*(\d+))/g,(e,[t,n,r])=>{e.summary.changes=parseInt(t,10)||0,e.summary.insertions=parseInt(n,10)||0,e.summary.deletions=parseInt(r,10)||0}),new ue(/^(\d+)[^,]*(?:,\s*(\d+)[^(]+\(([+-]))?/,(e,[t,n,r])=>{e.summary.changes=parseInt(t,10)||0;const o=parseInt(n,10)||0;"-"===r?e.summary.deletions=o:"+"===r&&(e.summary.insertions=o)})]}});var Rn,Fn,Gn,Dn,Un=u({"src/lib/tasks/commit.ts"(){An(),Ge(),rt()}}),In=u({"src/lib/tasks/first-commit.ts"(){Ge(),rt()}}),Ln=u({"src/lib/tasks/hash-object.ts"(){rt()}}),$n=u({"src/lib/responses/InitSummary.ts"(){Rn=class{constructor(e,t,n,r){this.bare=e,this.path=t,this.existing=n,this.gitDir=r}},Fn=/^Init.+ repository in (.+)$/,Gn=/^Rein.+ in (.+)$/}});var Mn,jn=u({"src/lib/tasks/init.ts"(){$n(),Dn="--bare"}});function Bn(e){for(let t=0;t<e.length;t++){const n=Mn.exec(e[t]);if(n)return`--${n[1]}`}return""}function zn(e){return Mn.test(e)}var qn,Nn,Hn,Vn,Wn,Kn,Jn=u({"src/lib/args/log-format.ts"(){Mn=/^--(stat|numstat|name-only|name-status)(=|$)/}}),Yn=u({"src/lib/responses/DiffSummary.ts"(){qn=class{constructor(){this.changed=0,this.deletions=0,this.insertions=0,this.files=[]}}}});function Zn(e=""){const t=Kn[e];return e=>Ce(new qn,t,e,!1)}var Qn,Xn,er,tr,nr=u({"src/lib/parsers/parse-diff-summary.ts"(){Jn(),Yn(),kt(),Ge(),Nn=[new ue(/^(.+)\s+\|\s+(\d+)(\s+[+\-]+)?$/,(e,[t,n,r=""])=>{e.files.push({file:t.trim(),changes:K(n),insertions:r.replace(/[^+]/g,"").length,deletions:r.replace(/[^-]/g,"").length,binary:!1})}),new ue(/^(.+) \|\s+Bin ([0-9.]+) -> ([0-9.]+) ([a-z]+)/,(e,[t,n,r])=>{e.files.push({file:t.trim(),before:K(n),after:K(r),binary:!0})}),new ue(/(\d+) files? changed\s*((?:, \d+ [^,]+){0,2})/,(e,[t,n])=>{const r=/(\d+) i/.exec(n),o=/(\d+) d/.exec(n);e.changed=K(t),e.insertions=K(r?.[1]),e.deletions=K(o?.[1])})],Hn=[new ue(/(\d+)\t(\d+)\t(.+)$/,(e,[t,n,r])=>{const o=K(t),s=K(n);e.changed++,e.insertions+=o,e.deletions+=s,e.files.push({file:r,changes:o+s,insertions:o,deletions:s,binary:!1})}),new ue(/-\t-\t(.+)$/,(e,[t])=>{e.changed++,e.files.push({file:t,after:0,before:0,binary:!0})})],Vn=[new ue(/(.+)$/,(e,[t])=>{e.changed++,e.files.push({file:t,changes:0,insertions:0,deletions:0,binary:!1})})],Wn=[new ue(/([ACDMRTUXB])([0-9]{0,3})\t(.[^\t]*)(\t(.[^\t]*))?$/,(e,[t,n,r,o,s])=>{var i;e.changed++,e.files.push({file:s??r,changes:0,insertions:0,deletions:0,binary:!1,status:X((i=t,bt.has(i)&&t)),from:X(!!s&&r!==s&&r),similarity:K(n)})})],Kn={"":Nn,"--stat":Nn,"--numstat":Hn,"--name-status":Wn,"--name-only":Vn}}});function rr(e=er,t=tr,n=""){const r=Zn(n);return function(n){const o=M(n.trim(),!1,Qn).map(function(n){const o=n.split(Xn),s=function(e,t){return t.reduce((t,n,r)=>(t[n]=e[r]||"",t),Object.create({diff:null}))}(o[0].split(e),t);return o.length>1&&o[1].trim()&&(s.diff=r(o[1])),s});return{all:o,latest:o.length&&o[0]||null,total:o.length}}}var or=u({"src/lib/parsers/parse-list-log-summary.ts"(){Ge(),nr(),Jn(),Qn="òòòòòò ",Xn=" òò",er=" ò ",tr=["hash","date","message","refs","author_name","author_email"]}}),sr={};function ir(e){let t=Bn(e);const n=["diff"];return""===t&&(t="--stat",n.push("--stat=4096")),n.push(...e),ar(n)||{commands:n,format:"utf-8",parser:Zn(t)}}function ar(e){const t=e.filter(zn);return t.length>1?We(`Summary flags are mutually exclusive - pick one of ${t.join(",")}`):t.length&&e.includes("-z")?We(`Summary flag ${t} parsing is not compatible with null termination option '-z'`):void 0}g(sr,{diffSummaryTask:()=>ir,validateLogFormatConfig:()=>ar});var cr,lr=u({"src/lib/tasks/diff.ts"(){Jn(),nr(),rt()}});function dr(e={},t=[]){const n=ie(e.splitter,te,er),r=ce(e.format)?e.format:{hash:"%H",date:!1===e.strictDate?"%ai":"%aI",message:"%s",refs:"%D",body:e.multiLine?"%B":"%b",author_name:!1!==e.mailMap?"%aN":"%an",author_email:!1!==e.mailMap?"%aE":"%ae"},[o,s]=function(e,t){const n=[],r=[];return Object.keys(e).forEach(t=>{n.push(t),r.push(String(e[t]))}),[n,r.join(t)]}(r,n),i=[],a=[`--pretty=format:${Qn}${s}${Xn}`,...t],c=e.n||e["max-count"]||e.maxCount;if(c&&a.push(`--max-count=${c}`),e.from||e.to){const t=!1!==e.symmetric?"...":"..";i.push(`${e.from||""}${t}${e.to||""}`)}var l;return te(e.file)&&a.push("--follow",v(e.file)),Te((l=e,Object.keys(l).reduce((e,t)=>(t in cr||(e[t]=l[t]),e),{})),a),{fields:o,splitter:n,commands:[...a,...i]}}var pr,ur,gr,mr,hr,fr=u({"src/lib/tasks/log.ts"(){Jn(),O(),or(),Ge(),rt(),lr(),cr=(e=>(e[e["--pretty"]=0]="--pretty",e[e["max-count"]=1]="max-count",e[e.maxCount=2]="maxCount",e[e.n=3]="n",e[e.file=4]="file",e[e.format=5]="format",e[e.from=6]="from",e[e.to=7]="to",e[e.splitter=8]="splitter",e[e.symmetric=9]="symmetric",e[e.mailMap=10]="mailMap",e[e.multiLine=11]="multiLine",e[e.strictDate=12]="strictDate",e))(cr||{})}}),br=u({"src/lib/responses/MergeSummary.ts"(){pr=class{constructor(e,t=null,n){this.reason=e,this.file=t,this.meta=n}toString(){return`${this.file}:${this.reason}`}},ur=class{constructor(){this.conflicts=[],this.merges=[],this.result="success"}get failed(){return this.conflicts.length>0}get reason(){return this.result}toString(){return this.conflicts.length?`CONFLICTS: ${this.conflicts.join(", ")}`:"OK"}}}}),vr=u({"src/lib/responses/PullSummary.ts"(){gr=class{constructor(){this.remoteMessages={all:[]},this.created=[],this.deleted=[],this.files=[],this.deletions={},this.insertions={},this.summary={changes:0,deletions:0,insertions:0}}},mr=class{constructor(){this.remote="",this.hash={local:"",remote:""},this.branch={local:"",remote:""},this.message=""}toString(){return this.message}}}});function yr(e){return e.objects=e.objects||{compressing:0,counting:0,enumerating:0,packReused:0,reused:{count:0,delta:0},total:{count:0,delta:0}}}function wr(e){const t=/^\s*(\d+)/.exec(e),n=/delta (\d+)/i.exec(e);return{count:K(t&&t[1]||"0"),delta:K(n&&n[1]||"0")}}var Tr,Er,kr=u({"src/lib/parsers/parse-remote-objects.ts"(){Ge(),hr=[new ge(/^remote:\s*(enumerating|counting|compressing) objects: (\d+),/i,(e,[t,n])=>{const r=t.toLowerCase(),o=yr(e.remoteMessages);Object.assign(o,{[r]:K(n)})}),new ge(/^remote:\s*(enumerating|counting|compressing) objects: \d+% \(\d+\/(\d+)\),/i,(e,[t,n])=>{const r=t.toLowerCase(),o=yr(e.remoteMessages);Object.assign(o,{[r]:K(n)})}),new ge(/total ([^,]+), reused ([^,]+), pack-reused (\d+)/i,(e,[t,n,r])=>{const o=yr(e.remoteMessages);o.total=wr(t),o.reused=wr(n),o.packReused=K(r)})]}});function xr(e,t){return Ce({remoteMessages:new Er},Tr,t)}var _r,Sr,Cr,Pr,Or,Ar,Rr,Fr,Gr,Dr=u({"src/lib/parsers/parse-remote-messages.ts"(){Ge(),kr(),Tr=[new ge(/^remote:\s*(.+)$/,(e,[t])=>(e.remoteMessages.all.push(t.trim()),!1)),...hr,new ge([/create a (?:pull|merge) request/i,/\s(https?:\/\/\S+)$/],(e,[t])=>{e.remoteMessages.pullRequestUrl=t}),new ge([/found (\d+) vulnerabilities.+\(([^)]+)\)/i,/\s(https?:\/\/\S+)$/],(e,[t,n,r])=>{e.remoteMessages.vulnerabilities={count:K(t),summary:n,url:r}})],Er=class{constructor(){this.all=[]}}}}),Ur=u({"src/lib/parsers/parse-pull.ts"(){vr(),Ge(),Dr(),_r=/(\d+)\D+((\d+)\D+\(\+\))?(\D+(\d+)\D+\(-\))?/,Sr=/^(create|delete) mode \d+ (.+)/,Cr=[new ue(/^\s*(.+?)\s+\|\s+\d+\s*(\+*)(-*)/,(e,[t,n,r])=>{e.files.push(t),n&&(e.insertions[t]=n.length),r&&(e.deletions[t]=r.length)}),new ue(_r,(e,[t,,n,,r])=>(void 0!==n||void 0!==r)&&(e.summary.changes=+t||0,e.summary.insertions=+n||0,e.summary.deletions=+r||0,!0)),new ue(Sr,(e,[t,n])=>{z(e.files,n),z("create"===t?e.created:e.deleted,n)})],Pr=[new ue(/^from\s(.+)$/i,(e,[t])=>{e.remote=t}),new ue(/^fatal:\s(.+)$/,(e,[t])=>{e.message=t}),new ue(/([a-z0-9]+)\.\.([a-z0-9]+)\s+(\S+)\s+->\s+(\S+)$/,(e,[t,n,r,o])=>{e.branch.local=r,e.hash.local=t,e.branch.remote=o,e.hash.remote=n})],Or=(e,t)=>Ce(new gr,Cr,[e,t]),Ar=(e,t)=>Object.assign(new gr,Or(e,t),xr(0,t))}}),Ir=u({"src/lib/parsers/parse-merge.ts"(){br(),Ge(),Ur(),Rr=[new ue(/^Auto-merging\s+(.+)$/,(e,[t])=>{e.merges.push(t)}),new ue(/^CONFLICT\s+\((.+)\): Merge conflict in (.+)$/,(e,[t,n])=>{e.conflicts.push(new pr(t,n))}),new ue(/^CONFLICT\s+\((.+\/delete)\): (.+) deleted in (.+) and/,(e,[t,n,r])=>{e.conflicts.push(new pr(t,n,{deleteRef:r}))}),new ue(/^CONFLICT\s+\((.+)\):/,(e,[t])=>{e.conflicts.push(new pr(t,null))}),new ue(/^Automatic merge failed;\s+(.+)$/,(e,[t])=>{e.result=t})],Fr=(e,t)=>Object.assign(Gr(e,t),Ar(e,t)),Gr=e=>Ce(new ur,Rr,e)}});function Lr(e){return e.length?{commands:["merge",...e],format:"utf-8",parser(e,t){const n=Fr(e,t);if(n.failed)throw new o(n);return n}}:We("Git.merge requires at least one option")}var $r,Mr,jr,Br=u({"src/lib/tasks/merge.ts"(){b(),Ir(),rt()}}),zr=u({"src/lib/parsers/parse-push.ts"(){Ge(),Dr(),$r=[new ue(/^Pushing to (.+)$/,(e,[t])=>{e.repo=t}),new ue(/^updating local tracking ref '(.+)'/,(e,[t])=>{e.ref={...e.ref||{},local:t}}),new ue(/^[=*-]\s+([^:]+):(\S+)\s+\[(.+)]$/,(e,[t,n,r])=>{e.pushed.push(function(e,t,n){const r=n.includes("deleted"),o=n.includes("tag")||/^refs\/tags/.test(e),s=!n.includes("new");return{deleted:r,tag:o,branch:!o,new:!s,alreadyUpdated:s,local:e,remote:t}}(t,n,r))}),new ue(/^Branch '([^']+)' set up to track remote branch '([^']+)' from '([^']+)'/,(e,[t,n,r])=>{e.branch={...e.branch||{},local:t,remote:n,remoteName:r}}),new ue(/^([^:]+):(\S+)\s+([a-z0-9]+)\.\.([a-z0-9]+)$/,(e,[t,n,r,o])=>{e.update={head:{local:t,remote:n},hash:{from:r,to:o}}})],Mr=(e,t)=>({...jr(e,t),...xr(0,t)}),jr=(e,t)=>Ce({pushed:[]},$r,[e,t])}}),qr={};function Nr(e={},t){return z(t,"--tags"),Hr(e,t)}function Hr(e={},t){const n=["push",...t];return e.branch&&n.splice(1,0,e.branch),e.remote&&n.splice(1,0,e.remote),N(n,"-v"),z(n,"--verbose"),z(n,"--porcelain"),{commands:n,format:"utf-8",parser:Mr}}g(qr,{pushTagsTask:()=>Nr,pushTask:()=>Hr});var Vr,Wr,Kr,Jr,Yr,Zr=u({"src/lib/tasks/push.ts"(){zr(),Ge()}}),Qr=u({"src/lib/tasks/show.ts"(){Ge(),rt()}}),Xr=u({"src/lib/responses/FileStatusSummary.ts"(){Vr=/^(.+)\0(.+)$/,Wr=class{constructor(e,t,n){if(this.path=e,this.index=t,this.working_dir=n,"R"===t||"R"===n){const t=Vr.exec(e)||[null,e,e];this.from=t[2]||"",this.path=t[1]||""}}}}});function eo(e){const[t,n]=e.split(S);return{from:n||t,to:t}}function to(e,t,n){return[`${e}${t}`,n]}function no(e,...t){return t.map(t=>to(e,t,(e,t)=>z(e.conflicted,t)))}function ro(e,t){const n=t.trim();switch(" "){case n.charAt(2):return r(n.charAt(0),n.charAt(1),n.substr(3));case n.charAt(1):return r(" ",n.charAt(0),n.substr(2));default:return}function r(t,n,r){const o=`${t}${n}`,s=Jr.get(o);s&&s(e,r),"##"!==o&&"!!"!==o&&e.files.push(new Wr(r,t,n))}}var oo,so,io,ao=u({"src/lib/responses/StatusSummary.ts"(){Ge(),Xr(),Kr=class{constructor(){this.not_added=[],this.conflicted=[],this.created=[],this.deleted=[],this.ignored=void 0,this.modified=[],this.renamed=[],this.files=[],this.staged=[],this.ahead=0,this.behind=0,this.current=null,this.tracking=null,this.detached=!1,this.isClean=()=>!this.files.length}},Jr=new Map([to(" ","A",(e,t)=>z(e.created,t)),to(" ","D",(e,t)=>z(e.deleted,t)),to(" ","M",(e,t)=>z(e.modified,t)),to("A"," ",(e,t)=>z(e.created,t)&&z(e.staged,t)),to("A","M",(e,t)=>z(e.created,t)&&z(e.staged,t)&&z(e.modified,t)),to("D"," ",(e,t)=>z(e.deleted,t)&&z(e.staged,t)),to("M"," ",(e,t)=>z(e.modified,t)&&z(e.staged,t)),to("M","M",(e,t)=>z(e.modified,t)&&z(e.staged,t)),to("R"," ",(e,t)=>{z(e.renamed,eo(t))}),to("R","M",(e,t)=>{const n=eo(t);z(e.renamed,n),z(e.modified,n.to)}),to("!","!",(e,t)=>{z(e.ignored=e.ignored||[],t)}),to("?","?",(e,t)=>z(e.not_added,t)),...no("A","A","U"),...no("D","D","U"),...no("U","A","D","U"),["##",(e,t)=>{let n;n=/ahead (\d+)/.exec(t),e.ahead=n&&+n[1]||0,n=/behind (\d+)/.exec(t),e.behind=n&&+n[1]||0,n=/^(.+?(?=(?:\.{3}|\s|$)))/.exec(t),e.current=n&&n[1],n=/\.{3}(\S*)/.exec(t),e.tracking=n&&n[1],n=/\son\s([\S]+)$/.exec(t),e.current=n&&n[1]||e.current,e.detached=/\(no branch\)/.test(t)}]]),Yr=function(e){const t=e.split(S),n=new Kr;for(let e=0,r=t.length;e<r;){let r=t[e++].trim();r&&("R"===r.charAt(0)&&(r+=S+(t[e++]||"")),ro(n,r))}return n}}}),co=u({"src/lib/tasks/status.ts"(){ao(),oo=["--null","-z"]}});function lo(e=0,t=0,n=0,r="",o=!0){return Object.defineProperty({major:e,minor:t,patch:n,agent:r,installed:o},"toString",{value(){return`${this.major}.${this.minor}.${this.patch}`},configurable:!1,enumerable:!1})}function po(e){return e===so?lo(0,0,0,"",!1):Ce(lo(0,0,0,e),io,e)}var uo,go=u({"src/lib/tasks/version.ts"(){Ge(),so="installed=false",io=[new ue(/version (\d+)\.(\d+)\.(\d+)(?:\s*\((.+)\))?/,(e,[t,n,r,o=""])=>{Object.assign(e,lo(K(t),K(n),K(r),o))}),new ue(/version (\d+)\.(\d+)\.(\D+)(.+)?$/,(e,[t,n,r,o=""])=>{Object.assign(e,lo(K(t),K(n),r,o))})]}}),mo={};g(mo,{SimpleGitApi:()=>uo});var ho,fo,bo,vo=u({"src/lib/simple-git-api.ts"(){Tn(),kn(),Cn(),Pn(),Un(),Et(),In(),Ct(),Ln(),jn(),fr(),Br(),Zr(),Qr(),co(),rt(),go(),Ge(),uo=class{constructor(e){this._executor=e}_runTask(e,t){const n=this._executor.chain(),r=n.push(e);return t&&function(e,t,n=C){t.then(e=>{n(null,e)},t=>{t?.task===e&&n(t instanceof o?function(e){let t=e=>{console.warn(`simple-git deprecation notice: accessing GitResponseError.${e} should be GitResponseError.git.${e}, this will no longer be available in version 3`),t=C};return Object.create(e,Object.getOwnPropertyNames(e.git).reduce(function(n,r){return r in e||(n[r]={enumerable:!1,configurable:!1,get:()=>(t(r),e.git[r])}),n},{}))}(t):t,void 0)})}(e,r,t),Object.create(this,{then:{value:r.then.bind(r)},catch:{value:r.catch.bind(r)},_executor:{value:n}})}add(e){return this._runTask(Ke(["add",...H(e)]),xe(arguments))}cwd(e){const t=xe(arguments);return"string"==typeof e?this._runTask(En(e,this._executor),t):"string"==typeof e?.path?this._runTask(En(e.path,e.root&&this._executor||void 0),t):this._runTask(We("Git.cwd: workingDirectory must be supplied as a string"),t)}hashObject(e,t){return this._runTask(function(e,t){const n=["hash-object",e];return t&&n.push("-w"),Ke(n,!0)}(e,!0===t),xe(arguments))}init(e){return this._runTask(function(e=!1,t,n){const r=["init",...n];return e&&!r.includes(Dn)&&r.splice(1,0,Dn),{commands:r,format:"utf-8",parser:e=>function(e,t,n){const r=String(n).trim();let o;if(o=Fn.exec(r))return new Rn(e,t,!1,o[1]);if(o=Gn.exec(r))return new Rn(e,t,!0,o[1]);let s="";const i=r.split(" ");for(;i.length;)if("in"===i.shift()){s=i.join(" ");break}return new Rn(e,t,/^re/i.test(r),s)}(r.includes("--bare"),t,e)}}(!0===e,this._executor.cwd,Ee(arguments)),xe(arguments))}merge(){return this._runTask(Lr(Ee(arguments)),xe(arguments))}mergeFromTo(e,t){return te(e)&&te(t)?this._runTask(Lr([e,t,...Ee(arguments)]),xe(arguments,!1)):this._runTask(We("Git.mergeFromTo requires that the 'remote' and 'branch' arguments are supplied as strings"))}outputHandler(e){return this._executor.outputHandler=e,this}push(){const e=Hr({remote:ie(arguments[0],te),branch:ie(arguments[1],te)},Ee(arguments));return this._runTask(e,xe(arguments))}stash(){return this._runTask(Ke(["stash",...Ee(arguments)]),xe(arguments))}status(){return this._runTask({format:"utf-8",commands:["status","--porcelain","-b","-u","--null",...Ee(arguments).filter(e=>!oo.includes(e))],parser:e=>Yr(e)},xe(arguments))}},Object.assign(uo.prototype,{checkout(){return this._runTask(xn(Ee(arguments,1)),xe(arguments))},checkoutBranch(e,t){return this._runTask(xn(["-b",e,t,...Ee(arguments)]),xe(arguments))},checkoutLocalBranch(e){return this._runTask(xn(["-b",e,...Ee(arguments)]),xe(arguments))}},{commit(e,...t){const n=xe(arguments),r=function(e){return!re(e)&&We("git.commit: requires the commit message to be supplied as a string/string[]")}(e)||function(e,t,n){return{commands:["-c","core.abbrev=40","commit",...J(e,"-m"),...t,...n],format:"utf-8",parser:On}}(H(e),H(ie(t[0],re,[])),[...ie(t[1],ee,[]),...Ee(arguments,0,!0)]);return this._runTask(r,n)}},{addConfig(e,t,...n){return this._runTask(function(e,t,n,r){const o=["config",`--${r}`];return n&&o.push("--add"),o.push(e,t),{commands:o,format:"utf-8",parser:e=>e}}(e,t,!0===n[0],ht(n[1],"local")),xe(arguments))},getConfig(e,t){return this._runTask(function(e,t){const n=["config","--null","--show-origin","--get-all",e];return t&&n.splice(1,0,`--${t}`),{commands:n,format:"utf-8",parser:t=>function(e,t){let n=null;const r=[],o=new Map;for(const s of ut(e,t))s.key===t&&(r.push(n=s.value),o.has(s.file)||o.set(s.file,[]),o.get(s.file).push(n));return{key:t,paths:Array.from(o.keys()),scopes:o,value:n,values:r}}(t,e)}}(e,ht(t,void 0)),xe(arguments))},listConfig(...e){return this._runTask(function(e){const t=["config","--list","--show-origin","--null"];return e&&t.push(`--${e}`),{commands:t,format:"utf-8",parser:e=>function(e){const t=new lt;for(const n of ut(e))t.addValue(n.file,String(n.key),n.value);return t}(e)}}(ht(e[0],void 0)),xe(arguments))}},{countObjects(){return this._runTask({commands:["count-objects","--verbose"],format:"utf-8",parser:e=>Ce({count:0,garbage:0,inPack:0,packs:0,prunePackable:0,size:0,sizeGarbage:0,sizePack:0},[_n],e)})}},{firstCommit(){return this._runTask(Ke(["rev-list","--max-parents=0","HEAD"],!0),xe(arguments))}},{grep(e){const t=xe(arguments),n=Ee(arguments);for(const e of vt)if(n.includes(e))return this._runTask(We(`git.grep: use of "${e}" is not supported.`),t);"string"==typeof e&&(e=xt().param(e));const r=["grep","--null","-n","--full-name",...n,...e];return this._runTask({commands:r,format:"utf-8",parser:e=>function(e){const t=new Set,n={};return j(e,e=>{const[r,o,s]=e.split(S);t.add(r),(n[r]=n[r]||[]).push({line:K(o),path:r,preview:s})}),{paths:t,results:n}}(e)},t)}},{log(...e){const t=xe(arguments),n=dr(ke(arguments),ie(arguments[0],ee)),r=function(e,t){return te(e)&&te(t)&&We("git.log(string, string) should be replaced with git.log({ from: string, to: string })")}(...e)||ar(n.commands)||function(e){return function(e,t,n){const r=rr(e,t,Bn(n));return{commands:["log",...n],format:"utf-8",parser:r}}(e.splitter,e.fields,e.commands)}(n);return this._runTask(r,t)}},{showBuffer(){const e=["show",...Ee(arguments,1)];return e.includes("--binary")||e.splice(1,0,"--binary"),this._runTask(Je(e),xe(arguments))},show(){const e=["show",...Ee(arguments,1)];return this._runTask(Ke(e),xe(arguments))}},{version(){return this._runTask({commands:["--version"],format:"utf-8",parser:po,onError(e,t,n,r){if(-2===e.exitCode)return n(Buffer.from(so));r(t)}})}})}}),yo={};g(yo,{Scheduler:()=>bo});var wo=u({"src/lib/runners/scheduler.ts"(){Ge(),ho=n(100),gn(),fo=(()=>{let e=0;return()=>{e++;const{promise:t,done:n}=(0,ho.createDeferred)();return{promise:t,done:n,id:e}}})(),bo=class{constructor(e=2){this.concurrency=e,this.logger=ln("","scheduler"),this.pending=[],this.running=[],this.logger("Constructed, concurrency=%s",e)}schedule(){if(!this.pending.length||this.running.length>=this.concurrency)return void this.logger("Schedule attempt ignored, pending=%s running=%s concurrency=%s",this.pending.length,this.running.length,this.concurrency);const e=z(this.running,this.pending.shift());this.logger("Attempting id=%s",e.id),e.done(()=>{this.logger("Completing id=",e.id),N(this.running,e),this.schedule()})}next(){const{promise:e,id:t}=z(this.pending,fo());return this.logger("Scheduling id=%s",t),this.schedule(),e}}}}),To={};function Eo(e,t){return Ke(["apply",...t,...e])}g(To,{applyPatchTask:()=>Eo});var ko,xo,_o,So,Co=u({"src/lib/tasks/apply-patch.ts"(){rt()}}),Po=u({"src/lib/responses/BranchDeleteSummary.ts"(){ko=class{constructor(){this.all=[],this.branches={},this.errors=[]}get success(){return!this.errors.length}}}});function Oo(e,t){return 1===t&&xo.test(e)}var Ao,Ro,Fo=u({"src/lib/parsers/parse-branch-delete.ts"(){Po(),Ge(),xo=/^error[^']+'([^']+)'/m,_o=[new ue(/(\S+)\s+\(\S+\s([^)]+)\)/,(e,[t,n])=>{const r=function(e,t){return{branch:e,hash:t,success:!0}}(t,n);e.all.push(r),e.branches[t]=r}),new ue(xo,(e,[t])=>{const n=function(e){return{branch:e,hash:null,success:!1}}(t);e.errors.push(n),e.all.push(n),e.branches[t]=n})],So=(e,t)=>Ce(new ko,_o,[e,t])}}),Go=u({"src/lib/responses/BranchSummary.ts"(){Ao=class{constructor(){this.all=[],this.branches={},this.current="",this.detached=!1}push(e,t,n,r,o){"*"===e&&(this.detached=t,this.current=n),this.all.push(n),this.branches[n]={current:"*"===e,linkedWorkTree:"+"===e,name:n,commit:r,label:o}}}}});function Do(e){return e?e.charAt(0):""}function Uo(e){return Ce(new Ao,Ro,e)}var Io=u({"src/lib/parsers/parse-branch.ts"(){Go(),Ge(),Ro=[new ue(/^([*+]\s)?\((?:HEAD )?detached (?:from|at) (\S+)\)\s+([a-z0-9]+)\s(.*)$/,(e,[t,n,r,o])=>{e.push(Do(t),!0,n,r,o)}),new ue(/^([*+]\s)?(\S+)\s+([a-z0-9]+)\s?(.*)$/s,(e,[t,n,r,o])=>{e.push(Do(t),!1,n,r,o)})]}}),Lo={};function $o(e){const t=["-d","-D","--delete"];return e.some(e=>t.includes(e))}function Mo(e){const t=$o(e),n=["branch",...e];return 1===n.length&&n.push("-a"),n.includes("-v")||n.splice(1,0,"-v"),{format:"utf-8",commands:n,parser:(e,n)=>t?So(e,n).all[0]:Uo(e)}}function jo(){return{format:"utf-8",commands:["branch","-v"],parser:Uo}}function Bo(e,t=!1){return{format:"utf-8",commands:["branch","-v",t?"-D":"-d",...e],parser:(e,t)=>So(e,t),onError({exitCode:e,stdOut:t},n,r,o){if(!Oo(String(n),e))return o(n);r(t)}}}function zo(e,t=!1){const n={format:"utf-8",commands:["branch","-v",t?"-D":"-d",e],parser:(t,n)=>So(t,n).branches[e],onError({exitCode:e,stdErr:t,stdOut:r},s,i,a){if(!Oo(String(s),e))return a(s);throw new o(n.parser(Y(r),Y(t)),String(s))}};return n}g(Lo,{branchLocalTask:()=>jo,branchTask:()=>Mo,containsDeleteBranchCommand:()=>$o,deleteBranchTask:()=>zo,deleteBranchesTask:()=>Bo});var qo,No=u({"src/lib/tasks/branch.ts"(){b(),Fo(),Io(),Ge()}}),Ho=u({"src/lib/responses/CheckIgnore.ts"(){qo=e=>e.split(/\n/g).map(e=>e.trim()).filter(e=>!!e)}}),Vo={};function Wo(e){return{commands:["check-ignore",...e],format:"utf-8",parser:qo}}g(Vo,{checkIgnoreTask:()=>Wo});var Ko=u({"src/lib/tasks/check-ignore.ts"(){Ho()}}),Jo={};function Yo(e){return/^--upload-pack(=|$)/.test(e)}function Zo(e,t,n){const r=["clone",...n];return te(e)&&r.push(e),te(t)&&r.push(t),r.find(Yo)?We("git.fetch: potential exploit argument blocked."):Ke(r)}function Qo(e,t,n){return z(n,"--mirror"),Zo(e,t,n)}g(Jo,{cloneMirrorTask:()=>Qo,cloneTask:()=>Zo});var Xo,es=u({"src/lib/tasks/clone.ts"(){rt(),Ge()}});function ts(e,t){return Ce({raw:e,remote:null,branches:[],tags:[],updated:[],deleted:[]},Xo,[e,t])}var ns=u({"src/lib/parsers/parse-fetch.ts"(){Ge(),Xo=[new ue(/From (.+)$/,(e,[t])=>{e.remote=t}),new ue(/\* \[new branch]\s+(\S+)\s*-> (.+)$/,(e,[t,n])=>{e.branches.push({name:t,tracking:n})}),new ue(/\* \[new tag]\s+(\S+)\s*-> (.+)$/,(e,[t,n])=>{e.tags.push({name:t,tracking:n})}),new ue(/- \[deleted]\s+\S+\s*-> (.+)$/,(e,[t])=>{e.deleted.push({tracking:t})}),new ue(/\s*([^.]+)\.\.(\S+)\s+(\S+)\s*-> (.+)$/,(e,[t,n,r,o])=>{e.updated.push({name:r,tracking:o,to:n,from:t})})]}}),rs={};function os(e){return/^--upload-pack(=|$)/.test(e)}function ss(e,t,n){const r=["fetch",...n];return e&&t&&r.push(e,t),r.find(os)?We("git.fetch: potential exploit argument blocked."):{commands:r,format:"utf-8",parser:ts}}g(rs,{fetchTask:()=>ss});var is,as=u({"src/lib/tasks/fetch.ts"(){ns(),rt()}});function cs(e){return Ce({moves:[]},is,e)}var ls=u({"src/lib/parsers/parse-move.ts"(){Ge(),is=[new ue(/^Renaming (.+) to (.+)$/,(e,[t,n])=>{e.moves.push({from:t,to:n})})]}}),ds={};function ps(e,t){return{commands:["mv","-v",...H(e),t],format:"utf-8",parser:cs}}g(ds,{moveTask:()=>ps});var us=u({"src/lib/tasks/move.ts"(){ls(),Ge()}}),gs={};function ms(e,t,n){const r=["pull",...n];return e&&t&&r.splice(1,0,e,t),{commands:r,format:"utf-8",parser:(e,t)=>Ar(e,t),onError(e,t,n,r){const s=function(e,t){const n=Ce(new mr,Pr,[e,t]);return n.message&&n}(Y(e.stdOut),Y(e.stdErr));if(s)return r(new o(s));r(t)}}}g(gs,{pullTask:()=>ms});var hs=u({"src/lib/tasks/pull.ts"(){b(),Ur(),Ge()}});function fs(e){const t={};return vs(e,([e])=>t[e]={name:e}),Object.values(t)}function bs(e){const t={};return vs(e,([e,n,r])=>{t.hasOwnProperty(e)||(t[e]={name:e,refs:{fetch:"",push:""}}),r&&n&&(t[e].refs[r.replace(/[^a-z]/g,"")]=n)}),Object.values(t)}function vs(e,t){j(e,e=>t(e.split(/\s+/)))}var ys=u({"src/lib/responses/GetRemoteSummary.ts"(){Ge()}}),ws={};function Ts(e,t,n){return Ke(["remote","add",...n,e,t])}function Es(e){const t=["remote"];return e&&t.push("-v"),{commands:t,format:"utf-8",parser:e?bs:fs}}function ks(e){const t=[...e];return"ls-remote"!==t[0]&&t.unshift("ls-remote"),Ke(t)}function xs(e){const t=[...e];return"remote"!==t[0]&&t.unshift("remote"),Ke(t)}function _s(e){return Ke(["remote","remove",e])}g(ws,{addRemoteTask:()=>Ts,getRemotesTask:()=>Es,listRemotesTask:()=>ks,remoteTask:()=>xs,removeRemoteTask:()=>_s});var Ss=u({"src/lib/tasks/remote.ts"(){ys(),rt()}}),Cs={};function Ps(e={},t){const n=dr(e),r=["stash","list",...n.commands,...t],o=rr(n.splitter,n.fields,Bn(r));return ar(r)||{commands:r,format:"utf-8",parser:o}}g(Cs,{stashListTask:()=>Ps});var Os=u({"src/lib/tasks/stash-list.ts"(){Jn(),or(),lr(),fr()}}),As={};function Rs(e,t){return Gs(["add",e,t])}function Fs(e){return Gs(["init",...e])}function Gs(e){const t=[...e];return"submodule"!==t[0]&&t.unshift("submodule"),Ke(t)}function Ds(e){return Gs(["update",...e])}g(As,{addSubModuleTask:()=>Rs,initSubModuleTask:()=>Fs,subModuleTask:()=>Gs,updateSubModuleTask:()=>Ds});var Us,Is,Ls=u({"src/lib/tasks/sub-module.ts"(){rt()}});function $s(e,t){return e===t?0:e>t?1:-1}function Ms(e){return e.trim()}function js(e){return"string"==typeof e&&parseInt(e.replace(/^\D+/g,""),10)||0}var Bs=u({"src/lib/responses/TagList.ts"(){Us=class{constructor(e,t){this.all=e,this.latest=t}},Is=function(e,t=!1){const n=e.split("\n").map(Ms).filter(Boolean);t||n.sort(function(e,t){const n=e.split("."),r=t.split(".");if(1===n.length||1===r.length)return function(e,t){const n=isNaN(e);return n!==isNaN(t)?n?1:-1:n?$s(e,t):0}(js(n[0]),js(r[0]));for(let e=0,t=Math.max(n.length,r.length);e<t;e++){const t=$s(js(n[e]),js(r[e]));if(t)return t}return 0});const r=t?n[0]:[...n].reverse().find(e=>e.indexOf(".")>=0);return new Us(n,r)}}}),zs={};function qs(e=[]){const t=e.some(e=>/^--sort=/.test(e));return{format:"utf-8",commands:["tag","-l",...e],parser:e=>Is(e,t)}}function Ns(e){return{format:"utf-8",commands:["tag",e],parser:()=>({name:e})}}function Hs(e,t){return{format:"utf-8",commands:["tag","-a","-m",t,e],parser:()=>({name:e})}}g(zs,{addAnnotatedTagTask:()=>Hs,addTagTask:()=>Ns,tagListTask:()=>qs});var Vs,Ws,Ks,Js=u({"src/lib/tasks/tag.ts"(){Bs()}}),Ys=(Vs={"src/git.js"(e,t){var{GitExecutor:n}=(wn(),h(yn)),{SimpleGitApi:r}=(vo(),h(mo)),{Scheduler:o}=(wo(),h(yo)),{configurationErrorTask:s}=(rt(),h(He)),{asArray:i,filterArray:a,filterPrimitives:c,filterString:l,filterStringOrStringArray:d,filterType:p,getTrailingOptions:u,trailingFunctionArgument:g,trailingOptionsArgument:m}=(Ge(),h(Oe)),{applyPatchTask:f}=(Co(),h(To)),{branchTask:b,branchLocalTask:v,deleteBranchesTask:y,deleteBranchTask:w}=(No(),h(Lo)),{checkIgnoreTask:T}=(Ko(),h(Vo)),{checkIsRepoTask:E}=(qe(),h(De)),{cloneTask:k,cloneMirrorTask:x}=(es(),h(Jo)),{cleanWithOptionsTask:_,isCleanOptionsArray:S}=(dt(),h(ot)),{diffSummaryTask:C}=(lr(),h(sr)),{fetchTask:P}=(as(),h(rs)),{moveTask:O}=(us(),h(ds)),{pullTask:A}=(hs(),h(gs)),{pushTagsTask:R}=(Zr(),h(qr)),{addRemoteTask:F,getRemotesTask:G,listRemotesTask:D,remoteTask:U,removeRemoteTask:I}=(Ss(),h(ws)),{getResetMode:L,resetTask:$}=(Ft(),h(Pt)),{stashListTask:M}=(Os(),h(Cs)),{addSubModuleTask:j,initSubModuleTask:B,subModuleTask:z,updateSubModuleTask:q}=(Ls(),h(As)),{addAnnotatedTagTask:N,addTagTask:H,tagListTask:V}=(Js(),h(zs)),{straightThroughBufferTask:W,straightThroughStringTask:K}=(rt(),h(He));function J(e,t){this._plugins=t,this._executor=new n(e.baseDir,new o(e.maxConcurrentProcesses),t),this._trimmed=e.trimmed}function Y(e,t,n,r){return"string"!=typeof n?s(`git.${e}() requires a string 'repoPath'`):t(n,p(r,l),u(arguments))}(J.prototype=Object.create(r.prototype)).constructor=J,J.prototype.customBinary=function(e){return this._plugins.reconfigure("binary",e),this},J.prototype.env=function(e,t){return 1===arguments.length&&"object"==typeof e?this._executor.env=e:(this._executor.env=this._executor.env||{})[e]=t,this},J.prototype.stashList=function(e){return this._runTask(M(m(arguments)||{},a(e)&&e||[]),g(arguments))},J.prototype.clone=function(){return this._runTask(Y("clone",k,...arguments),g(arguments))},J.prototype.mirror=function(){return this._runTask(Y("mirror",x,...arguments),g(arguments))},J.prototype.mv=function(e,t){return this._runTask(O(e,t),g(arguments))},J.prototype.checkoutLatestTag=function(e){var t=this;return this.pull(function(){t.tags(function(n,r){t.checkout(r.latest,e)})})},J.prototype.pull=function(e,t,n,r){return this._runTask(A(p(e,l),p(t,l),u(arguments)),g(arguments))},J.prototype.fetch=function(e,t){return this._runTask(P(p(e,l),p(t,l),u(arguments)),g(arguments))},J.prototype.silent=function(e){return console.warn("simple-git deprecation notice: git.silent: logging should be configured using the `debug` library / `DEBUG` environment variable, this will be an error in version 3"),this},J.prototype.tags=function(e,t){return this._runTask(V(u(arguments)),g(arguments))},J.prototype.rebase=function(){return this._runTask(K(["rebase",...u(arguments)]),g(arguments))},J.prototype.reset=function(e){return this._runTask($(L(e),u(arguments)),g(arguments))},J.prototype.revert=function(e){const t=g(arguments);return"string"!=typeof e?this._runTask(s("Commit must be a string"),t):this._runTask(K(["revert",...u(arguments,0,!0),e]),t)},J.prototype.addTag=function(e){const t="string"==typeof e?H(e):s("Git.addTag requires a tag name");return this._runTask(t,g(arguments))},J.prototype.addAnnotatedTag=function(e,t){return this._runTask(N(e,t),g(arguments))},J.prototype.deleteLocalBranch=function(e,t,n){return this._runTask(w(e,"boolean"==typeof t&&t),g(arguments))},J.prototype.deleteLocalBranches=function(e,t,n){return this._runTask(y(e,"boolean"==typeof t&&t),g(arguments))},J.prototype.branch=function(e,t){return this._runTask(b(u(arguments)),g(arguments))},J.prototype.branchLocal=function(e){return this._runTask(v(),g(arguments))},J.prototype.raw=function(e){const t=!Array.isArray(e),n=[].slice.call(t?arguments:e,0);for(let e=0;e<n.length&&t;e++)if(!c(n[e])){n.splice(e,n.length-e);break}n.push(...u(arguments,0,!0));var r=g(arguments);return n.length?this._runTask(K(n,this._trimmed),r):this._runTask(s("Raw: must supply one or more command to execute"),r)},J.prototype.submoduleAdd=function(e,t,n){return this._runTask(j(e,t),g(arguments))},J.prototype.submoduleUpdate=function(e,t){return this._runTask(q(u(arguments,!0)),g(arguments))},J.prototype.submoduleInit=function(e,t){return this._runTask(B(u(arguments,!0)),g(arguments))},J.prototype.subModule=function(e,t){return this._runTask(z(u(arguments)),g(arguments))},J.prototype.listRemote=function(){return this._runTask(D(u(arguments)),g(arguments))},J.prototype.addRemote=function(e,t,n){return this._runTask(F(e,t,u(arguments)),g(arguments))},J.prototype.removeRemote=function(e,t){return this._runTask(I(e),g(arguments))},J.prototype.getRemotes=function(e,t){return this._runTask(G(!0===e),g(arguments))},J.prototype.remote=function(e,t){return this._runTask(U(u(arguments)),g(arguments))},J.prototype.tag=function(e,t){const n=u(arguments);return"tag"!==n[0]&&n.unshift("tag"),this._runTask(K(n),g(arguments))},J.prototype.updateServerInfo=function(e){return this._runTask(K(["update-server-info"]),g(arguments))},J.prototype.pushTags=function(e,t){const n=R({remote:p(e,l)},u(arguments));return this._runTask(n,g(arguments))},J.prototype.rm=function(e){return this._runTask(K(["rm","-f",...i(e)]),g(arguments))},J.prototype.rmKeepLocal=function(e){return this._runTask(K(["rm","--cached",...i(e)]),g(arguments))},J.prototype.catFile=function(e,t){return this._catFile("utf-8",arguments)},J.prototype.binaryCatFile=function(){return this._catFile("buffer",arguments)},J.prototype._catFile=function(e,t){var n=g(t),r=["cat-file"],o=t[0];if("string"==typeof o)return this._runTask(s("Git.catFile: options must be supplied as an array of strings"),n);Array.isArray(o)&&r.push.apply(r,o);const i="buffer"===e?W(r):K(r);return this._runTask(i,n)},J.prototype.diff=function(e,t){const n=l(e)?s("git.diff: supplying options as a single string is no longer supported, switch to an array of strings"):K(["diff",...u(arguments)]);return this._runTask(n,g(arguments))},J.prototype.diffSummary=function(){return this._runTask(C(u(arguments,1)),g(arguments))},J.prototype.applyPatch=function(e){const t=d(e)?f(i(e),u([].slice.call(arguments,1))):s("git.applyPatch requires one or more string patches as the first argument");return this._runTask(t,g(arguments))},J.prototype.revparse=function(){const e=["rev-parse",...u(arguments,!0)];return this._runTask(K(e,!0),g(arguments))},J.prototype.clean=function(e,t,n){const r=S(e),o=r&&e.join("")||p(e,l)||"",s=u([].slice.call(arguments,r?1:0));return this._runTask(_(o,s),g(arguments))},J.prototype.exec=function(e){const t={commands:[],format:"utf-8",parser(){"function"==typeof e&&e()}};return this._runTask(t)},J.prototype.clearQueue=function(){return this},J.prototype.checkIgnore=function(e,t){return this._runTask(T(i(p(e,d,[]))),g(arguments))},J.prototype.checkIsRepo=function(e,t){return this._runTask(E(p(e,l)),g(arguments))},t.exports=J}},function(){return Ws||(0,Vs[l(Vs)[0]])((Ws={exports:{}}).exports,Ws),Ws.exports}),Zs={};function Qs(e){return Object.defineProperties(e,{__esModule:{value:!0},default:{value:e}})}function Xs(e){return Object.assign(e.bind(null),Gt)}function ei(e,t){const n=new Zt,r=ye(e&&("string"==typeof e?{baseDir:e}:e)||{},t);if(!B(r.baseDir))throw new T(r,"Cannot use simple-git on a directory that does not exist");return Array.isArray(r.config)&&n.add(function(e){const t=J(e,"-c");return{type:"spawn.args",action:e=>[...t,...e]}}(r.config)),n.add(function({allowUnsafeProtocolOverride:e=!1,allowUnsafePack:t=!1}={}){return{type:"spawn.args",action:(n,r)=>(n.forEach((o,s)=>{const i=s<n.length?n[s+1]:"";e||function(e,t){if(function(e){return"string"==typeof e&&"-c"===e.trim().toLowerCase()}(e)&&/^\s*protocol(.[a-z]+)?.allow/.test(t))throw new E(void 0,"unsafe","Configuring protocol.allow is not permitted without enabling allowUnsafeExtProtocol")}(o,i),t||function(e,t){if(/^\s*--(upload|receive)-pack/.test(e))throw new E(void 0,"unsafe","Use of --upload-pack or --receive-pack is not permitted without enabling allowUnsafePack");if("clone"===t&&/^\s*-u\b/.test(e))throw new E(void 0,"unsafe","Use of clone with option -u is not permitted without enabling allowUnsafePack");if("push"===t&&/^\s*--exec\b/.test(e))throw new E(void 0,"unsafe","Use of push with option --exec is not permitted without enabling allowUnsafePack")}(o,r.method)}),n)}}(r.unsafe)),n.add({type:"spawn.args",action(e){const t=[];let n;function r(e){(n=n||[]).push(...e)}for(let n=0;n<e.length;n++){const o=e[n];if(y(o))r(w(o));else{if("--"===o){r(e.slice(n+1).flatMap(e=>y(e)&&w(e)||e));break}t.push(o)}}return n?[...t,"--",...n.map(String)]:t}}),n.add(function({onClose:e=!0,onExit:t=50}={}){function n(e,t,n){!1!==e&&(!0===e?t.promise:t.promise.then(()=>Q(e))).then(n.done)}return{type:"spawn.after",async action(r,{spawned:o,close:s}){const i=function(){let r=-1;const o={close:(0,It.deferred)(),closeTimeout:(0,It.deferred)(),exit:(0,It.deferred)(),exitTimeout:(0,It.deferred)()},s=Promise.race([!1===e?Lt:o.closeTimeout.promise,!1===t?Lt:o.exitTimeout.promise]);return n(e,o.close,o.closeTimeout),n(t,o.exit,o.exitTimeout),{close(e){r=e,o.close.done()},exit(e){r=e,o.exit.done()},get exitCode(){return r},result:s}}();let a=!0,c=()=>{a=!1};o.stdout?.on("data",c),o.stderr?.on("data",c),o.on("error",c),o.on("close",e=>i.close(e)),o.on("exit",e=>i.exit(e));try{await i.result,a&&await Q(50),s(i.exitCode)}catch(e){s(i.exitCode,e)}}}}(r.completion)),r.abort&&n.add(function(e){if(!e)return;const t={type:"spawn.after",action(t,n){function r(){n.kill(new E(void 0,"abort","Abort signal received"))}e.addEventListener("abort",r),n.spawned.on("close",()=>e.removeEventListener("abort",r))}};return[{type:"spawn.before",action(t,n){e.aborted&&n.kill(new E(void 0,"abort","Abort already signaled"))}},t]}(r.abort)),r.progress&&n.add(function(e){const t="--progress",n=["checkout","clone","fetch","pull","push"];return[{type:"spawn.args",action:(e,r)=>n.includes(r.method)?q(e,t):e},{type:"spawn.after",action(n,r){r.commands.includes(t)&&r.spawned.stderr?.on("data",t=>{const n=/^([\s\S]+?):\s*(\d+)% \((\d+)\/(\d+)\)/.exec(t.toString("utf8"));var o;n&&e({method:r.method,stage:(o=n[1],String(o.toLowerCase().split(" ",1))||"unknown"),progress:K(n[2]),processed:K(n[3]),total:K(n[4])})})}}]}(r.progress)),r.timeout&&n.add(function({block:e,stdErr:t=!0,stdOut:n=!0}){if(e>0)return{type:"spawn.after",action(r,o){let s;function i(){s&&clearTimeout(s),s=setTimeout(c,e)}function a(){o.spawned.stdout?.off("data",i),o.spawned.stderr?.off("data",i),o.spawned.off("exit",a),o.spawned.off("close",a),s&&clearTimeout(s)}function c(){a(),o.kill(new E(void 0,"timeout","block timeout reached"))}n&&o.spawned.stdout?.on("data",i),t&&o.spawned.stderr?.on("data",i),o.spawned.on("exit",a),o.spawned.on("close",a),i()}}}(r.timeout)),r.spawnOptions&&n.add(function(e){const t=Z(e,["uid","gid"]);return{type:"spawn.options",action:e=>({...t,...e})}}(r.spawnOptions)),n.add(Jt(Kt(!0))),r.errors&&n.add(Jt(r.errors)),function(e,t=["git"],n=!1){let r=Nt(H(t),n);e.on("binary",e=>{r=Nt(H(e),n)}),e.append("spawn.binary",()=>r.binary),e.append("spawn.args",e=>r.prefix?[r.prefix,...e]:e)}(n,r.binary,r.unsafe?.allowUnsafeCustomBinary),new Ks(r,n)}g(Zs,{esModuleFactory:()=>Qs,gitExportFactory:()=>Xs,gitInstanceFactory:()=>ei});var ti,ni,ri=u({"src/lib/git-factory.ts"(){Dt(),sn(),an(),Ge(),Ks=Ys()}}),oi={};function si(...e){let t,n=Promise.resolve();try{t=ei(...e)}catch(e){n=Promise.reject(e)}function r(){return i}function s(){return n}const i=[...ti,...ni].reduce((e,i)=>{const a=ni.includes(i),c=a?(l=i,d=t,function(...e){if("function"==typeof e[e.length])throw new TypeError("Promise interface requires that handlers are not supplied inline, trailing function not allowed in call to "+l);return n.then(function(){return new Promise(function(t,n){e.push((e,r)=>{if(e)return n((s=e)instanceof Error?s:"string"==typeof s?new Error(s):new o(s));var s;t(r)}),d[l].apply(d,e)})})}):function(e,t,n){return(...r)=>(t[e](...r),n)}(i,t,e);var l,d;const p=a?s:r;return Object.defineProperty(e,i,{enumerable:!1,configurable:!1,value:t?c:p}),e},{});return i}g(oi,{gitP:()=>si});var ii=u({"src/lib/runners/promise-wrapped.ts"(){b(),ri(),ti=["customBinary","env","outputHandler","silent"],ni=["add","addAnnotatedTag","addConfig","addRemote","addTag","applyPatch","binaryCatFile","branch","branchLocal","catFile","checkIgnore","checkIsRepo","checkout","checkoutBranch","checkoutLatestTag","checkoutLocalBranch","clean","clone","commit","cwd","deleteLocalBranch","deleteLocalBranches","diff","diffSummary","exec","fetch","getRemotes","init","listConfig","listRemote","log","merge","mergeFromTo","mirror","mv","pull","push","pushTags","raw","rebase","remote","removeRemote","reset","revert","revparse","rm","rmKeepLocal","show","stash","stashList","status","subModule","submoduleAdd","submoduleInit","submoduleUpdate","tag","tags","updateServerInfo"]}}),{gitP:ai}=(ii(),h(oi)),{esModuleFactory:ci,gitInstanceFactory:li,gitExportFactory:di}=(ri(),h(Zs)),pi=ci(di(li));e.exports=Object.assign(pi,{gitP:ai,simpleGit:pi})},736:(e,t,n)=>{e.exports=function(e){function t(e){let n,o,s,i=null;function a(...e){if(!a.enabled)return;const r=a,o=Number(new Date),s=o-(n||o);r.diff=s,r.prev=n,r.curr=o,n=o,e[0]=t.coerce(e[0]),"string"!=typeof e[0]&&e.unshift("%O");let i=0;e[0]=e[0].replace(/%([a-zA-Z%])/g,(n,o)=>{if("%%"===n)return"%";i++;const s=t.formatters[o];if("function"==typeof s){const t=e[i];n=s.call(r,t),e.splice(i,1),i--}return n}),t.formatArgs.call(r,e),(r.log||t.log).apply(r,e)}return a.namespace=e,a.useColors=t.useColors(),a.color=t.selectColor(e),a.extend=r,a.destroy=t.destroy,Object.defineProperty(a,"enabled",{enumerable:!0,configurable:!1,get:()=>null!==i?i:(o!==t.namespaces&&(o=t.namespaces,s=t.enabled(e)),s),set:e=>{i=e}}),"function"==typeof t.init&&t.init(a),a}function r(e,n){const r=t(this.namespace+(void 0===n?":":n)+e);return r.log=this.log,r}function o(e,t){let n=0,r=0,o=-1,s=0;for(;n<e.length;)if(r<t.length&&(t[r]===e[n]||"*"===t[r]))"*"===t[r]?(o=r,s=n,r++):(n++,r++);else{if(-1===o)return!1;r=o+1,s++,n=s}for(;r<t.length&&"*"===t[r];)r++;return r===t.length}return t.debug=t,t.default=t,t.coerce=function(e){return e instanceof Error?e.stack||e.message:e},t.disable=function(){const e=[...t.names,...t.skips.map(e=>"-"+e)].join(",");return t.enable(""),e},t.enable=function(e){t.save(e),t.namespaces=e,t.names=[],t.skips=[];const n=("string"==typeof e?e:"").trim().replace(/\s+/g,",").split(",").filter(Boolean);for(const e of n)"-"===e[0]?t.skips.push(e.slice(1)):t.names.push(e)},t.enabled=function(e){for(const n of t.skips)if(o(e,n))return!1;for(const n of t.names)if(o(e,n))return!0;return!1},t.humanize=n(585),t.destroy=function(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")},Object.keys(e).forEach(n=>{t[n]=e[n]}),t.names=[],t.skips=[],t.formatters={},t.selectColor=function(e){let n=0;for(let t=0;t<e.length;t++)n=(n<<5)-n+e.charCodeAt(t),n|=0;return t.colors[Math.abs(n)%t.colors.length]},t.enable(t.load()),t}},753:(e,t,n)=>{"undefined"==typeof process||"renderer"===process.type||!0===process.browser||process.__nwjs?e.exports=n(833):e.exports=n(33)},811:(e,t,n)=>{var r=n(346),o=n(640),s=n(447),i=Function.bind,a=i.bind(i);function c(e,t,n){var r=a(s,null).apply(null,n?[t,n]:[t]);e.api={remove:r},e.remove=r,["before","error","after","wrap"].forEach(function(r){var s=n?[t,r,n]:[t,r];e[r]=e.api[r]=a(o,null).apply(null,s)})}function l(){var e={registry:{}},t=r.bind(null,e);return c(t,e),t}var d=!1;function p(){return d||(console.warn('[before-after-hook]: "Hook()" repurposing warning, use "Hook.Collection()". Read more: https://git.io/upgrade-before-after-hook-to-1.4'),d=!0),l()}p.Singular=function(){var e={registry:{}},t=r.bind(null,e,"h");return c(t,e,"h"),t}.bind(),p.Collection=l.bind(),e.exports=p,e.exports.Hook=p,e.exports.Singular=p.Singular,e.exports.Collection=p.Collection},833:(e,t,n)=>{t.formatArgs=function(t){if(t[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+t[0]+(this.useColors?"%c ":" ")+"+"+e.exports.humanize(this.diff),!this.useColors)return;const n="color: "+this.color;t.splice(1,0,n,"color: inherit");let r=0,o=0;t[0].replace(/%[a-zA-Z%]/g,e=>{"%%"!==e&&(r++,"%c"===e&&(o=r))}),t.splice(o,0,n)},t.save=function(e){try{e?t.storage.setItem("debug",e):t.storage.removeItem("debug")}catch(e){}},t.load=function(){let e;try{e=t.storage.getItem("debug")||t.storage.getItem("DEBUG")}catch(e){}return!e&&"undefined"!=typeof process&&"env"in process&&(e=process.env.DEBUG),e},t.useColors=function(){if("undefined"!=typeof window&&window.process&&("renderer"===window.process.type||window.process.__nwjs))return!0;if("undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))return!1;let e;return"undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&(e=navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/))&&parseInt(e[1],10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)},t.storage=function(){try{return localStorage}catch(e){}}(),t.destroy=(()=>{let e=!1;return()=>{e||(e=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))}})(),t.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],t.log=console.debug||console.log||(()=>{}),e.exports=n(736)(t);const{formatters:r}=e.exports;r.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}}},896:e=>{"use strict";e.exports=require("fs")},926:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){for(var n in e)t.hasOwnProperty(n)||(t[n]=e[n])}(n(423))}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var s=t[r]={exports:{}};return e[r].call(s.exports,s,s.exports,n),s.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var r=n(265);module.exports=r})();
//# sourceMappingURL=extension.js.map